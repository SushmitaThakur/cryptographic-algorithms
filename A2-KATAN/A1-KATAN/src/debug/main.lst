
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/debug/main.elf:     file format elf32-littleriscv
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/debug/main.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20400000

Program Header:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x00000f50 memsz 0x00000f50 flags rwx
    LOAD off    0x00008000 vaddr 0x80000000 paddr 0x20406838 align 2**12
         filesz 0x000007c8 memsz 0x000007c8 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x000007c8 vaddr 0x800007c8 paddr 0x800007c8 align 2**12
         filesz 0x00000000 memsz 0x00000ca8 flags rw-
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00001f80 vaddr 0x20400f80 paddr 0x20400f80 align 2**12
         filesz 0x000058b6 memsz 0x000058b6 flags r-x
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002dc  20400000  20400000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  204002e0  204002e0  000012e0  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  204002ec  204002ec  000012ec  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000be8  20400368  20400368  00001368  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             000058b6  20400f80  20400f80  00001f80  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             000007c8  80000000  20406838  00008000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              000000a4  800007c8  800007c8  000087c8  2**3  ALLOC
  7 .stack            00000400  80000870  80000870  000087c8  2**4  ALLOC
  8 .heap             00000800  80000c70  80000c70  000087c8  2**3  ALLOC
  9 .debug_info       0001ee48  00000000  00000000  000087c8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     00002a31  00000000  00000000  00027610  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000b98  00000000  00000000  0002a048  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     00000988  00000000  00000000  0002abe0  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000bfb3  00000000  00000000  0002b568  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        00004b90  00000000  00000000  0003751b  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000030  00000000  00000000  0003c0ab  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002f  00000000  00000000  0003c0db  2**0  CONTENTS, READONLY
 17 .debug_frame      00002dd8  00000000  00000000  0003c10c  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
204002e0 l    d  .init_array	00000000 .init_array
204002ec l    d  .ctors	00000000 .ctors
20400368 l    d  .rodata	00000000 .rodata
20400f80 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
800007c8 l    d  .bss	00000000 .bss
80000870 l    d  .stack	00000000 .stack
80000c70 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
204000c0 l     F .init	00000000 __metal_memory_scrub
2040012e l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400240 l       .init	00000000 _skip_init
204003dc l       .rodata	00000000 argv
204003e0 l       .rodata	00000000 envp
204003e4 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20404d92 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20404dac l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20404dc6 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20404ddc l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20404df0 l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20404e02 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20404e12 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20404e28 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20404e3a l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
204005e0 l     O .rodata	00000880 pll_configs
20404e50 l     F .text	0000004e get_pll_config_freq
204050b2 l     F .text	000000ac find_closest_config
2040515e l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 findfp.c
204014bc l     F .text	00000068 std
00000000 l    df *ABS*	00000000 riscv_clint0.c
2040218c l     F .text	0000002a __metal_driver_sifive_clint0_control_base
204021b6 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
204021de l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
2040221a l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
2040237a l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
204028b8 l     F .text	00000024 __metal_driver_cpu_hartid
204028dc l     F .text	0000002a __metal_driver_cpu_timebase
20402906 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20402930 l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
204042ea l     F .text	0000002a __metal_driver_sifive_plic0_control_base
20404314 l     F .text	00000028 __metal_driver_sifive_plic0_num_interrupts
2040433c l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
20404364 l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
2040438c l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
204043ae l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
204054ec l     F .text	00000026 __metal_driver_sifive_gpio0_base
20405512 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
2040553c l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20405e10 l     F .text	0000002a __metal_driver_sifive_uart0_control_base
20405e3a l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
20405e68 l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
20405e90 l     F .text	0000002e __metal_driver_sifive_uart0_clock
20405ebe l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
20405ee8 l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
20405f10 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
204062d0 l     F .text	000000da pre_rate_change_callback_func
204063aa l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20404ba2 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20404bbc l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20404bd2 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20404be6 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20404ca2 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20404cbc l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20404cd2 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20404ce6 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20405474 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 sifive_test0.c
20405da0 l     F .text	00000026 __metal_driver_sifive_test0_base
00000000 l    df *ABS*	00000000 fixed-clock.c
20406780 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
800007a4 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
800007e0 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
800007d8 l     O .bss	00000004 init_done.1
800007dc l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
20406700 l       .text	00000000 IRQ_0
20406704 l       .text	00000000 IRQ_1
20406708 l       .text	00000000 IRQ_2
2040670c l       .text	00000000 IRQ_3
20406710 l       .text	00000000 IRQ_4
20406714 l       .text	00000000 IRQ_5
20406718 l       .text	00000000 IRQ_6
2040671c l       .text	00000000 IRQ_7
20406720 l       .text	00000000 IRQ_8
20406724 l       .text	00000000 IRQ_9
20406728 l       .text	00000000 IRQ_10
2040672c l       .text	00000000 IRQ_11
20406730 l       .text	00000000 IRQ_12
20406734 l       .text	00000000 IRQ_13
20406738 l       .text	00000000 IRQ_14
2040673c l       .text	00000000 IRQ_15
20406740 l       .text	00000000 IRQ_LC0
20406744 l       .text	00000000 IRQ_LC1
20406748 l       .text	00000000 IRQ_LC2
2040674c l       .text	00000000 IRQ_LC3
20406750 l       .text	00000000 IRQ_LC4
20406754 l       .text	00000000 IRQ_LC5
20406758 l       .text	00000000 IRQ_LC6
2040675c l       .text	00000000 IRQ_LC7
20406760 l       .text	00000000 IRQ_LC8
20406764 l       .text	00000000 IRQ_LC9
20406768 l       .text	00000000 IRQ_LC10
2040676c l       .text	00000000 IRQ_LC11
20406770 l       .text	00000000 IRQ_LC12
20406774 l       .text	00000000 IRQ_LC13
20406778 l       .text	00000000 IRQ_LC14
2040677c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
204002ec l       .init_array	00000000 metal_constructors_end
204002f0 l       .init_array	00000000 __fini_array_end
204002f0 l       .init_array	00000000 metal_destructors_end
204002f0 l       .init_array	00000000 metal_destructors_start
204002f0 l       .init_array	00000000 __fini_array_start
204002e0 l       .init_array	00000000 __init_array_end
204002e0 l       .init_array	00000000 __preinit_array_end
204002e0 l       .init_array	00000000 __init_array_start
204002e0 l       .init_array	00000000 metal_constructors_start
204002e0 l       .init_array	00000000 __preinit_array_start
20400ee8 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
20401b72 g     F .text	0000002e _isatty_r
204031d0  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20401062 g     F .text	000000da _puts_r
20401ba0 g     F .text	00000032 _lseek_r
20406542 g     F .text	00000026 metal_clock_get_rate_hz
20406230 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20402556 g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20406086 g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
2040313a  w    F .text	00000096 metal_lc3_interrupt_vector_handler
204039e2 g     F .text	00000058 __metal_valid_interrupt_id
204002e8 g     O .init_array	00000004 _use_hfxosc_ptr
20403e5a g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80000fa0 g       .data	00000000 __global_pointer$
204002ec g     F .ctors	00000024 metal_tty_init
204064ee g     F .text	00000054 _metal_clock_append_to_callbacks
20404408 g     F .text	00000046 __metal_plic0_complete_interrupt
20403c26 g     F .text	000001e0 __metal_driver_riscv_cpu_controller_interrupt_register
204002e4 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
20401aa6 g     F .text	00000036 __sseek
20401572 g     F .text	0000006a __sinit
20401148 g     F .text	000000c0 __swbuf_r
800007c8 g       .data	00000000 __tls_base
2040152e g     F .text	00000044 __sfmoreglue
20401bd4 g     F .text	00000002 __malloc_unlock
20406636 g     F .text	0000002e metal_cpu_get
80000758 g     O .data	00000020 __metal_dt_serial_10013000
2040597a g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
204003f0 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
8000086c g       .bss	00000000 metal_segment_bss_target_end
2040224a g     F .text	0000009a __metal_clint0_mtime_get
2040425e g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
2040614a g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20405730 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20405dc6 g     F .text	0000004a __metal_driver_sifive_test0_exit
20401dba g     F .text	0000000a __errno
80000000 g       .rodata	00000000 metal_segment_itim_target_start
20406056 g     F .text	00000030 __metal_driver_sifive_uart0_txready
20405fe4 g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
20400142 g     F .init	0000000e __metal_synchronize_harts
800007c8 g       .data	00000000 metal_segment_bss_target_start
204022e4 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20401b42 g     F .text	00000030 _fstat_r
20405bca g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
800007d0 g     O .bss	00000004 errno
20404f42 g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
204065b0 g     F .text	00000030 metal_clock_register_pre_rate_change_callback
204034be  w    F .text	00000096 metal_lc9_interrupt_vector_handler
204000cc  w    F .init	00000000 __metal_before_start
204020b6  w    F .text	00000014 metal_init_run
2040057c g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
20400538 g     O .rodata	00000044 __metal_driver_vtable_cpu
2040215e g     F .text	0000002e metal_uart_set_baud_rate
204063da g     F .text	000000d2 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20403ee6 g     F .text	00000070 __metal_driver_cpu_mcycle_get
20400e60 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000c70 g       .heap	00000000 metal_segment_heap_target_start
20401524 g     F .text	0000000a _cleanup_r
800007b4 g     O .data	00000008 __metal_dt_cpu_0
20403428  w    F .text	00000096 metal_lc8_interrupt_vector_handler
2040530e g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20404b06 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
2040113c g     F .text	0000000c puts
20403716  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20402ac2 g     F .text	00000018 __metal_default_exception_handler
20401c2a g     F .text	00000026 _fstat
20402884 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20403e76 g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
20402954 g     F .text	00000030 __metal_driver_cpu_get
204004d4 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
204029b6 g     F .text	00000018 __metal_interrupt_global_disable
20404b7a g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20403392  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20403554  w    F .text	00000096 metal_lc10_interrupt_vector_handler
204019fa g     F .text	0000002e _sbrk_r
20404926 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20403af6 g     F .text	0000004e __metal_exception_register
20401fc6 g     F .text	00000078 metal_init
20401bd6 g     F .text	00000032 _read_r
20404078 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
20405812 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
20402bb2 g     F .text	00000068 __metal_default_sw_handler
204065e0 g     F .text	00000030 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
20405f3a g     F .text	0000001e __metal_driver_sifive_uart0_interrupt_controller
20401c50 g     F .text	00000020 _isatty
204058d8 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
20405f76 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_enable
20400f48 g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
20400f28 g     O .rodata	00000004 _global_impure_ptr
20402c1a  w    F .text	00000092 metal_timer_interrupt_vector_handler
20401e24 g     F .text	0000005e __libc_init_array
20405852 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
204035ea  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20404d70 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20403e06 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_enable
20401cc4 g     F .text	0000007e _sbrk
204057cc g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
204064ac g     F .text	00000042 _metal_clock_call_all_callbacks
204002ba g     F .init	00000002 _init
20402a18 g     F .text	0000001a __metal_interrupt_timer_disable
204059c4 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
20404136 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20400eac g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20405fae g     F .text	00000036 __metal_driver_sifive_uart0_tx_interrupt_disable
20405918 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20401dee g     F .text	00000036 __libc_fini_array
80000790 g     O .data	0000000c __metal_dt_clock_4
20405d52 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
2040203e g     F .text	00000078 metal_fini
204040c0 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
204042ca g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20402a6a g     F .text	0000002c __metal_interrupt_local_enable
20402850 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
204020de g     F .text	00000026 metal_tty_putc
20404606 g     F .text	00000018 __metal_plic0_default_handler
20401d42  w    F .text	0000006e write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20404976 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20402cac g     F .text	00000016 __metal_default_beu_handler
2040037c g     O .rodata	00000020 __sf_fake_stderr
20402a4e g     F .text	0000001c __metal_interrupt_external_disable
20405f58 g     F .text	0000001e __metal_driver_sifive_uart0_get_interrupt_id
20403eca g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20403b44 g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
20404218 g     F .text	00000046 __metal_driver_cpu_exception_register
204029ce g     F .text	00000018 __metal_interrupt_software_enable
2040300e  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20401880 g     F .text	000000a2 _free_r
800007d4 g     O .bss	00000004 _global_atexit
204044ce g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
204038d8 g     F .text	00000058 __metal_controller_interrupt_vector_mode
20401efe g     F .text	000000c8 __call_exitprocs
80000c70 g       .stack	00000000 _sp
204002e0 g     O .init_array	00000004 _metal_tty_init_ptr
20400150 g     F .init	00000000 _start
20404bfc g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20401c70 g     F .text	0000002a _lseek
204041f8 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
2040428c g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20402a32 g     F .text	0000001c __metal_interrupt_external_enable
20401e82 g     F .text	0000007c __register_exitproc
2040617a g     F .text	00000040 __metal_driver_sifive_uart0_putc
204046c2 g     F .text	00000152 __metal_driver_riscv_plic0_init
204048d6 g     F .text	00000050 __metal_driver_riscv_plic0_enable
204057a0 g     F .text	0000002c __metal_driver_sifive_gpio0_output
204032fc  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20402984 g     F .text	0000001a __metal_myhart_id
20405d72 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20402b20  w    F .text	00000092 metal_software_interrupt_vector_handler
20403e30 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_disable
20401b14 g     F .text	0000002e _close_r
20406210 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
20402438 g     F .text	000000da __metal_driver_riscv_clint0_register
800007ac g     O .data	00000008 __metal_dt_clint_2000000
20401208 g     F .text	0000010a __swsetup_r
204015dc g     F .text	0000009c __sfp
20406568 g     F .text	00000048 metal_clock_set_rate_hz
20401a28 g     F .text	00000030 __sread
204056f0 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
204002bc  w    F .init	00000000 secondary_main
20402af2  w    F .text	0000002e metal_interrupt_vector_handler
20401bd2 g     F .text	00000002 __malloc_lock
2040601e g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20401458 g     F .text	00000064 _fflush_r
20404494 g     F .text	0000003a __metal_plic0_get_threshold
20405486 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
2040039c g     O .rodata	00000020 __sf_fake_stdin
20403a3a g     F .text	000000bc __metal_local_interrupt_enable
20402712 g     F .text	0000013e __metal_driver_riscv_clint0_command_request
204017d8 g     F .text	000000a8 memset
20403266  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20400f80 g     F .text	00000020 main
800007c8 g       .data	00000000 metal_segment_data_target_end
20406100 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
20400f2c g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
204040d4 g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20404198 g     F .text	00000060 __metal_driver_cpu_get_msip
204066a0 g     F .text	00000016 metal_shutdown
80000000 g       .rodata	00000000 metal_segment_itim_target_end
204042aa g     F .text	00000020 __metal_driver_cpu_set_exception_pc
204043cc g     F .text	0000003c __metal_plic0_claim_interrupt
204060d0 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
20401adc g     F .text	00000006 __sclose
20403680  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2040008a g     F .init	00000000 metal_mem_scrub
20401922 g     F .text	000000d8 _malloc_r
2040253a g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
800007c4 g     O .data	00000004 __metal_dt_prci_10008000
20403f56 g     F .text	00000046 __metal_driver_cpu_timebase_get
20404a6a g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20400000 g       .init	00000000 _enter
20406664 g     F .text	0000001a metal_cpu_get_current_hartid
20404cfc g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20406700 g       .text	00000000 __metal_vector_table
20400f50 g       *ABS*	00000000 metal_segment_itim_source_start
800007a8  w    O .data	00000004 __metal_cpu_table
80000088 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
204002ba g     F .init	00000002 _fini
80000000 g       .rodata	00000000 metal_segment_lim_target_start
20404530 g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
2040033c g     F .ctors	0000002a use_hfxosc
2040299e g     F .text	00000018 __metal_interrupt_global_enable
20401db0 g     F .text	0000000a atexit
20401ae2 g     F .text	00000032 _write_r
204029fe g     F .text	0000001a __metal_interrupt_timer_enable
204061ba g     F .text	00000056 __metal_driver_sifive_uart0_getc
20402660 g     F .text	000000b2 __metal_driver_riscv_clint0_disable
800007a0 g     O .data	00000004 _impure_ptr
20404002 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20401312 g     F .text	00000146 __sflush_r
2040667e g     F .text	00000022 __metal_shutdown_exit
204049a6 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
20404e9e g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
204054b4 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
204067e2 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
204025ae g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20400f44 g     O .rodata	00000004 __metal_driver_vtable_sifive_test0
20406838 g       *ABS*	00000000 metal_segment_data_source_start
20400134 g       .init	00000000 early_trap_vector
80001470 g       .heap	00000000 metal_segment_heap_target_end
20403930 g     F .text	000000b2 __metal_controller_interrupt_vector
80000784 g     O .data	0000000c __metal_dt_clock_1
80000458 g     O .data	00000300 __metal_dt_interrupt_controller_c000000
204016e2 g     F .text	0000005a __swhatbuf_r
20405892 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20402cc2 g     F .text	00000066 __metal_default_timer_handler
20401d42 g     F .text	0000006e _write
2040461e g     F .text	000000a4 __metal_plic0_handler
204030a4  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20403842  w    F .text	00000096 metal_lc15_interrupt_vector_handler
20406610 g     F .text	00000026 metal_cpu_interrupt_controller
800007c0 g     O .data	00000004 __metal_dt_test_100000
20401a58 g     F .text	0000004e __swrite
20401dc4 g     F .text	0000002a exit
20401678 g     F .text	0000006a _fwalk_reent
20406800 g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
20400f50 g       *ABS*	00000000 metal_segment_lim_source_start
204003bc g     O .rodata	00000020 __sf_fake_stdout
20400fa0 g       .text	00000000 katan
800007bc g     O .data	00000004 __metal_dt_gpio_10012000
20402ada g     F .text	00000018 __metal_default_interrupt_handler
20402130 g     F .text	0000002e metal_uart_putc
20401c9a g     F .text	0000002a _read
204020ca  w    F .text	00000014 metal_fini_run
20405776 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20402d80 g     F .text	0000017e __metal_exception_handler
20402f78  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20406822 g     F .text	00000014 _exit
20403f9c g     F .text	00000066 __metal_driver_cpu_mtime_get
2040173c g     F .text	0000009c __smakebuf_r
20402512 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
800007cc g     O .bss	00000004 __malloc_sbrk_start
204037ac  w    F .text	00000096 metal_lc14_interrupt_vector_handler
20400f34 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
204023b0 g     F .text	00000088 __metal_driver_riscv_clint0_init
800007c8 g     O .bss	00000004 __malloc_free_list
20400310 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20404092 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20404564 g     F .text	000000a2 __metal_plic0_enable
20400088  w      .init	00000000 __register_frame_info
20404c80 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
204040a6 g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20402a96 g     F .text	0000002c __metal_interrupt_local_disable
204029e6 g     F .text	00000018 __metal_interrupt_software_disable
20402104 g     F .text	0000002c metal_uart_init
80000778 g     O .data	0000000c __metal_dt_clock_3
2040444e g     F .text	00000046 __metal_plic0_set_threshold
204049ce g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
20401c08 g     F .text	00000022 _close
20400f3c g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
20404814 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20400000 <_enter>:
_enter():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	fa018193          	addi	gp,gp,-96 # 80000fa0 <__global_pointer$>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20400008:	00000297          	auipc	t0,0x0
2040000c:	01828293          	addi	t0,t0,24 # 20400020 <_enter+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20400014:	00100293          	li	t0,1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:32
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400020:	00000297          	auipc	t0,0x0
20400024:	11428293          	addi	t0,t0,276 # 20400134 <early_trap_vector>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20400028:	30529073          	csrw	mtvec,t0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2040002c:	00000113          	li	sp,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20400030:	00011463          	bnez	sp,20400038 <_enter+0x38>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:56
    la sp, _sp
20400034:	cd018113          	addi	sp,gp,-816 # 80000c70 <_sp>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
20400038:	f1402573          	csrr	a0,mhartid
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:60
    li t0, 0
2040003c:	4281                	li	t0,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:61
    la t1, __stack_size
2040003e:	40000313          	li	t1,1024
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20400042:	ff017113          	andi	sp,sp,-16
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
20400046:	00a28563          	beq	t0,a0,20400050 <_enter+0x50>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:65
    add sp, sp, t1
2040004a:	911a                	add	sp,sp,t1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:66
    addi t0, t0, 1
2040004c:	0285                	addi	t0,t0,1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:67
    j 1b
2040004e:	bfd5                	j	20400042 <_enter+0x42>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20400050:	00000097          	auipc	ra,0x0
20400054:	07c08093          	addi	ra,ra,124 # 204000cc <__metal_before_start>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:77
    beqz ra, 1f
20400058:	00008363          	beqz	ra,2040005e <_enter+0x5e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:78
    jalr ra
2040005c:	9082                	jalr	ra
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
2040005e:	f1402573          	csrr	a0,mhartid
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:85
    li a1, 0
20400062:	4581                	li	a1,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:86
    li a2, 0
20400064:	4601                	li	a2,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:87
    call _start
20400066:	20ed                	jal	20400150 <_start>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20400068:	00000093          	li	ra,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:93
    beqz ra, 1f
2040006c:	00008363          	beqz	ra,20400072 <_enter+0x72>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:94
    jalr ra
20400070:	9082                	jalr	ra
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20400072:	00000297          	auipc	t0,0x0
20400076:	00c28293          	addi	t0,t0,12 # 2040007e <_enter+0x7e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:100
     csrw mtvec, t0
2040007a:	30529073          	csrw	mtvec,t0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
2040007e:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:103
     j 1b
20400082:	bff5                	j	2040007e <_enter+0x7e>
20400084:	0000                	unimp
	...

20400088 <__register_frame_info>:
__register_frame_info():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20400088:	8082                	ret

2040008a <metal_mem_scrub>:
metal_mem_scrub():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2040008a:	46a1                	li	a3,8
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
2040008c:	3006b373          	csrrc	t1,mstatus,a3
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20400090:	4291                	li	t0,4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20400092:	0055c563          	blt	a1,t0,2040009c <metal_mem_scrub+0x12>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
20400096:	00357613          	andi	a2,a0,3
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2040009a:	ca11                	beqz	a2,204000ae <metal_mem_scrub+0x24>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
2040009c:	00050023          	sb	zero,0(a0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
204000a0:	0505                	addi	a0,a0,1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
204000a2:	15fd                	addi	a1,a1,-1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
204000a4:	feb047e3          	bgtz	a1,20400092 <metal_mem_scrub+0x8>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
204000a8:	30031073          	csrw	mstatus,t1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:39
    ret
204000ac:	8082                	ret
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
204000ae:	00052023          	sw	zero,0(a0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
204000b2:	0511                	addi	a0,a0,4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
204000b4:	15f1                	addi	a1,a1,-4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
204000b6:	fcb04ee3          	bgtz	a1,20400092 <metal_mem_scrub+0x8>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
204000ba:	30031073          	csrw	mstatus,t1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:46
    ret
204000be:	8082                	ret

204000c0 <__metal_memory_scrub>:
__metal_memory_scrub():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
204000c0:	00032023          	sw	zero,0(t1)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
204000c4:	0311                	addi	t1,t1,4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
204000c6:	fe734de3          	blt	t1,t2,204000c0 <__metal_memory_scrub>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
204000ca:	8082                	ret

204000cc <__metal_before_start>:
__metal_before_start():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
204000cc:	8406                	mv	s0,ra
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
204000ce:	dfc00297          	auipc	t0,0xdfc00
204000d2:	f3228293          	addi	t0,t0,-206 # 0 <__metal_boot_hart>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
204000d6:	04028c63          	beqz	t0,2040012e <skip_scrub>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
204000da:	dfc00297          	auipc	t0,0xdfc00
204000de:	f2628293          	addi	t0,t0,-218 # 0 <__metal_boot_hart>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
204000e2:	f14027f3          	csrr	a5,mhartid
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
204000e6:	46a1                	li	a3,8
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
204000e8:	3006b073          	csrc	mstatus,a3
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
204000ec:	830a                	mv	t1,sp
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
204000ee:	dfc00397          	auipc	t2,0xdfc00
204000f2:	31238393          	addi	t2,t2,786 # 400 <__stack_size>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
204000f6:	938a                	add	t2,t2,sp
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
204000f8:	00730363          	beq	t1,t2,204000fe <__metal_before_start+0x32>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
204000fc:	37d1                	jal	204000c0 <__metal_memory_scrub>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
204000fe:	02579863          	bne	a5,t0,2040012e <skip_scrub>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
20400102:	5fc00317          	auipc	t1,0x5fc00
20400106:	efe30313          	addi	t1,t1,-258 # 80000000 <impure_data>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
2040010a:	5fc00397          	auipc	t2,0x5fc00
2040010e:	6be38393          	addi	t2,t2,1726 # 800007c8 <__malloc_free_list>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
20400112:	00730363          	beq	t1,t2,20400118 <__metal_before_start+0x4c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20400116:	376d                	jal	204000c0 <__metal_memory_scrub>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
20400118:	5fc00317          	auipc	t1,0x5fc00
2040011c:	ee830313          	addi	t1,t1,-280 # 80000000 <impure_data>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
20400120:	5fc00397          	auipc	t2,0x5fc00
20400124:	ee038393          	addi	t2,t2,-288 # 80000000 <impure_data>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
20400128:	00730363          	beq	t1,t2,2040012e <skip_scrub>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
2040012c:	3f51                	jal	204000c0 <__metal_memory_scrub>

2040012e <skip_scrub>:
skip_scrub():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
2040012e:	80a2                	mv	ra,s0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/scrub.S:130
    ret
20400130:	8082                	ret
	...

20400134 <early_trap_vector>:
early_trap_vector():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20400134:	342022f3          	csrr	t0,mcause
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/trap.S:65
    csrr t1, mepc
20400138:	34102373          	csrr	t1,mepc
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/trap.S:66
    csrr t2, mtval
2040013c:	343023f3          	csrr	t2,mtval
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/trap.S:67
    j early_trap_vector
20400140:	bfd5                	j	20400134 <early_trap_vector>

20400142 <__metal_synchronize_harts>:
__metal_synchronize_harts():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20400142:	1141                	addi	sp,sp,-16
20400144:	c622                	sw	s0,12(sp)
20400146:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20400148:	0001                	nop
2040014a:	4432                	lw	s0,12(sp)
2040014c:	0141                	addi	sp,sp,16
2040014e:	8082                	ret

20400150 <_start>:
_start():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20400150:	8406                	mv	s0,ra
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20400152:	5fc01197          	auipc	gp,0x5fc01
20400156:	e4e18193          	addi	gp,gp,-434 # 80000fa0 <__global_pointer$>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2040015a:	00000293          	li	t0,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
2040015e:	0e551163          	bne	a0,t0,20400240 <_skip_init>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
20400162:	00006297          	auipc	t0,0x6
20400166:	6d628293          	addi	t0,t0,1750 # 20406838 <metal_segment_data_source_start>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
2040016a:	5fc00317          	auipc	t1,0x5fc00
2040016e:	e9630313          	addi	t1,t1,-362 # 80000000 <impure_data>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
20400172:	5fc00397          	auipc	t2,0x5fc00
20400176:	65638393          	addi	t2,t2,1622 # 800007c8 <__malloc_free_list>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
2040017a:	00628c63          	beq	t0,t1,20400192 <_start+0x42>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
2040017e:	00735a63          	bge	t1,t2,20400192 <_start+0x42>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20400182:	0002a503          	lw	a0,0(t0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
20400186:	0291                	addi	t0,t0,4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20400188:	00a32023          	sw	a0,0(t1)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
2040018c:	0311                	addi	t1,t1,4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
2040018e:	fe734ae3          	blt	t1,t2,20400182 <_start+0x32>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
20400192:	00001297          	auipc	t0,0x1
20400196:	dbe28293          	addi	t0,t0,-578 # 20400f50 <metal_segment_itim_source_start>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
2040019a:	5fc00317          	auipc	t1,0x5fc00
2040019e:	e6630313          	addi	t1,t1,-410 # 80000000 <impure_data>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
204001a2:	5fc00397          	auipc	t2,0x5fc00
204001a6:	e5e38393          	addi	t2,t2,-418 # 80000000 <impure_data>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
204001aa:	00628c63          	beq	t0,t1,204001c2 <_start+0x72>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
204001ae:	00735a63          	bge	t1,t2,204001c2 <_start+0x72>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001b2:	0002a503          	lw	a0,0(t0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
204001b6:	0291                	addi	t0,t0,4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
204001b8:	00a32023          	sw	a0,0(t1)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
204001bc:	0311                	addi	t1,t1,4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
204001be:	fe734ae3          	blt	t1,t2,204001b2 <_start+0x62>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
204001c2:	0000100f          	fence.i
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
204001c6:	00001297          	auipc	t0,0x1
204001ca:	d8a28293          	addi	t0,t0,-630 # 20400f50 <metal_segment_itim_source_start>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
204001ce:	5fc00317          	auipc	t1,0x5fc00
204001d2:	e3230313          	addi	t1,t1,-462 # 80000000 <impure_data>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
204001d6:	5fc00397          	auipc	t2,0x5fc00
204001da:	e2a38393          	addi	t2,t2,-470 # 80000000 <impure_data>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
204001de:	00628c63          	beq	t0,t1,204001f6 <_start+0xa6>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
204001e2:	00735a63          	bge	t1,t2,204001f6 <_start+0xa6>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001e6:	0002a503          	lw	a0,0(t0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
204001ea:	0291                	addi	t0,t0,4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
204001ec:	00a32023          	sw	a0,0(t1)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
204001f0:	0311                	addi	t1,t1,4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
204001f2:	fe734ae3          	blt	t1,t2,204001e6 <_start+0x96>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
204001f6:	0000100f          	fence.i
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
204001fa:	5fc00317          	auipc	t1,0x5fc00
204001fe:	5ce30313          	addi	t1,t1,1486 # 800007c8 <__malloc_free_list>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
20400202:	8cc18393          	addi	t2,gp,-1844 # 8000086c <metal_segment_bss_target_end>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
20400206:	00735763          	bge	t1,t2,20400214 <_start+0xc4>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2040020a:	00032023          	sw	zero,0(t1)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
2040020e:	0311                	addi	t1,t1,4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20400210:	fe734de3          	blt	t1,t2,2040020a <_start+0xba>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
20400214:	5fc00217          	auipc	tp,0x5fc00
20400218:	5b420213          	addi	tp,tp,1460 # 800007c8 <__malloc_free_list>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
2040021c:	c211                	beqz	a2,20400220 <_start+0xd0>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:167
  jalr a2
2040021e:	9602                	jalr	a2
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400220:	00002517          	auipc	a0,0x2
20400224:	bce50513          	addi	a0,a0,-1074 # 20401dee <__libc_fini_array>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:172
  call atexit
20400228:	389010ef          	jal	ra,20401db0 <atexit>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
2040022c:	3f9010ef          	jal	ra,20401e24 <__libc_init_array>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20400230:	00002517          	auipc	a0,0x2
20400234:	e9a50513          	addi	a0,a0,-358 # 204020ca <metal_fini_run>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:178
  call atexit
20400238:	379010ef          	jal	ra,20401db0 <atexit>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:179
  call metal_init_run
2040023c:	67b010ef          	jal	ra,204020b6 <metal_init_run>

20400240 <_skip_init>:
_skip_init():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400240:	3709                	jal	20400142 <__metal_synchronize_harts>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
20400242:	56fd                	li	a3,-1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
20400244:	3046b073          	csrc	mie,a3
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
20400248:	3446b073          	csrc	mip,a3
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
2040024c:	301027f3          	csrr	a5,misa
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20400250:	00042737          	lui	a4,0x42
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
20400254:	8f7d                	and	a4,a4,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
20400256:	c709                	beqz	a4,20400260 <_skip_init+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
20400258:	3036b073          	csrc	mideleg,a3
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
2040025c:	3026b073          	csrc	medeleg,a3
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20400260:	00040737          	lui	a4,0x40
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
20400264:	8f7d                	and	a4,a4,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
20400266:	c319                	beqz	a4,2040026c <_skip_init+0x2c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
20400268:	1806b073          	csrc	satp,a3
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
2040026c:	6741                	lui	a4,0x10
2040026e:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
20400272:	8ff9                	and	a5,a5,a4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
20400274:	cb89                	beqz	a5,20400286 <_skip_init+0x46>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
20400276:	300027f3          	csrr	a5,mstatus
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
2040027a:	6709                	lui	a4,0x2
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
2040027c:	8fd9                	or	a5,a5,a4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
2040027e:	30079073          	csrw	mstatus,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
20400282:	00305073          	csrwi	fcsr,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
20400286:	301027f3          	csrr	a5,misa
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
2040028a:	00200737          	lui	a4,0x200
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
2040028e:	8ff9                	and	a5,a5,a4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
20400290:	c799                	beqz	a5,2040029e <_skip_init+0x5e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
20400292:	300027f3          	csrr	a5,mstatus
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
20400296:	2007e793          	ori	a5,a5,512
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
2040029a:	30079073          	csrw	mstatus,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
2040029e:	4505                	li	a0,1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
204002a0:	00000597          	auipc	a1,0x0
204002a4:	13c58593          	addi	a1,a1,316 # 204003dc <argv>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
204002a8:	00000617          	auipc	a2,0x0
204002ac:	13860613          	addi	a2,a2,312 # 204003e0 <envp>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:236
  call secondary_main
204002b0:	2031                	jal	204002bc <secondary_main>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
204002b2:	313010ef          	jal	ra,20401dc4 <exit>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
204002b6:	80a2                	mv	ra,s0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:248
  ret
204002b8:	8082                	ret

204002ba <_fini>:
_init():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
204002ba:	8082                	ret

204002bc <secondary_main>:
secondary_main():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
204002bc:	1141                	addi	sp,sp,-16
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
204002be:	c206                	sw	ra,4(sp)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
204002c0:	f14022f3          	csrr	t0,mhartid
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
204002c4:	00000313          	li	t1,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
204002c8:	00628563          	beq	t0,t1,204002d2 <secondary_main+0x16>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:281
1:
  wfi
204002cc:	10500073          	wfi
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:282
  j 1b
204002d0:	bff5                	j	204002cc <secondary_main+0x10>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:284
2:
  call main
204002d2:	4af000ef          	jal	ra,20400f80 <main>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
204002d6:	4092                	lw	ra,4(sp)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
204002d8:	0141                	addi	sp,sp,16
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/crt0.S:291
  ret
204002da:	8082                	ret

Disassembly of section .ctors:

204002ec <metal_tty_init>:
metal_tty_init():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
204002ec:	1141                	addi	sp,sp,-16
204002ee:	c606                	sw	ra,12(sp)
204002f0:	c422                	sw	s0,8(sp)
204002f2:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
204002f4:	67f1                	lui	a5,0x1c
204002f6:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
204002fa:	800007b7          	lui	a5,0x80000
204002fe:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20400302:	603010ef          	jal	ra,20402104 <metal_uart_init>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/tty.c:30
}
20400306:	0001                	nop
20400308:	40b2                	lw	ra,12(sp)
2040030a:	4422                	lw	s0,8(sp)
2040030c:	0141                	addi	sp,sp,16
2040030e:	8082                	ret

20400310 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
20400310:	1101                	addi	sp,sp,-32
20400312:	ce06                	sw	ra,28(sp)
20400314:	cc22                	sw	s0,24(sp)
20400316:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400318:	2fb040ef          	jal	ra,20404e12 <__metal_driver_sifive_fe310_g000_pll_init_rate>
2040031c:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20400320:	fec42783          	lw	a5,-20(s0)
20400324:	c799                	beqz	a5,20400332 <metal_sifive_fe310_g000_pll_init+0x22>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
20400326:	800007b7          	lui	a5,0x80000
2040032a:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff320>
2040032e:	371040ef          	jal	ra,20404e9e <__metal_driver_sifive_fe310_g000_pll_init>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20400332:	0001                	nop
20400334:	40f2                	lw	ra,28(sp)
20400336:	4462                	lw	s0,24(sp)
20400338:	6105                	addi	sp,sp,32
2040033a:	8082                	ret

2040033c <use_hfxosc>:
use_hfxosc():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
2040033c:	1101                	addi	sp,sp,-32
2040033e:	ce06                	sw	ra,28(sp)
20400340:	cc22                	sw	s0,24(sp)
20400342:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400344:	2cf040ef          	jal	ra,20404e12 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400348:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
2040034c:	fec42583          	lw	a1,-20(s0)
20400350:	800007b7          	lui	a5,0x80000
20400354:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff320>
20400358:	210060ef          	jal	ra,20406568 <metal_clock_set_rate_hz>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
2040035c:	0001                	nop
2040035e:	40f2                	lw	ra,28(sp)
20400360:	4462                	lw	s0,24(sp)
20400362:	6105                	addi	sp,sp,32
20400364:	8082                	ret

Disassembly of section .text:

20400f80 <main>:
main():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/main.c:6
/* Copyright 2019 SiFive, Inc */
/* SPDX-License-Identifier: Apache-2.0 */
#include <stdio.h>
extern void start_assembly(void);
extern void katan(void);
int main() {
20400f80:	1141                	addi	sp,sp,-16
20400f82:	c606                	sw	ra,12(sp)
20400f84:	c422                	sw	s0,8(sp)
20400f86:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/main.c:8
	//start_assembly();
	katan();
20400f88:	2821                	jal	20400fa0 <katan>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/main.c:9
    printf("Program finished!\n");
20400f8a:	204007b7          	lui	a5,0x20400
20400f8e:	36878513          	addi	a0,a5,872 # 20400368 <use_hfxosc+0x2c>
20400f92:	226d                	jal	2040113c <puts>
20400f94:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/main.c:10
}
20400f96:	853e                	mv	a0,a5
20400f98:	40b2                	lw	ra,12(sp)
20400f9a:	4422                	lw	s0,8(sp)
20400f9c:	0141                	addi	sp,sp,16
20400f9e:	8082                	ret

20400fa0 <katan>:
katan():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:6
.section .text
.global katan
katan:

// initialize L1 and L2
li x10, 0x12345678;
20400fa0:	12345537          	lui	a0,0x12345
20400fa4:	67850513          	addi	a0,a0,1656 # 12345678 <__heap_size+0x12344e78>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:7
li x11, 0x12345678;
20400fa8:	123455b7          	lui	a1,0x12345
20400fac:	67858593          	addi	a1,a1,1656 # 12345678 <__heap_size+0x12344e78>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:12

/*** fa : L1: x10 ***/
//1
//mask x12
 li t0, 0x1000
20400fb0:	6285                	lui	t0,0x1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:13
 AND t1, x10, t0
20400fb2:	00557333          	and	t1,a0,t0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:14
 srli t1, t1, 12
20400fb6:	00c35313          	srli	t1,t1,0xc
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:17

//mask x7
 li t0, 0x80
20400fba:	08000293          	li	t0,128
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:18
 AND t2, x10, t0
20400fbe:	005573b3          	and	t2,a0,t0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:19
 srli t2, t2, 7
20400fc2:	0073d393          	srli	t2,t2,0x7
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:21

XOR x12, t1, t2
20400fc6:	00734633          	xor	a2,t1,t2
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:25

//2
//mask x8
 li t0, 0x100
20400fca:	10000293          	li	t0,256
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:26
 AND t3, x10, t0
20400fce:	00557e33          	and	t3,a0,t0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:27
 srli t3, t3, 8
20400fd2:	008e5e13          	srli	t3,t3,0x8
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:30

//mask x5
 li t0, 0x20
20400fd6:	02000293          	li	t0,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:31
 AND t4, x10, t0
20400fda:	00557eb3          	and	t4,a0,t0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:32
 srli t4, t4, 5
20400fde:	005ede93          	srli	t4,t4,0x5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:34

AND x13, t3, t4
20400fe2:	01de76b3          	and	a3,t3,t4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:38

//3 : IR=1
//mask x3
 li t0, 0x8
20400fe6:	42a1                	li	t0,8
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:39
 AND t1, x10, t0
20400fe8:	00557333          	and	t1,a0,t0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:40
 srli t1, t1, 3
20400fec:	00335313          	srli	t1,t1,0x3
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:42

ANDi x14, t1, 0x1
20400ff0:	00137713          	andi	a4,t1,1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:45

//4 : XOR 1,2
XOR x12, x12, x13
20400ff4:	8e35                	xor	a2,a2,a3
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:48

//5 : XOR 3,4
XOR x12, x14, x12
20400ff6:	8e39                	xor	a2,a2,a4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:52

//6 : XOR 5, ka
// load ka=0 or XORi
XORi x12, x12, 0x0;
20400ff8:	00064613          	xori	a2,a2,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:57

/*** fb ***/
//1
//mask y18
 li t0, 0x40000
20400ffc:	000402b7          	lui	t0,0x40
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:58
 AND t1, x11, t0
20401000:	0055f333          	and	t1,a1,t0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:59
 srli t1, t1, 18
20401004:	01235313          	srli	t1,t1,0x12
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:62

//mask y7
 li t0, 0x80
20401008:	08000293          	li	t0,128
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:63
 AND t2, x11, t0
2040100c:	0055f3b3          	and	t2,a1,t0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:64
 srli t2, t2, 7
20401010:	0073d393          	srli	t2,t2,0x7
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:66

XOR x15, t1, t2
20401014:	007347b3          	xor	a5,t1,t2
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:71

// 2
// 0001 0010 0011 0100 0101 0110 0111 1000
//mask y12
 li t0, 0x1000
20401018:	6285                	lui	t0,0x1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:72
 AND t3, x11, t0
2040101a:	0055fe33          	and	t3,a1,t0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:73
 srli t3, t3, 12
2040101e:	00ce5e13          	srli	t3,t3,0xc
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:76

//mask y10
 li t0, 0x400
20401022:	40000293          	li	t0,1024
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:77
 AND t4, x11, t0
20401026:	0055feb3          	and	t4,a1,t0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:78
 srli t4, t4, 10
2040102a:	00aede93          	srli	t4,t4,0xa
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:80

AND x16, t3, t4
2040102e:	01de7833          	and	a6,t3,t4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:84

//3
//mask y8
 li t0, 0x100
20401032:	10000293          	li	t0,256
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:85
 AND t1, x11, t0
20401036:	0055f333          	and	t1,a1,t0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:86
 srli t1, t1, 8
2040103a:	00835313          	srli	t1,t1,0x8
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:89

//mask y3
 li t0, 0x8
2040103e:	42a1                	li	t0,8
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:90
 AND t2, x11, t0
20401040:	0055f3b3          	and	t2,a1,t0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:91
 srli t2, t2, 3
20401044:	0033d393          	srli	t2,t2,0x3
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:93

AND x17, t1, t2
20401048:	007378b3          	and	a7,t1,t2
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:96

//4
XOR x15, x15, x16
2040104c:	0107c7b3          	xor	a5,a5,a6
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:98
//5
XOR x15, x15, x17
20401050:	0117c7b3          	xor	a5,a5,a7
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:100
//6 : XOR kb=1
XORi x15, x15, 0x1;
20401054:	0017c793          	xori	a5,a5,1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:106

// x15 has the result of fb which needs to be shifted to LSB of L1:x10
// x12 has the result of fa which needs to be shifted to LSB of L2:x11

//L1 = x10 -> fb= x15
slli x10, x10, 1
20401058:	0506                	slli	a0,a0,0x1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:107
ADD x10, x10, x15
2040105a:	953e                	add	a0,a0,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:110

//L2 = x11 -> fa= x12
slli x11, x11, 1
2040105c:	0586                	slli	a1,a1,0x1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:111
ADD x11, x11, x12
2040105e:	95b2                	add	a1,a1,a2
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/src/KETANV1.S:113

ret;
20401060:	8082                	ret

20401062 <_puts_r>:
_puts_r():
20401062:	1101                	addi	sp,sp,-32
20401064:	ca26                	sw	s1,20(sp)
20401066:	c84a                	sw	s2,16(sp)
20401068:	ce06                	sw	ra,28(sp)
2040106a:	cc22                	sw	s0,24(sp)
2040106c:	c64e                	sw	s3,12(sp)
2040106e:	c452                	sw	s4,8(sp)
20401070:	84aa                	mv	s1,a0
20401072:	892e                	mv	s2,a1
20401074:	c501                	beqz	a0,2040107c <_puts_r+0x1a>
20401076:	4d1c                	lw	a5,24(a0)
20401078:	e391                	bnez	a5,2040107c <_puts_r+0x1a>
2040107a:	29e5                	jal	20401572 <__sinit>
2040107c:	4c9c                	lw	a5,24(s1)
2040107e:	4480                	lw	s0,8(s1)
20401080:	e399                	bnez	a5,20401086 <_puts_r+0x24>
20401082:	8526                	mv	a0,s1
20401084:	21fd                	jal	20401572 <__sinit>
20401086:	fffff797          	auipc	a5,0xfffff
2040108a:	31678793          	addi	a5,a5,790 # 2040039c <__sf_fake_stdin>
2040108e:	02f41c63          	bne	s0,a5,204010c6 <_puts_r+0x64>
20401092:	40c0                	lw	s0,4(s1)
20401094:	00c45783          	lhu	a5,12(s0)
20401098:	8ba1                	andi	a5,a5,8
2040109a:	c7b1                	beqz	a5,204010e6 <_puts_r+0x84>
2040109c:	481c                	lw	a5,16(s0)
2040109e:	c7a1                	beqz	a5,204010e6 <_puts_r+0x84>
204010a0:	59fd                	li	s3,-1
204010a2:	4a29                	li	s4,10
204010a4:	441c                	lw	a5,8(s0)
204010a6:	00094583          	lbu	a1,0(s2)
204010aa:	17fd                	addi	a5,a5,-1
204010ac:	e9b1                	bnez	a1,20401100 <_puts_r+0x9e>
204010ae:	c41c                	sw	a5,8(s0)
204010b0:	0607de63          	bgez	a5,2040112c <_puts_r+0xca>
204010b4:	8622                	mv	a2,s0
204010b6:	45a9                	li	a1,10
204010b8:	8526                	mv	a0,s1
204010ba:	2079                	jal	20401148 <__swbuf_r>
204010bc:	57fd                	li	a5,-1
204010be:	02f50863          	beq	a0,a5,204010ee <_puts_r+0x8c>
204010c2:	4529                	li	a0,10
204010c4:	a035                	j	204010f0 <_puts_r+0x8e>
204010c6:	fffff797          	auipc	a5,0xfffff
204010ca:	2f678793          	addi	a5,a5,758 # 204003bc <__sf_fake_stdout>
204010ce:	00f41463          	bne	s0,a5,204010d6 <_puts_r+0x74>
204010d2:	4480                	lw	s0,8(s1)
204010d4:	b7c1                	j	20401094 <_puts_r+0x32>
204010d6:	fffff797          	auipc	a5,0xfffff
204010da:	2a678793          	addi	a5,a5,678 # 2040037c <__sf_fake_stderr>
204010de:	faf41be3          	bne	s0,a5,20401094 <_puts_r+0x32>
204010e2:	44c0                	lw	s0,12(s1)
204010e4:	bf45                	j	20401094 <_puts_r+0x32>
204010e6:	85a2                	mv	a1,s0
204010e8:	8526                	mv	a0,s1
204010ea:	2a39                	jal	20401208 <__swsetup_r>
204010ec:	d955                	beqz	a0,204010a0 <_puts_r+0x3e>
204010ee:	557d                	li	a0,-1
204010f0:	40f2                	lw	ra,28(sp)
204010f2:	4462                	lw	s0,24(sp)
204010f4:	44d2                	lw	s1,20(sp)
204010f6:	4942                	lw	s2,16(sp)
204010f8:	49b2                	lw	s3,12(sp)
204010fa:	4a22                	lw	s4,8(sp)
204010fc:	6105                	addi	sp,sp,32
204010fe:	8082                	ret
20401100:	c41c                	sw	a5,8(s0)
20401102:	0905                	addi	s2,s2,1
20401104:	0007d763          	bgez	a5,20401112 <_puts_r+0xb0>
20401108:	4c18                	lw	a4,24(s0)
2040110a:	00e7cb63          	blt	a5,a4,20401120 <_puts_r+0xbe>
2040110e:	01458963          	beq	a1,s4,20401120 <_puts_r+0xbe>
20401112:	401c                	lw	a5,0(s0)
20401114:	00178713          	addi	a4,a5,1
20401118:	c018                	sw	a4,0(s0)
2040111a:	00b78023          	sb	a1,0(a5)
2040111e:	b759                	j	204010a4 <_puts_r+0x42>
20401120:	8622                	mv	a2,s0
20401122:	8526                	mv	a0,s1
20401124:	2015                	jal	20401148 <__swbuf_r>
20401126:	f7351fe3          	bne	a0,s3,204010a4 <_puts_r+0x42>
2040112a:	b7d1                	j	204010ee <_puts_r+0x8c>
2040112c:	401c                	lw	a5,0(s0)
2040112e:	00178713          	addi	a4,a5,1
20401132:	c018                	sw	a4,0(s0)
20401134:	4729                	li	a4,10
20401136:	00e78023          	sb	a4,0(a5)
2040113a:	b761                	j	204010c2 <_puts_r+0x60>

2040113c <puts>:
puts():
2040113c:	85aa                	mv	a1,a0
2040113e:	5fbff517          	auipc	a0,0x5fbff
20401142:	66252503          	lw	a0,1634(a0) # 800007a0 <_impure_ptr>
20401146:	bf31                	j	20401062 <_puts_r>

20401148 <__swbuf_r>:
__swbuf_r():
20401148:	1101                	addi	sp,sp,-32
2040114a:	cc22                	sw	s0,24(sp)
2040114c:	ca26                	sw	s1,20(sp)
2040114e:	c84a                	sw	s2,16(sp)
20401150:	ce06                	sw	ra,28(sp)
20401152:	c64e                	sw	s3,12(sp)
20401154:	84aa                	mv	s1,a0
20401156:	892e                	mv	s2,a1
20401158:	8432                	mv	s0,a2
2040115a:	c501                	beqz	a0,20401162 <__swbuf_r+0x1a>
2040115c:	4d1c                	lw	a5,24(a0)
2040115e:	e391                	bnez	a5,20401162 <__swbuf_r+0x1a>
20401160:	2909                	jal	20401572 <__sinit>
20401162:	fffff797          	auipc	a5,0xfffff
20401166:	23a78793          	addi	a5,a5,570 # 2040039c <__sf_fake_stdin>
2040116a:	06f41963          	bne	s0,a5,204011dc <__swbuf_r+0x94>
2040116e:	40c0                	lw	s0,4(s1)
20401170:	4c1c                	lw	a5,24(s0)
20401172:	c41c                	sw	a5,8(s0)
20401174:	00c45783          	lhu	a5,12(s0)
20401178:	8ba1                	andi	a5,a5,8
2040117a:	c3c9                	beqz	a5,204011fc <__swbuf_r+0xb4>
2040117c:	481c                	lw	a5,16(s0)
2040117e:	cfbd                	beqz	a5,204011fc <__swbuf_r+0xb4>
20401180:	481c                	lw	a5,16(s0)
20401182:	4008                	lw	a0,0(s0)
20401184:	0ff97993          	zext.b	s3,s2
20401188:	0ff97913          	zext.b	s2,s2
2040118c:	8d1d                	sub	a0,a0,a5
2040118e:	485c                	lw	a5,20(s0)
20401190:	00f54663          	blt	a0,a5,2040119c <__swbuf_r+0x54>
20401194:	85a2                	mv	a1,s0
20401196:	8526                	mv	a0,s1
20401198:	24c1                	jal	20401458 <_fflush_r>
2040119a:	e52d                	bnez	a0,20401204 <__swbuf_r+0xbc>
2040119c:	441c                	lw	a5,8(s0)
2040119e:	0505                	addi	a0,a0,1
204011a0:	17fd                	addi	a5,a5,-1
204011a2:	c41c                	sw	a5,8(s0)
204011a4:	401c                	lw	a5,0(s0)
204011a6:	00178713          	addi	a4,a5,1
204011aa:	c018                	sw	a4,0(s0)
204011ac:	01378023          	sb	s3,0(a5)
204011b0:	485c                	lw	a5,20(s0)
204011b2:	00a78963          	beq	a5,a0,204011c4 <__swbuf_r+0x7c>
204011b6:	00c45783          	lhu	a5,12(s0)
204011ba:	8b85                	andi	a5,a5,1
204011bc:	cb81                	beqz	a5,204011cc <__swbuf_r+0x84>
204011be:	47a9                	li	a5,10
204011c0:	00f91663          	bne	s2,a5,204011cc <__swbuf_r+0x84>
204011c4:	85a2                	mv	a1,s0
204011c6:	8526                	mv	a0,s1
204011c8:	2c41                	jal	20401458 <_fflush_r>
204011ca:	ed0d                	bnez	a0,20401204 <__swbuf_r+0xbc>
204011cc:	40f2                	lw	ra,28(sp)
204011ce:	4462                	lw	s0,24(sp)
204011d0:	44d2                	lw	s1,20(sp)
204011d2:	49b2                	lw	s3,12(sp)
204011d4:	854a                	mv	a0,s2
204011d6:	4942                	lw	s2,16(sp)
204011d8:	6105                	addi	sp,sp,32
204011da:	8082                	ret
204011dc:	fffff797          	auipc	a5,0xfffff
204011e0:	1e078793          	addi	a5,a5,480 # 204003bc <__sf_fake_stdout>
204011e4:	00f41463          	bne	s0,a5,204011ec <__swbuf_r+0xa4>
204011e8:	4480                	lw	s0,8(s1)
204011ea:	b759                	j	20401170 <__swbuf_r+0x28>
204011ec:	fffff797          	auipc	a5,0xfffff
204011f0:	19078793          	addi	a5,a5,400 # 2040037c <__sf_fake_stderr>
204011f4:	f6f41ee3          	bne	s0,a5,20401170 <__swbuf_r+0x28>
204011f8:	44c0                	lw	s0,12(s1)
204011fa:	bf9d                	j	20401170 <__swbuf_r+0x28>
204011fc:	85a2                	mv	a1,s0
204011fe:	8526                	mv	a0,s1
20401200:	2021                	jal	20401208 <__swsetup_r>
20401202:	dd3d                	beqz	a0,20401180 <__swbuf_r+0x38>
20401204:	597d                	li	s2,-1
20401206:	b7d9                	j	204011cc <__swbuf_r+0x84>

20401208 <__swsetup_r>:
__swsetup_r():
20401208:	1141                	addi	sp,sp,-16
2040120a:	c422                	sw	s0,8(sp)
2040120c:	c226                	sw	s1,4(sp)
2040120e:	c04a                	sw	s2,0(sp)
20401210:	c606                	sw	ra,12(sp)
20401212:	5fbff497          	auipc	s1,0x5fbff
20401216:	58e4a483          	lw	s1,1422(s1) # 800007a0 <_impure_ptr>
2040121a:	892a                	mv	s2,a0
2040121c:	842e                	mv	s0,a1
2040121e:	c489                	beqz	s1,20401228 <__swsetup_r+0x20>
20401220:	4c9c                	lw	a5,24(s1)
20401222:	e399                	bnez	a5,20401228 <__swsetup_r+0x20>
20401224:	8526                	mv	a0,s1
20401226:	26b1                	jal	20401572 <__sinit>
20401228:	fffff797          	auipc	a5,0xfffff
2040122c:	17478793          	addi	a5,a5,372 # 2040039c <__sf_fake_stdin>
20401230:	02f41763          	bne	s0,a5,2040125e <__swsetup_r+0x56>
20401234:	40c0                	lw	s0,4(s1)
20401236:	00c41783          	lh	a5,12(s0)
2040123a:	01079713          	slli	a4,a5,0x10
2040123e:	0087f693          	andi	a3,a5,8
20401242:	8341                	srli	a4,a4,0x10
20401244:	eaad                	bnez	a3,204012b6 <__swsetup_r+0xae>
20401246:	01077693          	andi	a3,a4,16
2040124a:	ea95                	bnez	a3,2040127e <__swsetup_r+0x76>
2040124c:	4725                	li	a4,9
2040124e:	00e92023          	sw	a4,0(s2)
20401252:	0407e793          	ori	a5,a5,64
20401256:	00f41623          	sh	a5,12(s0)
2040125a:	557d                	li	a0,-1
2040125c:	a871                	j	204012f8 <__swsetup_r+0xf0>
2040125e:	fffff797          	auipc	a5,0xfffff
20401262:	15e78793          	addi	a5,a5,350 # 204003bc <__sf_fake_stdout>
20401266:	00f41463          	bne	s0,a5,2040126e <__swsetup_r+0x66>
2040126a:	4480                	lw	s0,8(s1)
2040126c:	b7e9                	j	20401236 <__swsetup_r+0x2e>
2040126e:	fffff797          	auipc	a5,0xfffff
20401272:	10e78793          	addi	a5,a5,270 # 2040037c <__sf_fake_stderr>
20401276:	fcf410e3          	bne	s0,a5,20401236 <__swsetup_r+0x2e>
2040127a:	44c0                	lw	s0,12(s1)
2040127c:	bf6d                	j	20401236 <__swsetup_r+0x2e>
2040127e:	8b11                	andi	a4,a4,4
20401280:	c70d                	beqz	a4,204012aa <__swsetup_r+0xa2>
20401282:	584c                	lw	a1,52(s0)
20401284:	c989                	beqz	a1,20401296 <__swsetup_r+0x8e>
20401286:	04440793          	addi	a5,s0,68
2040128a:	00f58463          	beq	a1,a5,20401292 <__swsetup_r+0x8a>
2040128e:	854a                	mv	a0,s2
20401290:	2bc5                	jal	20401880 <_free_r>
20401292:	02042a23          	sw	zero,52(s0)
20401296:	00c45783          	lhu	a5,12(s0)
2040129a:	00042223          	sw	zero,4(s0)
2040129e:	fdb7f793          	andi	a5,a5,-37
204012a2:	00f41623          	sh	a5,12(s0)
204012a6:	481c                	lw	a5,16(s0)
204012a8:	c01c                	sw	a5,0(s0)
204012aa:	00c45783          	lhu	a5,12(s0)
204012ae:	0087e793          	ori	a5,a5,8
204012b2:	00f41623          	sh	a5,12(s0)
204012b6:	481c                	lw	a5,16(s0)
204012b8:	ef81                	bnez	a5,204012d0 <__swsetup_r+0xc8>
204012ba:	00c45783          	lhu	a5,12(s0)
204012be:	20000713          	li	a4,512
204012c2:	2807f793          	andi	a5,a5,640
204012c6:	00e78563          	beq	a5,a4,204012d0 <__swsetup_r+0xc8>
204012ca:	85a2                	mv	a1,s0
204012cc:	854a                	mv	a0,s2
204012ce:	21bd                	jal	2040173c <__smakebuf_r>
204012d0:	00c41783          	lh	a5,12(s0)
204012d4:	01079713          	slli	a4,a5,0x10
204012d8:	0017f693          	andi	a3,a5,1
204012dc:	8341                	srli	a4,a4,0x10
204012de:	c29d                	beqz	a3,20401304 <__swsetup_r+0xfc>
204012e0:	4854                	lw	a3,20(s0)
204012e2:	00042423          	sw	zero,8(s0)
204012e6:	40d006b3          	neg	a3,a3
204012ea:	cc14                	sw	a3,24(s0)
204012ec:	4814                	lw	a3,16(s0)
204012ee:	4501                	li	a0,0
204012f0:	e681                	bnez	a3,204012f8 <__swsetup_r+0xf0>
204012f2:	08077713          	andi	a4,a4,128
204012f6:	ff31                	bnez	a4,20401252 <__swsetup_r+0x4a>
204012f8:	40b2                	lw	ra,12(sp)
204012fa:	4422                	lw	s0,8(sp)
204012fc:	4492                	lw	s1,4(sp)
204012fe:	4902                	lw	s2,0(sp)
20401300:	0141                	addi	sp,sp,16
20401302:	8082                	ret
20401304:	00277693          	andi	a3,a4,2
20401308:	4601                	li	a2,0
2040130a:	e291                	bnez	a3,2040130e <__swsetup_r+0x106>
2040130c:	4850                	lw	a2,20(s0)
2040130e:	c410                	sw	a2,8(s0)
20401310:	bff1                	j	204012ec <__swsetup_r+0xe4>

20401312 <__sflush_r>:
__sflush_r():
20401312:	00c5d783          	lhu	a5,12(a1)
20401316:	1101                	addi	sp,sp,-32
20401318:	cc22                	sw	s0,24(sp)
2040131a:	ca26                	sw	s1,20(sp)
2040131c:	ce06                	sw	ra,28(sp)
2040131e:	c84a                	sw	s2,16(sp)
20401320:	c64e                	sw	s3,12(sp)
20401322:	0087f713          	andi	a4,a5,8
20401326:	84aa                	mv	s1,a0
20401328:	842e                	mv	s0,a1
2040132a:	e375                	bnez	a4,2040140e <__sflush_r+0xfc>
2040132c:	41d8                	lw	a4,4(a1)
2040132e:	00e04763          	bgtz	a4,2040133c <__sflush_r+0x2a>
20401332:	41b8                	lw	a4,64(a1)
20401334:	00e04463          	bgtz	a4,2040133c <__sflush_r+0x2a>
20401338:	4501                	li	a0,0
2040133a:	a875                	j	204013f6 <__sflush_r+0xe4>
2040133c:	5458                	lw	a4,44(s0)
2040133e:	df6d                	beqz	a4,20401338 <__sflush_r+0x26>
20401340:	6685                	lui	a3,0x1
20401342:	0004a903          	lw	s2,0(s1)
20401346:	8ff5                	and	a5,a5,a3
20401348:	0004a023          	sw	zero,0(s1)
2040134c:	cfa5                	beqz	a5,204013c4 <__sflush_r+0xb2>
2040134e:	4868                	lw	a0,84(s0)
20401350:	00c45783          	lhu	a5,12(s0)
20401354:	8b91                	andi	a5,a5,4
20401356:	c799                	beqz	a5,20401364 <__sflush_r+0x52>
20401358:	405c                	lw	a5,4(s0)
2040135a:	8d1d                	sub	a0,a0,a5
2040135c:	585c                	lw	a5,52(s0)
2040135e:	c399                	beqz	a5,20401364 <__sflush_r+0x52>
20401360:	403c                	lw	a5,64(s0)
20401362:	8d1d                	sub	a0,a0,a5
20401364:	545c                	lw	a5,44(s0)
20401366:	500c                	lw	a1,32(s0)
20401368:	862a                	mv	a2,a0
2040136a:	4681                	li	a3,0
2040136c:	8526                	mv	a0,s1
2040136e:	9782                	jalr	a5
20401370:	57fd                	li	a5,-1
20401372:	00c45703          	lhu	a4,12(s0)
20401376:	00f51d63          	bne	a0,a5,20401390 <__sflush_r+0x7e>
2040137a:	4094                	lw	a3,0(s1)
2040137c:	47f5                	li	a5,29
2040137e:	08d7e363          	bltu	a5,a3,20401404 <__sflush_r+0xf2>
20401382:	204007b7          	lui	a5,0x20400
20401386:	0785                	addi	a5,a5,1
20401388:	00d7d7b3          	srl	a5,a5,a3
2040138c:	8b85                	andi	a5,a5,1
2040138e:	cbbd                	beqz	a5,20401404 <__sflush_r+0xf2>
20401390:	481c                	lw	a5,16(s0)
20401392:	00042223          	sw	zero,4(s0)
20401396:	c01c                	sw	a5,0(s0)
20401398:	6785                	lui	a5,0x1
2040139a:	8f7d                	and	a4,a4,a5
2040139c:	c719                	beqz	a4,204013aa <__sflush_r+0x98>
2040139e:	57fd                	li	a5,-1
204013a0:	00f51463          	bne	a0,a5,204013a8 <__sflush_r+0x96>
204013a4:	409c                	lw	a5,0(s1)
204013a6:	e391                	bnez	a5,204013aa <__sflush_r+0x98>
204013a8:	c868                	sw	a0,84(s0)
204013aa:	584c                	lw	a1,52(s0)
204013ac:	0124a023          	sw	s2,0(s1)
204013b0:	d5c1                	beqz	a1,20401338 <__sflush_r+0x26>
204013b2:	04440793          	addi	a5,s0,68
204013b6:	00f58463          	beq	a1,a5,204013be <__sflush_r+0xac>
204013ba:	8526                	mv	a0,s1
204013bc:	21d1                	jal	20401880 <_free_r>
204013be:	02042a23          	sw	zero,52(s0)
204013c2:	bf9d                	j	20401338 <__sflush_r+0x26>
204013c4:	500c                	lw	a1,32(s0)
204013c6:	4685                	li	a3,1
204013c8:	4601                	li	a2,0
204013ca:	8526                	mv	a0,s1
204013cc:	9702                	jalr	a4
204013ce:	57fd                	li	a5,-1
204013d0:	f8f510e3          	bne	a0,a5,20401350 <__sflush_r+0x3e>
204013d4:	409c                	lw	a5,0(s1)
204013d6:	dfad                	beqz	a5,20401350 <__sflush_r+0x3e>
204013d8:	4775                	li	a4,29
204013da:	00e78563          	beq	a5,a4,204013e4 <__sflush_r+0xd2>
204013de:	4759                	li	a4,22
204013e0:	00e79563          	bne	a5,a4,204013ea <__sflush_r+0xd8>
204013e4:	0124a023          	sw	s2,0(s1)
204013e8:	bf81                	j	20401338 <__sflush_r+0x26>
204013ea:	00c45783          	lhu	a5,12(s0)
204013ee:	0407e793          	ori	a5,a5,64
204013f2:	00f41623          	sh	a5,12(s0)
204013f6:	40f2                	lw	ra,28(sp)
204013f8:	4462                	lw	s0,24(sp)
204013fa:	44d2                	lw	s1,20(sp)
204013fc:	4942                	lw	s2,16(sp)
204013fe:	49b2                	lw	s3,12(sp)
20401400:	6105                	addi	sp,sp,32
20401402:	8082                	ret
20401404:	04076713          	ori	a4,a4,64
20401408:	00e41623          	sh	a4,12(s0)
2040140c:	b7ed                	j	204013f6 <__sflush_r+0xe4>
2040140e:	0105a983          	lw	s3,16(a1)
20401412:	f20983e3          	beqz	s3,20401338 <__sflush_r+0x26>
20401416:	0005a903          	lw	s2,0(a1)
2040141a:	8b8d                	andi	a5,a5,3
2040141c:	0135a023          	sw	s3,0(a1)
20401420:	41390933          	sub	s2,s2,s3
20401424:	4701                	li	a4,0
20401426:	e391                	bnez	a5,2040142a <__sflush_r+0x118>
20401428:	49d8                	lw	a4,20(a1)
2040142a:	c418                	sw	a4,8(s0)
2040142c:	f12056e3          	blez	s2,20401338 <__sflush_r+0x26>
20401430:	541c                	lw	a5,40(s0)
20401432:	500c                	lw	a1,32(s0)
20401434:	86ca                	mv	a3,s2
20401436:	864e                	mv	a2,s3
20401438:	8526                	mv	a0,s1
2040143a:	9782                	jalr	a5
2040143c:	00a04a63          	bgtz	a0,20401450 <__sflush_r+0x13e>
20401440:	00c45783          	lhu	a5,12(s0)
20401444:	557d                	li	a0,-1
20401446:	0407e793          	ori	a5,a5,64
2040144a:	00f41623          	sh	a5,12(s0)
2040144e:	b765                	j	204013f6 <__sflush_r+0xe4>
20401450:	99aa                	add	s3,s3,a0
20401452:	40a90933          	sub	s2,s2,a0
20401456:	bfd9                	j	2040142c <__sflush_r+0x11a>

20401458 <_fflush_r>:
_fflush_r():
20401458:	499c                	lw	a5,16(a1)
2040145a:	cfb9                	beqz	a5,204014b8 <_fflush_r+0x60>
2040145c:	1101                	addi	sp,sp,-32
2040145e:	cc22                	sw	s0,24(sp)
20401460:	ce06                	sw	ra,28(sp)
20401462:	842a                	mv	s0,a0
20401464:	c511                	beqz	a0,20401470 <_fflush_r+0x18>
20401466:	4d1c                	lw	a5,24(a0)
20401468:	e781                	bnez	a5,20401470 <_fflush_r+0x18>
2040146a:	c62e                	sw	a1,12(sp)
2040146c:	2219                	jal	20401572 <__sinit>
2040146e:	45b2                	lw	a1,12(sp)
20401470:	fffff797          	auipc	a5,0xfffff
20401474:	f2c78793          	addi	a5,a5,-212 # 2040039c <__sf_fake_stdin>
20401478:	00f59b63          	bne	a1,a5,2040148e <_fflush_r+0x36>
2040147c:	404c                	lw	a1,4(s0)
2040147e:	00c59783          	lh	a5,12(a1)
20401482:	c795                	beqz	a5,204014ae <_fflush_r+0x56>
20401484:	8522                	mv	a0,s0
20401486:	4462                	lw	s0,24(sp)
20401488:	40f2                	lw	ra,28(sp)
2040148a:	6105                	addi	sp,sp,32
2040148c:	b559                	j	20401312 <__sflush_r>
2040148e:	fffff797          	auipc	a5,0xfffff
20401492:	f2e78793          	addi	a5,a5,-210 # 204003bc <__sf_fake_stdout>
20401496:	00f59463          	bne	a1,a5,2040149e <_fflush_r+0x46>
2040149a:	440c                	lw	a1,8(s0)
2040149c:	b7cd                	j	2040147e <_fflush_r+0x26>
2040149e:	fffff797          	auipc	a5,0xfffff
204014a2:	ede78793          	addi	a5,a5,-290 # 2040037c <__sf_fake_stderr>
204014a6:	fcf59ce3          	bne	a1,a5,2040147e <_fflush_r+0x26>
204014aa:	444c                	lw	a1,12(s0)
204014ac:	bfc9                	j	2040147e <_fflush_r+0x26>
204014ae:	40f2                	lw	ra,28(sp)
204014b0:	4462                	lw	s0,24(sp)
204014b2:	4501                	li	a0,0
204014b4:	6105                	addi	sp,sp,32
204014b6:	8082                	ret
204014b8:	4501                	li	a0,0
204014ba:	8082                	ret

204014bc <std>:
std():
204014bc:	1141                	addi	sp,sp,-16
204014be:	c422                	sw	s0,8(sp)
204014c0:	c606                	sw	ra,12(sp)
204014c2:	842a                	mv	s0,a0
204014c4:	00b51623          	sh	a1,12(a0)
204014c8:	00c51723          	sh	a2,14(a0)
204014cc:	00052023          	sw	zero,0(a0)
204014d0:	00052223          	sw	zero,4(a0)
204014d4:	00052423          	sw	zero,8(a0)
204014d8:	06052223          	sw	zero,100(a0)
204014dc:	00052823          	sw	zero,16(a0)
204014e0:	00052a23          	sw	zero,20(a0)
204014e4:	00052c23          	sw	zero,24(a0)
204014e8:	4621                	li	a2,8
204014ea:	4581                	li	a1,0
204014ec:	05c50513          	addi	a0,a0,92
204014f0:	24e5                	jal	204017d8 <memset>
204014f2:	00000797          	auipc	a5,0x0
204014f6:	53678793          	addi	a5,a5,1334 # 20401a28 <__sread>
204014fa:	d05c                	sw	a5,36(s0)
204014fc:	00000797          	auipc	a5,0x0
20401500:	55c78793          	addi	a5,a5,1372 # 20401a58 <__swrite>
20401504:	d41c                	sw	a5,40(s0)
20401506:	00000797          	auipc	a5,0x0
2040150a:	5a078793          	addi	a5,a5,1440 # 20401aa6 <__sseek>
2040150e:	d45c                	sw	a5,44(s0)
20401510:	00000797          	auipc	a5,0x0
20401514:	5cc78793          	addi	a5,a5,1484 # 20401adc <__sclose>
20401518:	40b2                	lw	ra,12(sp)
2040151a:	d000                	sw	s0,32(s0)
2040151c:	d81c                	sw	a5,48(s0)
2040151e:	4422                	lw	s0,8(sp)
20401520:	0141                	addi	sp,sp,16
20401522:	8082                	ret

20401524 <_cleanup_r>:
_cleanup_r():
20401524:	00000597          	auipc	a1,0x0
20401528:	f3458593          	addi	a1,a1,-204 # 20401458 <_fflush_r>
2040152c:	a2b1                	j	20401678 <_fwalk_reent>

2040152e <__sfmoreglue>:
__sfmoreglue():
2040152e:	1141                	addi	sp,sp,-16
20401530:	c226                	sw	s1,4(sp)
20401532:	06800613          	li	a2,104
20401536:	fff58493          	addi	s1,a1,-1
2040153a:	02c484b3          	mul	s1,s1,a2
2040153e:	c04a                	sw	s2,0(sp)
20401540:	892e                	mv	s2,a1
20401542:	c422                	sw	s0,8(sp)
20401544:	c606                	sw	ra,12(sp)
20401546:	07448593          	addi	a1,s1,116
2040154a:	2ee1                	jal	20401922 <_malloc_r>
2040154c:	842a                	mv	s0,a0
2040154e:	c919                	beqz	a0,20401564 <__sfmoreglue+0x36>
20401550:	00052023          	sw	zero,0(a0)
20401554:	01252223          	sw	s2,4(a0)
20401558:	0531                	addi	a0,a0,12
2040155a:	c408                	sw	a0,8(s0)
2040155c:	06848613          	addi	a2,s1,104
20401560:	4581                	li	a1,0
20401562:	2c9d                	jal	204017d8 <memset>
20401564:	40b2                	lw	ra,12(sp)
20401566:	8522                	mv	a0,s0
20401568:	4422                	lw	s0,8(sp)
2040156a:	4492                	lw	s1,4(sp)
2040156c:	4902                	lw	s2,0(sp)
2040156e:	0141                	addi	sp,sp,16
20401570:	8082                	ret

20401572 <__sinit>:
__sinit():
20401572:	4d1c                	lw	a5,24(a0)
20401574:	e3bd                	bnez	a5,204015da <__sinit+0x68>
20401576:	1141                	addi	sp,sp,-16
20401578:	c422                	sw	s0,8(sp)
2040157a:	c606                	sw	ra,12(sp)
2040157c:	00000797          	auipc	a5,0x0
20401580:	fa878793          	addi	a5,a5,-88 # 20401524 <_cleanup_r>
20401584:	d51c                	sw	a5,40(a0)
20401586:	04052423          	sw	zero,72(a0)
2040158a:	04052623          	sw	zero,76(a0)
2040158e:	04052823          	sw	zero,80(a0)
20401592:	00000797          	auipc	a5,0x0
20401596:	9967a783          	lw	a5,-1642(a5) # 20400f28 <_global_impure_ptr>
2040159a:	842a                	mv	s0,a0
2040159c:	00f51463          	bne	a0,a5,204015a4 <__sinit+0x32>
204015a0:	4785                	li	a5,1
204015a2:	cd1c                	sw	a5,24(a0)
204015a4:	8522                	mv	a0,s0
204015a6:	281d                	jal	204015dc <__sfp>
204015a8:	c048                	sw	a0,4(s0)
204015aa:	8522                	mv	a0,s0
204015ac:	2805                	jal	204015dc <__sfp>
204015ae:	c408                	sw	a0,8(s0)
204015b0:	8522                	mv	a0,s0
204015b2:	202d                	jal	204015dc <__sfp>
204015b4:	c448                	sw	a0,12(s0)
204015b6:	4048                	lw	a0,4(s0)
204015b8:	4601                	li	a2,0
204015ba:	4591                	li	a1,4
204015bc:	3701                	jal	204014bc <std>
204015be:	4408                	lw	a0,8(s0)
204015c0:	4605                	li	a2,1
204015c2:	45a5                	li	a1,9
204015c4:	3de5                	jal	204014bc <std>
204015c6:	4448                	lw	a0,12(s0)
204015c8:	4609                	li	a2,2
204015ca:	45c9                	li	a1,18
204015cc:	3dc5                	jal	204014bc <std>
204015ce:	4785                	li	a5,1
204015d0:	40b2                	lw	ra,12(sp)
204015d2:	cc1c                	sw	a5,24(s0)
204015d4:	4422                	lw	s0,8(sp)
204015d6:	0141                	addi	sp,sp,16
204015d8:	8082                	ret
204015da:	8082                	ret

204015dc <__sfp>:
__sfp():
204015dc:	1141                	addi	sp,sp,-16
204015de:	c226                	sw	s1,4(sp)
204015e0:	00000497          	auipc	s1,0x0
204015e4:	9484a483          	lw	s1,-1720(s1) # 20400f28 <_global_impure_ptr>
204015e8:	4c9c                	lw	a5,24(s1)
204015ea:	c04a                	sw	s2,0(sp)
204015ec:	c606                	sw	ra,12(sp)
204015ee:	c422                	sw	s0,8(sp)
204015f0:	892a                	mv	s2,a0
204015f2:	e399                	bnez	a5,204015f8 <__sfp+0x1c>
204015f4:	8526                	mv	a0,s1
204015f6:	3fb5                	jal	20401572 <__sinit>
204015f8:	04848493          	addi	s1,s1,72
204015fc:	4480                	lw	s0,8(s1)
204015fe:	40dc                	lw	a5,4(s1)
20401600:	17fd                	addi	a5,a5,-1
20401602:	0007d663          	bgez	a5,2040160e <__sfp+0x32>
20401606:	409c                	lw	a5,0(s1)
20401608:	cfb1                	beqz	a5,20401664 <__sfp+0x88>
2040160a:	4084                	lw	s1,0(s1)
2040160c:	bfc5                	j	204015fc <__sfp+0x20>
2040160e:	00c41703          	lh	a4,12(s0)
20401612:	e731                	bnez	a4,2040165e <__sfp+0x82>
20401614:	77c1                	lui	a5,0xffff0
20401616:	0785                	addi	a5,a5,1
20401618:	06042223          	sw	zero,100(s0)
2040161c:	00042023          	sw	zero,0(s0)
20401620:	00042223          	sw	zero,4(s0)
20401624:	00042423          	sw	zero,8(s0)
20401628:	c45c                	sw	a5,12(s0)
2040162a:	00042823          	sw	zero,16(s0)
2040162e:	00042a23          	sw	zero,20(s0)
20401632:	00042c23          	sw	zero,24(s0)
20401636:	4621                	li	a2,8
20401638:	4581                	li	a1,0
2040163a:	05c40513          	addi	a0,s0,92
2040163e:	2a69                	jal	204017d8 <memset>
20401640:	02042a23          	sw	zero,52(s0)
20401644:	02042c23          	sw	zero,56(s0)
20401648:	04042423          	sw	zero,72(s0)
2040164c:	04042623          	sw	zero,76(s0)
20401650:	40b2                	lw	ra,12(sp)
20401652:	8522                	mv	a0,s0
20401654:	4422                	lw	s0,8(sp)
20401656:	4492                	lw	s1,4(sp)
20401658:	4902                	lw	s2,0(sp)
2040165a:	0141                	addi	sp,sp,16
2040165c:	8082                	ret
2040165e:	06840413          	addi	s0,s0,104
20401662:	bf79                	j	20401600 <__sfp+0x24>
20401664:	4591                	li	a1,4
20401666:	854a                	mv	a0,s2
20401668:	35d9                	jal	2040152e <__sfmoreglue>
2040166a:	c088                	sw	a0,0(s1)
2040166c:	842a                	mv	s0,a0
2040166e:	fd51                	bnez	a0,2040160a <__sfp+0x2e>
20401670:	47b1                	li	a5,12
20401672:	00f92023          	sw	a5,0(s2)
20401676:	bfe9                	j	20401650 <__sfp+0x74>

20401678 <_fwalk_reent>:
_fwalk_reent():
20401678:	7179                	addi	sp,sp,-48
2040167a:	d422                	sw	s0,40(sp)
2040167c:	d04a                	sw	s2,32(sp)
2040167e:	ce4e                	sw	s3,28(sp)
20401680:	cc52                	sw	s4,24(sp)
20401682:	c85a                	sw	s6,16(sp)
20401684:	c65e                	sw	s7,12(sp)
20401686:	d606                	sw	ra,44(sp)
20401688:	d226                	sw	s1,36(sp)
2040168a:	ca56                	sw	s5,20(sp)
2040168c:	892a                	mv	s2,a0
2040168e:	8a2e                	mv	s4,a1
20401690:	04850413          	addi	s0,a0,72
20401694:	4981                	li	s3,0
20401696:	4b05                	li	s6,1
20401698:	5bfd                	li	s7,-1
2040169a:	4404                	lw	s1,8(s0)
2040169c:	00442a83          	lw	s5,4(s0)
204016a0:	1afd                	addi	s5,s5,-1
204016a2:	020ad063          	bgez	s5,204016c2 <_fwalk_reent+0x4a>
204016a6:	4000                	lw	s0,0(s0)
204016a8:	f86d                	bnez	s0,2040169a <_fwalk_reent+0x22>
204016aa:	50b2                	lw	ra,44(sp)
204016ac:	5422                	lw	s0,40(sp)
204016ae:	5492                	lw	s1,36(sp)
204016b0:	5902                	lw	s2,32(sp)
204016b2:	4a62                	lw	s4,24(sp)
204016b4:	4ad2                	lw	s5,20(sp)
204016b6:	4b42                	lw	s6,16(sp)
204016b8:	4bb2                	lw	s7,12(sp)
204016ba:	854e                	mv	a0,s3
204016bc:	49f2                	lw	s3,28(sp)
204016be:	6145                	addi	sp,sp,48
204016c0:	8082                	ret
204016c2:	00c4d783          	lhu	a5,12(s1)
204016c6:	00fb7b63          	bgeu	s6,a5,204016dc <_fwalk_reent+0x64>
204016ca:	00e49783          	lh	a5,14(s1)
204016ce:	01778763          	beq	a5,s7,204016dc <_fwalk_reent+0x64>
204016d2:	85a6                	mv	a1,s1
204016d4:	854a                	mv	a0,s2
204016d6:	9a02                	jalr	s4
204016d8:	00a9e9b3          	or	s3,s3,a0
204016dc:	06848493          	addi	s1,s1,104
204016e0:	b7c1                	j	204016a0 <_fwalk_reent+0x28>

204016e2 <__swhatbuf_r>:
__swhatbuf_r():
204016e2:	7159                	addi	sp,sp,-112
204016e4:	d0ca                	sw	s2,96(sp)
204016e6:	892e                	mv	s2,a1
204016e8:	00e59583          	lh	a1,14(a1)
204016ec:	d4a2                	sw	s0,104(sp)
204016ee:	d2a6                	sw	s1,100(sp)
204016f0:	d686                	sw	ra,108(sp)
204016f2:	8432                	mv	s0,a2
204016f4:	84b6                	mv	s1,a3
204016f6:	0005dc63          	bgez	a1,2040170e <__swhatbuf_r+0x2c>
204016fa:	00c91783          	lh	a5,12(s2)
204016fe:	0004a023          	sw	zero,0(s1)
20401702:	0807f793          	andi	a5,a5,128
20401706:	e38d                	bnez	a5,20401728 <__swhatbuf_r+0x46>
20401708:	40000793          	li	a5,1024
2040170c:	a005                	j	2040172c <__swhatbuf_r+0x4a>
2040170e:	0030                	addi	a2,sp,8
20401710:	290d                	jal	20401b42 <_fstat_r>
20401712:	fe0544e3          	bltz	a0,204016fa <__swhatbuf_r+0x18>
20401716:	4732                	lw	a4,12(sp)
20401718:	67bd                	lui	a5,0xf
2040171a:	8ff9                	and	a5,a5,a4
2040171c:	7779                	lui	a4,0xffffe
2040171e:	97ba                	add	a5,a5,a4
20401720:	0017b793          	seqz	a5,a5
20401724:	c09c                	sw	a5,0(s1)
20401726:	b7cd                	j	20401708 <__swhatbuf_r+0x26>
20401728:	04000793          	li	a5,64
2040172c:	50b6                	lw	ra,108(sp)
2040172e:	c01c                	sw	a5,0(s0)
20401730:	5426                	lw	s0,104(sp)
20401732:	5496                	lw	s1,100(sp)
20401734:	5906                	lw	s2,96(sp)
20401736:	4501                	li	a0,0
20401738:	6165                	addi	sp,sp,112
2040173a:	8082                	ret

2040173c <__smakebuf_r>:
__smakebuf_r():
2040173c:	00c5d783          	lhu	a5,12(a1)
20401740:	1101                	addi	sp,sp,-32
20401742:	cc22                	sw	s0,24(sp)
20401744:	ce06                	sw	ra,28(sp)
20401746:	ca26                	sw	s1,20(sp)
20401748:	c84a                	sw	s2,16(sp)
2040174a:	8b89                	andi	a5,a5,2
2040174c:	842e                	mv	s0,a1
2040174e:	cf89                	beqz	a5,20401768 <__smakebuf_r+0x2c>
20401750:	04740793          	addi	a5,s0,71
20401754:	c01c                	sw	a5,0(s0)
20401756:	c81c                	sw	a5,16(s0)
20401758:	4785                	li	a5,1
2040175a:	c85c                	sw	a5,20(s0)
2040175c:	40f2                	lw	ra,28(sp)
2040175e:	4462                	lw	s0,24(sp)
20401760:	44d2                	lw	s1,20(sp)
20401762:	4942                	lw	s2,16(sp)
20401764:	6105                	addi	sp,sp,32
20401766:	8082                	ret
20401768:	0074                	addi	a3,sp,12
2040176a:	0030                	addi	a2,sp,8
2040176c:	892a                	mv	s2,a0
2040176e:	3f95                	jal	204016e2 <__swhatbuf_r>
20401770:	45a2                	lw	a1,8(sp)
20401772:	84aa                	mv	s1,a0
20401774:	854a                	mv	a0,s2
20401776:	2275                	jal	20401922 <_malloc_r>
20401778:	ed01                	bnez	a0,20401790 <__smakebuf_r+0x54>
2040177a:	00c41783          	lh	a5,12(s0)
2040177e:	2007f713          	andi	a4,a5,512
20401782:	ff69                	bnez	a4,2040175c <__smakebuf_r+0x20>
20401784:	9bf1                	andi	a5,a5,-4
20401786:	0027e793          	ori	a5,a5,2
2040178a:	00f41623          	sh	a5,12(s0)
2040178e:	b7c9                	j	20401750 <__smakebuf_r+0x14>
20401790:	00000797          	auipc	a5,0x0
20401794:	d9478793          	addi	a5,a5,-620 # 20401524 <_cleanup_r>
20401798:	02f92423          	sw	a5,40(s2)
2040179c:	00c45783          	lhu	a5,12(s0)
204017a0:	c008                	sw	a0,0(s0)
204017a2:	c808                	sw	a0,16(s0)
204017a4:	0807e793          	ori	a5,a5,128
204017a8:	00f41623          	sh	a5,12(s0)
204017ac:	47a2                	lw	a5,8(sp)
204017ae:	c85c                	sw	a5,20(s0)
204017b0:	47b2                	lw	a5,12(sp)
204017b2:	cf89                	beqz	a5,204017cc <__smakebuf_r+0x90>
204017b4:	00e41583          	lh	a1,14(s0)
204017b8:	854a                	mv	a0,s2
204017ba:	2e65                	jal	20401b72 <_isatty_r>
204017bc:	c901                	beqz	a0,204017cc <__smakebuf_r+0x90>
204017be:	00c45783          	lhu	a5,12(s0)
204017c2:	9bf1                	andi	a5,a5,-4
204017c4:	0017e793          	ori	a5,a5,1
204017c8:	00f41623          	sh	a5,12(s0)
204017cc:	00c45503          	lhu	a0,12(s0)
204017d0:	8cc9                	or	s1,s1,a0
204017d2:	00941623          	sh	s1,12(s0)
204017d6:	b759                	j	2040175c <__smakebuf_r+0x20>

204017d8 <memset>:
memset():
204017d8:	433d                	li	t1,15
204017da:	872a                	mv	a4,a0
204017dc:	02c37363          	bgeu	t1,a2,20401802 <memset+0x2a>
204017e0:	00f77793          	andi	a5,a4,15
204017e4:	efbd                	bnez	a5,20401862 <memset+0x8a>
204017e6:	e5ad                	bnez	a1,20401850 <memset+0x78>
204017e8:	ff067693          	andi	a3,a2,-16
204017ec:	8a3d                	andi	a2,a2,15
204017ee:	96ba                	add	a3,a3,a4
204017f0:	c30c                	sw	a1,0(a4)
204017f2:	c34c                	sw	a1,4(a4)
204017f4:	c70c                	sw	a1,8(a4)
204017f6:	c74c                	sw	a1,12(a4)
204017f8:	0741                	addi	a4,a4,16
204017fa:	fed76be3          	bltu	a4,a3,204017f0 <memset+0x18>
204017fe:	e211                	bnez	a2,20401802 <memset+0x2a>
20401800:	8082                	ret
20401802:	40c306b3          	sub	a3,t1,a2
20401806:	068a                	slli	a3,a3,0x2
20401808:	00000297          	auipc	t0,0x0
2040180c:	9696                	add	a3,a3,t0
2040180e:	00a68067          	jr	10(a3) # 100a <__heap_size+0x80a>
20401812:	00b70723          	sb	a1,14(a4) # ffffe00e <metal_segment_heap_target_end+0x7fffcb9e>
20401816:	00b706a3          	sb	a1,13(a4)
2040181a:	00b70623          	sb	a1,12(a4)
2040181e:	00b705a3          	sb	a1,11(a4)
20401822:	00b70523          	sb	a1,10(a4)
20401826:	00b704a3          	sb	a1,9(a4)
2040182a:	00b70423          	sb	a1,8(a4)
2040182e:	00b703a3          	sb	a1,7(a4)
20401832:	00b70323          	sb	a1,6(a4)
20401836:	00b702a3          	sb	a1,5(a4)
2040183a:	00b70223          	sb	a1,4(a4)
2040183e:	00b701a3          	sb	a1,3(a4)
20401842:	00b70123          	sb	a1,2(a4)
20401846:	00b700a3          	sb	a1,1(a4)
2040184a:	00b70023          	sb	a1,0(a4)
2040184e:	8082                	ret
20401850:	0ff5f593          	zext.b	a1,a1
20401854:	00859693          	slli	a3,a1,0x8
20401858:	8dd5                	or	a1,a1,a3
2040185a:	01059693          	slli	a3,a1,0x10
2040185e:	8dd5                	or	a1,a1,a3
20401860:	b761                	j	204017e8 <memset+0x10>
20401862:	00279693          	slli	a3,a5,0x2
20401866:	00000297          	auipc	t0,0x0
2040186a:	9696                	add	a3,a3,t0
2040186c:	8286                	mv	t0,ra
2040186e:	fa8680e7          	jalr	-88(a3)
20401872:	8096                	mv	ra,t0
20401874:	17c1                	addi	a5,a5,-16
20401876:	8f1d                	sub	a4,a4,a5
20401878:	963e                	add	a2,a2,a5
2040187a:	f8c374e3          	bgeu	t1,a2,20401802 <memset+0x2a>
2040187e:	b7a5                	j	204017e6 <memset+0xe>

20401880 <_free_r>:
_free_r():
20401880:	c1c5                	beqz	a1,20401920 <_free_r+0xa0>
20401882:	ffc5a783          	lw	a5,-4(a1)
20401886:	1101                	addi	sp,sp,-32
20401888:	cc22                	sw	s0,24(sp)
2040188a:	ce06                	sw	ra,28(sp)
2040188c:	ffc58413          	addi	s0,a1,-4
20401890:	0007d363          	bgez	a5,20401896 <_free_r+0x16>
20401894:	943e                	add	s0,s0,a5
20401896:	c62a                	sw	a0,12(sp)
20401898:	2e2d                	jal	20401bd2 <__malloc_lock>
2040189a:	5fbff717          	auipc	a4,0x5fbff
2040189e:	f2e70713          	addi	a4,a4,-210 # 800007c8 <__malloc_free_list>
204018a2:	431c                	lw	a5,0(a4)
204018a4:	4532                	lw	a0,12(sp)
204018a6:	eb81                	bnez	a5,204018b6 <_free_r+0x36>
204018a8:	00042223          	sw	zero,4(s0)
204018ac:	c300                	sw	s0,0(a4)
204018ae:	4462                	lw	s0,24(sp)
204018b0:	40f2                	lw	ra,28(sp)
204018b2:	6105                	addi	sp,sp,32
204018b4:	a605                	j	20401bd4 <__malloc_unlock>
204018b6:	00f47d63          	bgeu	s0,a5,204018d0 <_free_r+0x50>
204018ba:	4010                	lw	a2,0(s0)
204018bc:	00c406b3          	add	a3,s0,a2
204018c0:	00d79663          	bne	a5,a3,204018cc <_free_r+0x4c>
204018c4:	4394                	lw	a3,0(a5)
204018c6:	43dc                	lw	a5,4(a5)
204018c8:	96b2                	add	a3,a3,a2
204018ca:	c014                	sw	a3,0(s0)
204018cc:	c05c                	sw	a5,4(s0)
204018ce:	bff9                	j	204018ac <_free_r+0x2c>
204018d0:	873e                	mv	a4,a5
204018d2:	43dc                	lw	a5,4(a5)
204018d4:	c399                	beqz	a5,204018da <_free_r+0x5a>
204018d6:	fef47de3          	bgeu	s0,a5,204018d0 <_free_r+0x50>
204018da:	4314                	lw	a3,0(a4)
204018dc:	00d70633          	add	a2,a4,a3
204018e0:	00861f63          	bne	a2,s0,204018fe <_free_r+0x7e>
204018e4:	4010                	lw	a2,0(s0)
204018e6:	96b2                	add	a3,a3,a2
204018e8:	c314                	sw	a3,0(a4)
204018ea:	00d70633          	add	a2,a4,a3
204018ee:	fcc790e3          	bne	a5,a2,204018ae <_free_r+0x2e>
204018f2:	4390                	lw	a2,0(a5)
204018f4:	43dc                	lw	a5,4(a5)
204018f6:	96b2                	add	a3,a3,a2
204018f8:	c314                	sw	a3,0(a4)
204018fa:	c35c                	sw	a5,4(a4)
204018fc:	bf4d                	j	204018ae <_free_r+0x2e>
204018fe:	00c47563          	bgeu	s0,a2,20401908 <_free_r+0x88>
20401902:	47b1                	li	a5,12
20401904:	c11c                	sw	a5,0(a0)
20401906:	b765                	j	204018ae <_free_r+0x2e>
20401908:	4010                	lw	a2,0(s0)
2040190a:	00c406b3          	add	a3,s0,a2
2040190e:	00d79663          	bne	a5,a3,2040191a <_free_r+0x9a>
20401912:	4394                	lw	a3,0(a5)
20401914:	43dc                	lw	a5,4(a5)
20401916:	96b2                	add	a3,a3,a2
20401918:	c014                	sw	a3,0(s0)
2040191a:	c05c                	sw	a5,4(s0)
2040191c:	c340                	sw	s0,4(a4)
2040191e:	bf41                	j	204018ae <_free_r+0x2e>
20401920:	8082                	ret

20401922 <_malloc_r>:
_malloc_r():
20401922:	1101                	addi	sp,sp,-32
20401924:	ca26                	sw	s1,20(sp)
20401926:	00358493          	addi	s1,a1,3
2040192a:	98f1                	andi	s1,s1,-4
2040192c:	c84a                	sw	s2,16(sp)
2040192e:	ce06                	sw	ra,28(sp)
20401930:	cc22                	sw	s0,24(sp)
20401932:	c64e                	sw	s3,12(sp)
20401934:	04a1                	addi	s1,s1,8
20401936:	47b1                	li	a5,12
20401938:	892a                	mv	s2,a0
2040193a:	04f4f463          	bgeu	s1,a5,20401982 <_malloc_r+0x60>
2040193e:	44b1                	li	s1,12
20401940:	04b4e363          	bltu	s1,a1,20401986 <_malloc_r+0x64>
20401944:	854a                	mv	a0,s2
20401946:	2471                	jal	20401bd2 <__malloc_lock>
20401948:	5fbff697          	auipc	a3,0x5fbff
2040194c:	e8068693          	addi	a3,a3,-384 # 800007c8 <__malloc_free_list>
20401950:	4298                	lw	a4,0(a3)
20401952:	843a                	mv	s0,a4
20401954:	e421                	bnez	s0,2040199c <_malloc_r+0x7a>
20401956:	5fbff417          	auipc	s0,0x5fbff
2040195a:	e7640413          	addi	s0,s0,-394 # 800007cc <__malloc_sbrk_start>
2040195e:	401c                	lw	a5,0(s0)
20401960:	e789                	bnez	a5,2040196a <_malloc_r+0x48>
20401962:	4581                	li	a1,0
20401964:	854a                	mv	a0,s2
20401966:	2851                	jal	204019fa <_sbrk_r>
20401968:	c008                	sw	a0,0(s0)
2040196a:	85a6                	mv	a1,s1
2040196c:	854a                	mv	a0,s2
2040196e:	2071                	jal	204019fa <_sbrk_r>
20401970:	59fd                	li	s3,-1
20401972:	07351863          	bne	a0,s3,204019e2 <_malloc_r+0xc0>
20401976:	47b1                	li	a5,12
20401978:	00f92023          	sw	a5,0(s2)
2040197c:	854a                	mv	a0,s2
2040197e:	2c99                	jal	20401bd4 <__malloc_unlock>
20401980:	a031                	j	2040198c <_malloc_r+0x6a>
20401982:	fa04dfe3          	bgez	s1,20401940 <_malloc_r+0x1e>
20401986:	47b1                	li	a5,12
20401988:	00f92023          	sw	a5,0(s2)
2040198c:	4501                	li	a0,0
2040198e:	40f2                	lw	ra,28(sp)
20401990:	4462                	lw	s0,24(sp)
20401992:	44d2                	lw	s1,20(sp)
20401994:	4942                	lw	s2,16(sp)
20401996:	49b2                	lw	s3,12(sp)
20401998:	6105                	addi	sp,sp,32
2040199a:	8082                	ret
2040199c:	401c                	lw	a5,0(s0)
2040199e:	8f85                	sub	a5,a5,s1
204019a0:	0207ce63          	bltz	a5,204019dc <_malloc_r+0xba>
204019a4:	462d                	li	a2,11
204019a6:	00f67663          	bgeu	a2,a5,204019b2 <_malloc_r+0x90>
204019aa:	c01c                	sw	a5,0(s0)
204019ac:	943e                	add	s0,s0,a5
204019ae:	c004                	sw	s1,0(s0)
204019b0:	a029                	j	204019ba <_malloc_r+0x98>
204019b2:	405c                	lw	a5,4(s0)
204019b4:	02871263          	bne	a4,s0,204019d8 <_malloc_r+0xb6>
204019b8:	c29c                	sw	a5,0(a3)
204019ba:	854a                	mv	a0,s2
204019bc:	2c21                	jal	20401bd4 <__malloc_unlock>
204019be:	00b40513          	addi	a0,s0,11
204019c2:	00440793          	addi	a5,s0,4
204019c6:	9961                	andi	a0,a0,-8
204019c8:	40f50733          	sub	a4,a0,a5
204019cc:	fcf501e3          	beq	a0,a5,2040198e <_malloc_r+0x6c>
204019d0:	943a                	add	s0,s0,a4
204019d2:	8f89                	sub	a5,a5,a0
204019d4:	c01c                	sw	a5,0(s0)
204019d6:	bf65                	j	2040198e <_malloc_r+0x6c>
204019d8:	c35c                	sw	a5,4(a4)
204019da:	b7c5                	j	204019ba <_malloc_r+0x98>
204019dc:	8722                	mv	a4,s0
204019de:	4040                	lw	s0,4(s0)
204019e0:	bf95                	j	20401954 <_malloc_r+0x32>
204019e2:	00350413          	addi	s0,a0,3
204019e6:	9871                	andi	s0,s0,-4
204019e8:	fc8503e3          	beq	a0,s0,204019ae <_malloc_r+0x8c>
204019ec:	40a405b3          	sub	a1,s0,a0
204019f0:	854a                	mv	a0,s2
204019f2:	2021                	jal	204019fa <_sbrk_r>
204019f4:	fb351de3          	bne	a0,s3,204019ae <_malloc_r+0x8c>
204019f8:	bfbd                	j	20401976 <_malloc_r+0x54>

204019fa <_sbrk_r>:
_sbrk_r():
204019fa:	1141                	addi	sp,sp,-16
204019fc:	c422                	sw	s0,8(sp)
204019fe:	842a                	mv	s0,a0
20401a00:	852e                	mv	a0,a1
20401a02:	5fbff797          	auipc	a5,0x5fbff
20401a06:	dc07a723          	sw	zero,-562(a5) # 800007d0 <errno>
20401a0a:	c606                	sw	ra,12(sp)
20401a0c:	2c65                	jal	20401cc4 <_sbrk>
20401a0e:	57fd                	li	a5,-1
20401a10:	00f51863          	bne	a0,a5,20401a20 <_sbrk_r+0x26>
20401a14:	5fbff797          	auipc	a5,0x5fbff
20401a18:	dbc7a783          	lw	a5,-580(a5) # 800007d0 <errno>
20401a1c:	c391                	beqz	a5,20401a20 <_sbrk_r+0x26>
20401a1e:	c01c                	sw	a5,0(s0)
20401a20:	40b2                	lw	ra,12(sp)
20401a22:	4422                	lw	s0,8(sp)
20401a24:	0141                	addi	sp,sp,16
20401a26:	8082                	ret

20401a28 <__sread>:
__sread():
20401a28:	1141                	addi	sp,sp,-16
20401a2a:	c422                	sw	s0,8(sp)
20401a2c:	842e                	mv	s0,a1
20401a2e:	00e59583          	lh	a1,14(a1)
20401a32:	c606                	sw	ra,12(sp)
20401a34:	224d                	jal	20401bd6 <_read_r>
20401a36:	00054963          	bltz	a0,20401a48 <__sread+0x20>
20401a3a:	487c                	lw	a5,84(s0)
20401a3c:	97aa                	add	a5,a5,a0
20401a3e:	c87c                	sw	a5,84(s0)
20401a40:	40b2                	lw	ra,12(sp)
20401a42:	4422                	lw	s0,8(sp)
20401a44:	0141                	addi	sp,sp,16
20401a46:	8082                	ret
20401a48:	00c45783          	lhu	a5,12(s0)
20401a4c:	777d                	lui	a4,0xfffff
20401a4e:	177d                	addi	a4,a4,-1
20401a50:	8ff9                	and	a5,a5,a4
20401a52:	00f41623          	sh	a5,12(s0)
20401a56:	b7ed                	j	20401a40 <__sread+0x18>

20401a58 <__swrite>:
__swrite():
20401a58:	00c5d783          	lhu	a5,12(a1)
20401a5c:	1101                	addi	sp,sp,-32
20401a5e:	cc22                	sw	s0,24(sp)
20401a60:	ca26                	sw	s1,20(sp)
20401a62:	c84a                	sw	s2,16(sp)
20401a64:	c64e                	sw	s3,12(sp)
20401a66:	ce06                	sw	ra,28(sp)
20401a68:	1007f793          	andi	a5,a5,256
20401a6c:	84aa                	mv	s1,a0
20401a6e:	842e                	mv	s0,a1
20401a70:	8932                	mv	s2,a2
20401a72:	89b6                	mv	s3,a3
20401a74:	c791                	beqz	a5,20401a80 <__swrite+0x28>
20401a76:	00e59583          	lh	a1,14(a1)
20401a7a:	4689                	li	a3,2
20401a7c:	4601                	li	a2,0
20401a7e:	220d                	jal	20401ba0 <_lseek_r>
20401a80:	00c45783          	lhu	a5,12(s0)
20401a84:	777d                	lui	a4,0xfffff
20401a86:	177d                	addi	a4,a4,-1
20401a88:	8ff9                	and	a5,a5,a4
20401a8a:	00e41583          	lh	a1,14(s0)
20401a8e:	00f41623          	sh	a5,12(s0)
20401a92:	4462                	lw	s0,24(sp)
20401a94:	40f2                	lw	ra,28(sp)
20401a96:	86ce                	mv	a3,s3
20401a98:	864a                	mv	a2,s2
20401a9a:	49b2                	lw	s3,12(sp)
20401a9c:	4942                	lw	s2,16(sp)
20401a9e:	8526                	mv	a0,s1
20401aa0:	44d2                	lw	s1,20(sp)
20401aa2:	6105                	addi	sp,sp,32
20401aa4:	a83d                	j	20401ae2 <_write_r>

20401aa6 <__sseek>:
__sseek():
20401aa6:	1141                	addi	sp,sp,-16
20401aa8:	c422                	sw	s0,8(sp)
20401aaa:	842e                	mv	s0,a1
20401aac:	00e59583          	lh	a1,14(a1)
20401ab0:	c606                	sw	ra,12(sp)
20401ab2:	20fd                	jal	20401ba0 <_lseek_r>
20401ab4:	57fd                	li	a5,-1
20401ab6:	00c45703          	lhu	a4,12(s0)
20401aba:	00f51b63          	bne	a0,a5,20401ad0 <__sseek+0x2a>
20401abe:	77fd                	lui	a5,0xfffff
20401ac0:	17fd                	addi	a5,a5,-1
20401ac2:	8ff9                	and	a5,a5,a4
20401ac4:	00f41623          	sh	a5,12(s0)
20401ac8:	40b2                	lw	ra,12(sp)
20401aca:	4422                	lw	s0,8(sp)
20401acc:	0141                	addi	sp,sp,16
20401ace:	8082                	ret
20401ad0:	6785                	lui	a5,0x1
20401ad2:	8fd9                	or	a5,a5,a4
20401ad4:	00f41623          	sh	a5,12(s0)
20401ad8:	c868                	sw	a0,84(s0)
20401ada:	b7fd                	j	20401ac8 <__sseek+0x22>

20401adc <__sclose>:
__sclose():
20401adc:	00e59583          	lh	a1,14(a1)
20401ae0:	a815                	j	20401b14 <_close_r>

20401ae2 <_write_r>:
_write_r():
20401ae2:	1141                	addi	sp,sp,-16
20401ae4:	c422                	sw	s0,8(sp)
20401ae6:	842a                	mv	s0,a0
20401ae8:	852e                	mv	a0,a1
20401aea:	85b2                	mv	a1,a2
20401aec:	8636                	mv	a2,a3
20401aee:	5fbff797          	auipc	a5,0x5fbff
20401af2:	ce07a123          	sw	zero,-798(a5) # 800007d0 <errno>
20401af6:	c606                	sw	ra,12(sp)
20401af8:	24a9                	jal	20401d42 <_write>
20401afa:	57fd                	li	a5,-1
20401afc:	00f51863          	bne	a0,a5,20401b0c <_write_r+0x2a>
20401b00:	5fbff797          	auipc	a5,0x5fbff
20401b04:	cd07a783          	lw	a5,-816(a5) # 800007d0 <errno>
20401b08:	c391                	beqz	a5,20401b0c <_write_r+0x2a>
20401b0a:	c01c                	sw	a5,0(s0)
20401b0c:	40b2                	lw	ra,12(sp)
20401b0e:	4422                	lw	s0,8(sp)
20401b10:	0141                	addi	sp,sp,16
20401b12:	8082                	ret

20401b14 <_close_r>:
_close_r():
20401b14:	1141                	addi	sp,sp,-16
20401b16:	c422                	sw	s0,8(sp)
20401b18:	842a                	mv	s0,a0
20401b1a:	852e                	mv	a0,a1
20401b1c:	5fbff797          	auipc	a5,0x5fbff
20401b20:	ca07aa23          	sw	zero,-844(a5) # 800007d0 <errno>
20401b24:	c606                	sw	ra,12(sp)
20401b26:	20cd                	jal	20401c08 <_close>
20401b28:	57fd                	li	a5,-1
20401b2a:	00f51863          	bne	a0,a5,20401b3a <_close_r+0x26>
20401b2e:	5fbff797          	auipc	a5,0x5fbff
20401b32:	ca27a783          	lw	a5,-862(a5) # 800007d0 <errno>
20401b36:	c391                	beqz	a5,20401b3a <_close_r+0x26>
20401b38:	c01c                	sw	a5,0(s0)
20401b3a:	40b2                	lw	ra,12(sp)
20401b3c:	4422                	lw	s0,8(sp)
20401b3e:	0141                	addi	sp,sp,16
20401b40:	8082                	ret

20401b42 <_fstat_r>:
_fstat_r():
20401b42:	1141                	addi	sp,sp,-16
20401b44:	c422                	sw	s0,8(sp)
20401b46:	842a                	mv	s0,a0
20401b48:	852e                	mv	a0,a1
20401b4a:	85b2                	mv	a1,a2
20401b4c:	5fbff797          	auipc	a5,0x5fbff
20401b50:	c807a223          	sw	zero,-892(a5) # 800007d0 <errno>
20401b54:	c606                	sw	ra,12(sp)
20401b56:	28d1                	jal	20401c2a <_fstat>
20401b58:	57fd                	li	a5,-1
20401b5a:	00f51863          	bne	a0,a5,20401b6a <_fstat_r+0x28>
20401b5e:	5fbff797          	auipc	a5,0x5fbff
20401b62:	c727a783          	lw	a5,-910(a5) # 800007d0 <errno>
20401b66:	c391                	beqz	a5,20401b6a <_fstat_r+0x28>
20401b68:	c01c                	sw	a5,0(s0)
20401b6a:	40b2                	lw	ra,12(sp)
20401b6c:	4422                	lw	s0,8(sp)
20401b6e:	0141                	addi	sp,sp,16
20401b70:	8082                	ret

20401b72 <_isatty_r>:
_isatty_r():
20401b72:	1141                	addi	sp,sp,-16
20401b74:	c422                	sw	s0,8(sp)
20401b76:	842a                	mv	s0,a0
20401b78:	852e                	mv	a0,a1
20401b7a:	5fbff797          	auipc	a5,0x5fbff
20401b7e:	c407ab23          	sw	zero,-938(a5) # 800007d0 <errno>
20401b82:	c606                	sw	ra,12(sp)
20401b84:	20f1                	jal	20401c50 <_isatty>
20401b86:	57fd                	li	a5,-1
20401b88:	00f51863          	bne	a0,a5,20401b98 <_isatty_r+0x26>
20401b8c:	5fbff797          	auipc	a5,0x5fbff
20401b90:	c447a783          	lw	a5,-956(a5) # 800007d0 <errno>
20401b94:	c391                	beqz	a5,20401b98 <_isatty_r+0x26>
20401b96:	c01c                	sw	a5,0(s0)
20401b98:	40b2                	lw	ra,12(sp)
20401b9a:	4422                	lw	s0,8(sp)
20401b9c:	0141                	addi	sp,sp,16
20401b9e:	8082                	ret

20401ba0 <_lseek_r>:
_lseek_r():
20401ba0:	1141                	addi	sp,sp,-16
20401ba2:	c422                	sw	s0,8(sp)
20401ba4:	842a                	mv	s0,a0
20401ba6:	852e                	mv	a0,a1
20401ba8:	85b2                	mv	a1,a2
20401baa:	8636                	mv	a2,a3
20401bac:	5fbff797          	auipc	a5,0x5fbff
20401bb0:	c207a223          	sw	zero,-988(a5) # 800007d0 <errno>
20401bb4:	c606                	sw	ra,12(sp)
20401bb6:	286d                	jal	20401c70 <_lseek>
20401bb8:	57fd                	li	a5,-1
20401bba:	00f51863          	bne	a0,a5,20401bca <_lseek_r+0x2a>
20401bbe:	5fbff797          	auipc	a5,0x5fbff
20401bc2:	c127a783          	lw	a5,-1006(a5) # 800007d0 <errno>
20401bc6:	c391                	beqz	a5,20401bca <_lseek_r+0x2a>
20401bc8:	c01c                	sw	a5,0(s0)
20401bca:	40b2                	lw	ra,12(sp)
20401bcc:	4422                	lw	s0,8(sp)
20401bce:	0141                	addi	sp,sp,16
20401bd0:	8082                	ret

20401bd2 <__malloc_lock>:
__malloc_lock():
20401bd2:	8082                	ret

20401bd4 <__malloc_unlock>:
__malloc_unlock():
20401bd4:	8082                	ret

20401bd6 <_read_r>:
_read_r():
20401bd6:	1141                	addi	sp,sp,-16
20401bd8:	c422                	sw	s0,8(sp)
20401bda:	842a                	mv	s0,a0
20401bdc:	852e                	mv	a0,a1
20401bde:	85b2                	mv	a1,a2
20401be0:	8636                	mv	a2,a3
20401be2:	5fbff797          	auipc	a5,0x5fbff
20401be6:	be07a723          	sw	zero,-1042(a5) # 800007d0 <errno>
20401bea:	c606                	sw	ra,12(sp)
20401bec:	207d                	jal	20401c9a <_read>
20401bee:	57fd                	li	a5,-1
20401bf0:	00f51863          	bne	a0,a5,20401c00 <_read_r+0x2a>
20401bf4:	5fbff797          	auipc	a5,0x5fbff
20401bf8:	bdc7a783          	lw	a5,-1060(a5) # 800007d0 <errno>
20401bfc:	c391                	beqz	a5,20401c00 <_read_r+0x2a>
20401bfe:	c01c                	sw	a5,0(s0)
20401c00:	40b2                	lw	ra,12(sp)
20401c02:	4422                	lw	s0,8(sp)
20401c04:	0141                	addi	sp,sp,16
20401c06:	8082                	ret

20401c08 <_close>:
_close():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
20401c08:	1101                	addi	sp,sp,-32
20401c0a:	ce06                	sw	ra,28(sp)
20401c0c:	cc22                	sw	s0,24(sp)
20401c0e:	1000                	addi	s0,sp,32
20401c10:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20401c14:	225d                	jal	20401dba <__errno>
20401c16:	872a                	mv	a4,a0
20401c18:	05800793          	li	a5,88
20401c1c:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_close.c:5
    return -1;
20401c1e:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_close.c:6
}
20401c20:	853e                	mv	a0,a5
20401c22:	40f2                	lw	ra,28(sp)
20401c24:	4462                	lw	s0,24(sp)
20401c26:	6105                	addi	sp,sp,32
20401c28:	8082                	ret

20401c2a <_fstat>:
_fstat():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20401c2a:	1101                	addi	sp,sp,-32
20401c2c:	ce06                	sw	ra,28(sp)
20401c2e:	cc22                	sw	s0,24(sp)
20401c30:	1000                	addi	s0,sp,32
20401c32:	fea42623          	sw	a0,-20(s0)
20401c36:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
20401c3a:	2241                	jal	20401dba <__errno>
20401c3c:	872a                	mv	a4,a0
20401c3e:	fa800793          	li	a5,-88
20401c42:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20401c44:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_fstat.c:7
}
20401c46:	853e                	mv	a0,a5
20401c48:	40f2                	lw	ra,28(sp)
20401c4a:	4462                	lw	s0,24(sp)
20401c4c:	6105                	addi	sp,sp,32
20401c4e:	8082                	ret

20401c50 <_isatty>:
_isatty():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
20401c50:	1101                	addi	sp,sp,-32
20401c52:	ce22                	sw	s0,28(sp)
20401c54:	1000                	addi	s0,sp,32
20401c56:	fea42623          	sw	a0,-20(s0)
20401c5a:	fec42783          	lw	a5,-20(s0)
20401c5e:	17fd                	addi	a5,a5,-1
20401c60:	0017b793          	seqz	a5,a5
20401c64:	0ff7f793          	zext.b	a5,a5
20401c68:	853e                	mv	a0,a5
20401c6a:	4472                	lw	s0,28(sp)
20401c6c:	6105                	addi	sp,sp,32
20401c6e:	8082                	ret

20401c70 <_lseek>:
_lseek():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
20401c70:	1101                	addi	sp,sp,-32
20401c72:	ce06                	sw	ra,28(sp)
20401c74:	cc22                	sw	s0,24(sp)
20401c76:	1000                	addi	s0,sp,32
20401c78:	fea42623          	sw	a0,-20(s0)
20401c7c:	feb42423          	sw	a1,-24(s0)
20401c80:	fec42223          	sw	a2,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20401c84:	2a1d                	jal	20401dba <__errno>
20401c86:	872a                	mv	a4,a0
20401c88:	05800793          	li	a5,88
20401c8c:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_lseek.c:6
    return -1;
20401c8e:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_lseek.c:7
}
20401c90:	853e                	mv	a0,a5
20401c92:	40f2                	lw	ra,28(sp)
20401c94:	4462                	lw	s0,24(sp)
20401c96:	6105                	addi	sp,sp,32
20401c98:	8082                	ret

20401c9a <_read>:
_read():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20401c9a:	1101                	addi	sp,sp,-32
20401c9c:	ce06                	sw	ra,28(sp)
20401c9e:	cc22                	sw	s0,24(sp)
20401ca0:	1000                	addi	s0,sp,32
20401ca2:	fea42623          	sw	a0,-20(s0)
20401ca6:	feb42423          	sw	a1,-24(s0)
20401caa:	fec42223          	sw	a2,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20401cae:	2231                	jal	20401dba <__errno>
20401cb0:	872a                	mv	a4,a0
20401cb2:	05800793          	li	a5,88
20401cb6:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_read.c:6
    return -1;
20401cb8:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_read.c:7
}
20401cba:	853e                	mv	a0,a5
20401cbc:	40f2                	lw	ra,28(sp)
20401cbe:	4462                	lw	s0,24(sp)
20401cc0:	6105                	addi	sp,sp,32
20401cc2:	8082                	ret

20401cc4 <_sbrk>:
_sbrk():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20401cc4:	7179                	addi	sp,sp,-48
20401cc6:	d606                	sw	ra,44(sp)
20401cc8:	d422                	sw	s0,40(sp)
20401cca:	1800                	addi	s0,sp,48
20401ccc:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20401cd0:	800007b7          	lui	a5,0x80000
20401cd4:	7a47a783          	lw	a5,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff334>
20401cd8:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20401cdc:	cd018713          	addi	a4,gp,-816 # 80000c70 <_sp>
20401ce0:	4d018793          	addi	a5,gp,1232 # 80001470 <metal_segment_heap_target_end>
20401ce4:	00f71463          	bne	a4,a5,20401cec <_sbrk+0x28>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20401ce8:	57fd                	li	a5,-1
20401cea:	a0b9                	j	20401d38 <_sbrk+0x74>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20401cec:	800007b7          	lui	a5,0x80000
20401cf0:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff334>
20401cf4:	fdc42783          	lw	a5,-36(s0)
20401cf8:	973e                	add	a4,a4,a5
20401cfa:	4d018793          	addi	a5,gp,1232 # 80001470 <metal_segment_heap_target_end>
20401cfe:	02f77663          	bgeu	a4,a5,20401d2a <_sbrk+0x66>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20401d02:	800007b7          	lui	a5,0x80000
20401d06:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff334>
20401d0a:	fdc42783          	lw	a5,-36(s0)
20401d0e:	973e                	add	a4,a4,a5
20401d10:	800007b7          	lui	a5,0x80000
20401d14:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff334>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20401d18:	fdc42583          	lw	a1,-36(s0)
20401d1c:	fec42503          	lw	a0,-20(s0)
20401d20:	b6afe0ef          	jal	ra,2040008a <metal_mem_scrub>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20401d24:	fec42783          	lw	a5,-20(s0)
20401d28:	a801                	j	20401d38 <_sbrk+0x74>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20401d2a:	800007b7          	lui	a5,0x80000
20401d2e:	4d018713          	addi	a4,gp,1232 # 80001470 <metal_segment_heap_target_end>
20401d32:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff334>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20401d36:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_sbrk.c:43
}
20401d38:	853e                	mv	a0,a5
20401d3a:	50b2                	lw	ra,44(sp)
20401d3c:	5422                	lw	s0,40(sp)
20401d3e:	6145                	addi	sp,sp,48
20401d40:	8082                	ret

20401d42 <_write>:
_write():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20401d42:	7179                	addi	sp,sp,-48
20401d44:	d606                	sw	ra,44(sp)
20401d46:	d422                	sw	s0,40(sp)
20401d48:	1800                	addi	s0,sp,48
20401d4a:	fca42e23          	sw	a0,-36(s0)
20401d4e:	fcb42c23          	sw	a1,-40(s0)
20401d52:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20401d56:	fdc42703          	lw	a4,-36(s0)
20401d5a:	4785                	li	a5,1
20401d5c:	00f70963          	beq	a4,a5,20401d6e <_write+0x2c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20401d60:	28a9                	jal	20401dba <__errno>
20401d62:	872a                	mv	a4,a0
20401d64:	05800793          	li	a5,88
20401d68:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_write.c:10
        return -1;
20401d6a:	57fd                	li	a5,-1
20401d6c:	a82d                	j	20401da6 <_write+0x64>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20401d6e:	fd842783          	lw	a5,-40(s0)
20401d72:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20401d76:	fe042623          	sw	zero,-20(s0)
20401d7a:	a839                	j	20401d98 <_write+0x56>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
20401d7c:	fe842703          	lw	a4,-24(s0)
20401d80:	fec42783          	lw	a5,-20(s0)
20401d84:	97ba                	add	a5,a5,a4
20401d86:	0007c783          	lbu	a5,0(a5)
20401d8a:	853e                	mv	a0,a5
20401d8c:	2e89                	jal	204020de <metal_tty_putc>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20401d8e:	fec42783          	lw	a5,-20(s0)
20401d92:	0785                	addi	a5,a5,1
20401d94:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20401d98:	fec42703          	lw	a4,-20(s0)
20401d9c:	fd442783          	lw	a5,-44(s0)
20401da0:	fcf76ee3          	bltu	a4,a5,20401d7c <_write+0x3a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_write.c:16
    return 0;
20401da4:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_write.c:17
}
20401da6:	853e                	mv	a0,a5
20401da8:	50b2                	lw	ra,44(sp)
20401daa:	5422                	lw	s0,40(sp)
20401dac:	6145                	addi	sp,sp,48
20401dae:	8082                	ret

20401db0 <atexit>:
atexit():
20401db0:	85aa                	mv	a1,a0
20401db2:	4681                	li	a3,0
20401db4:	4601                	li	a2,0
20401db6:	4501                	li	a0,0
20401db8:	a0e9                	j	20401e82 <__register_exitproc>

20401dba <__errno>:
__errno():
20401dba:	5fbff517          	auipc	a0,0x5fbff
20401dbe:	9e652503          	lw	a0,-1562(a0) # 800007a0 <_impure_ptr>
20401dc2:	8082                	ret

20401dc4 <exit>:
exit():
20401dc4:	1141                	addi	sp,sp,-16
20401dc6:	c422                	sw	s0,8(sp)
20401dc8:	c606                	sw	ra,12(sp)
20401dca:	00000797          	auipc	a5,0x0
20401dce:	13478793          	addi	a5,a5,308 # 20401efe <__call_exitprocs>
20401dd2:	842a                	mv	s0,a0
20401dd4:	c399                	beqz	a5,20401dda <exit+0x16>
20401dd6:	4581                	li	a1,0
20401dd8:	221d                	jal	20401efe <__call_exitprocs>
20401dda:	fffff517          	auipc	a0,0xfffff
20401dde:	14e52503          	lw	a0,334(a0) # 20400f28 <_global_impure_ptr>
20401de2:	551c                	lw	a5,40(a0)
20401de4:	c391                	beqz	a5,20401de8 <exit+0x24>
20401de6:	9782                	jalr	a5
20401de8:	8522                	mv	a0,s0
20401dea:	239040ef          	jal	ra,20406822 <_exit>

20401dee <__libc_fini_array>:
__libc_fini_array():
20401dee:	1141                	addi	sp,sp,-16
20401df0:	c422                	sw	s0,8(sp)
20401df2:	c226                	sw	s1,4(sp)
20401df4:	ffffe417          	auipc	s0,0xffffe
20401df8:	4fc40413          	addi	s0,s0,1276 # 204002f0 <__fini_array_end>
20401dfc:	ffffe497          	auipc	s1,0xffffe
20401e00:	4f448493          	addi	s1,s1,1268 # 204002f0 <__fini_array_end>
20401e04:	8c05                	sub	s0,s0,s1
20401e06:	c606                	sw	ra,12(sp)
20401e08:	8409                	srai	s0,s0,0x2
20401e0a:	e411                	bnez	s0,20401e16 <__libc_fini_array+0x28>
20401e0c:	40b2                	lw	ra,12(sp)
20401e0e:	4422                	lw	s0,8(sp)
20401e10:	4492                	lw	s1,4(sp)
20401e12:	0141                	addi	sp,sp,16
20401e14:	8082                	ret
20401e16:	147d                	addi	s0,s0,-1
20401e18:	00241793          	slli	a5,s0,0x2
20401e1c:	97a6                	add	a5,a5,s1
20401e1e:	439c                	lw	a5,0(a5)
20401e20:	9782                	jalr	a5
20401e22:	b7e5                	j	20401e0a <__libc_fini_array+0x1c>

20401e24 <__libc_init_array>:
__libc_init_array():
20401e24:	1141                	addi	sp,sp,-16
20401e26:	c422                	sw	s0,8(sp)
20401e28:	c226                	sw	s1,4(sp)
20401e2a:	ffffe417          	auipc	s0,0xffffe
20401e2e:	4b640413          	addi	s0,s0,1206 # 204002e0 <_metal_tty_init_ptr>
20401e32:	ffffe497          	auipc	s1,0xffffe
20401e36:	4ae48493          	addi	s1,s1,1198 # 204002e0 <_metal_tty_init_ptr>
20401e3a:	8c81                	sub	s1,s1,s0
20401e3c:	c04a                	sw	s2,0(sp)
20401e3e:	c606                	sw	ra,12(sp)
20401e40:	8489                	srai	s1,s1,0x2
20401e42:	4901                	li	s2,0
20401e44:	02991563          	bne	s2,s1,20401e6e <__libc_init_array+0x4a>
20401e48:	ffffe417          	auipc	s0,0xffffe
20401e4c:	49840413          	addi	s0,s0,1176 # 204002e0 <_metal_tty_init_ptr>
20401e50:	ffffe497          	auipc	s1,0xffffe
20401e54:	49048493          	addi	s1,s1,1168 # 204002e0 <_metal_tty_init_ptr>
20401e58:	8c81                	sub	s1,s1,s0
20401e5a:	8489                	srai	s1,s1,0x2
20401e5c:	4901                	li	s2,0
20401e5e:	00991d63          	bne	s2,s1,20401e78 <__libc_init_array+0x54>
20401e62:	40b2                	lw	ra,12(sp)
20401e64:	4422                	lw	s0,8(sp)
20401e66:	4492                	lw	s1,4(sp)
20401e68:	4902                	lw	s2,0(sp)
20401e6a:	0141                	addi	sp,sp,16
20401e6c:	8082                	ret
20401e6e:	401c                	lw	a5,0(s0)
20401e70:	0905                	addi	s2,s2,1
20401e72:	0411                	addi	s0,s0,4
20401e74:	9782                	jalr	a5
20401e76:	b7f9                	j	20401e44 <__libc_init_array+0x20>
20401e78:	401c                	lw	a5,0(s0)
20401e7a:	0905                	addi	s2,s2,1
20401e7c:	0411                	addi	s0,s0,4
20401e7e:	9782                	jalr	a5
20401e80:	bff9                	j	20401e5e <__libc_init_array+0x3a>

20401e82 <__register_exitproc>:
__register_exitproc():
20401e82:	88aa                	mv	a7,a0
20401e84:	5fbff517          	auipc	a0,0x5fbff
20401e88:	95050513          	addi	a0,a0,-1712 # 800007d4 <_global_atexit>
20401e8c:	411c                	lw	a5,0(a0)
20401e8e:	ef91                	bnez	a5,20401eaa <__register_exitproc+0x28>
20401e90:	5fbff717          	auipc	a4,0x5fbff
20401e94:	95070713          	addi	a4,a4,-1712 # 800007e0 <_global_atexit0>
20401e98:	c118                	sw	a4,0(a0)
20401e9a:	00000513          	li	a0,0
20401e9e:	87ba                	mv	a5,a4
20401ea0:	c509                	beqz	a0,20401eaa <__register_exitproc+0x28>
20401ea2:	411c                	lw	a5,0(a0)
20401ea4:	08f72423          	sw	a5,136(a4)
20401ea8:	87ba                	mv	a5,a4
20401eaa:	43d8                	lw	a4,4(a5)
20401eac:	487d                	li	a6,31
20401eae:	557d                	li	a0,-1
20401eb0:	04e84663          	blt	a6,a4,20401efc <__register_exitproc+0x7a>
20401eb4:	02088d63          	beqz	a7,20401eee <__register_exitproc+0x6c>
20401eb8:	0887a803          	lw	a6,136(a5)
20401ebc:	04080063          	beqz	a6,20401efc <__register_exitproc+0x7a>
20401ec0:	00271513          	slli	a0,a4,0x2
20401ec4:	9542                	add	a0,a0,a6
20401ec6:	c110                	sw	a2,0(a0)
20401ec8:	10082303          	lw	t1,256(a6)
20401ecc:	4605                	li	a2,1
20401ece:	00e61633          	sll	a2,a2,a4
20401ed2:	00c36333          	or	t1,t1,a2
20401ed6:	10682023          	sw	t1,256(a6)
20401eda:	08d52023          	sw	a3,128(a0)
20401ede:	4689                	li	a3,2
20401ee0:	00d89763          	bne	a7,a3,20401eee <__register_exitproc+0x6c>
20401ee4:	10482683          	lw	a3,260(a6)
20401ee8:	8e55                	or	a2,a2,a3
20401eea:	10c82223          	sw	a2,260(a6)
20401eee:	00170693          	addi	a3,a4,1
20401ef2:	070a                	slli	a4,a4,0x2
20401ef4:	c3d4                	sw	a3,4(a5)
20401ef6:	97ba                	add	a5,a5,a4
20401ef8:	c78c                	sw	a1,8(a5)
20401efa:	4501                	li	a0,0
20401efc:	8082                	ret

20401efe <__call_exitprocs>:
__call_exitprocs():
20401efe:	7179                	addi	sp,sp,-48
20401f00:	ca56                	sw	s5,20(sp)
20401f02:	c85a                	sw	s6,16(sp)
20401f04:	c65e                	sw	s7,12(sp)
20401f06:	c462                	sw	s8,8(sp)
20401f08:	d606                	sw	ra,44(sp)
20401f0a:	d422                	sw	s0,40(sp)
20401f0c:	d226                	sw	s1,36(sp)
20401f0e:	d04a                	sw	s2,32(sp)
20401f10:	ce4e                	sw	s3,28(sp)
20401f12:	cc52                	sw	s4,24(sp)
20401f14:	c266                	sw	s9,4(sp)
20401f16:	8b2a                	mv	s6,a0
20401f18:	8aae                	mv	s5,a1
20401f1a:	5fbffb97          	auipc	s7,0x5fbff
20401f1e:	8bab8b93          	addi	s7,s7,-1862 # 800007d4 <_global_atexit>
20401f22:	4c05                	li	s8,1
20401f24:	000ba483          	lw	s1,0(s7)
20401f28:	cc81                	beqz	s1,20401f40 <__call_exitprocs+0x42>
20401f2a:	40c0                	lw	s0,4(s1)
20401f2c:	0884a983          	lw	s3,136(s1)
20401f30:	fff40913          	addi	s2,s0,-1
20401f34:	040a                	slli	s0,s0,0x2
20401f36:	00898a33          	add	s4,s3,s0
20401f3a:	9426                	add	s0,s0,s1
20401f3c:	00095f63          	bgez	s2,20401f5a <__call_exitprocs+0x5c>
20401f40:	50b2                	lw	ra,44(sp)
20401f42:	5422                	lw	s0,40(sp)
20401f44:	5492                	lw	s1,36(sp)
20401f46:	5902                	lw	s2,32(sp)
20401f48:	49f2                	lw	s3,28(sp)
20401f4a:	4a62                	lw	s4,24(sp)
20401f4c:	4ad2                	lw	s5,20(sp)
20401f4e:	4b42                	lw	s6,16(sp)
20401f50:	4bb2                	lw	s7,12(sp)
20401f52:	4c22                	lw	s8,8(sp)
20401f54:	4c92                	lw	s9,4(sp)
20401f56:	6145                	addi	sp,sp,48
20401f58:	8082                	ret
20401f5a:	000a8c63          	beqz	s5,20401f72 <__call_exitprocs+0x74>
20401f5e:	00099663          	bnez	s3,20401f6a <__call_exitprocs+0x6c>
20401f62:	197d                	addi	s2,s2,-1
20401f64:	1a71                	addi	s4,s4,-4
20401f66:	1471                	addi	s0,s0,-4
20401f68:	bfd1                	j	20401f3c <__call_exitprocs+0x3e>
20401f6a:	07ca2783          	lw	a5,124(s4)
20401f6e:	ff579ae3          	bne	a5,s5,20401f62 <__call_exitprocs+0x64>
20401f72:	40d8                	lw	a4,4(s1)
20401f74:	405c                	lw	a5,4(s0)
20401f76:	177d                	addi	a4,a4,-1
20401f78:	03271863          	bne	a4,s2,20401fa8 <__call_exitprocs+0xaa>
20401f7c:	0124a223          	sw	s2,4(s1)
20401f80:	d3ed                	beqz	a5,20401f62 <__call_exitprocs+0x64>
20401f82:	0044ac83          	lw	s9,4(s1)
20401f86:	00098863          	beqz	s3,20401f96 <__call_exitprocs+0x98>
20401f8a:	1009a683          	lw	a3,256(s3)
20401f8e:	012c1733          	sll	a4,s8,s2
20401f92:	8ef9                	and	a3,a3,a4
20401f94:	ee89                	bnez	a3,20401fae <__call_exitprocs+0xb0>
20401f96:	9782                	jalr	a5
20401f98:	40d8                	lw	a4,4(s1)
20401f9a:	000ba783          	lw	a5,0(s7)
20401f9e:	f99713e3          	bne	a4,s9,20401f24 <__call_exitprocs+0x26>
20401fa2:	fcf480e3          	beq	s1,a5,20401f62 <__call_exitprocs+0x64>
20401fa6:	bfbd                	j	20401f24 <__call_exitprocs+0x26>
20401fa8:	00042223          	sw	zero,4(s0)
20401fac:	bfd1                	j	20401f80 <__call_exitprocs+0x82>
20401fae:	1049a683          	lw	a3,260(s3)
20401fb2:	ffca2583          	lw	a1,-4(s4)
20401fb6:	8f75                	and	a4,a4,a3
20401fb8:	e701                	bnez	a4,20401fc0 <__call_exitprocs+0xc2>
20401fba:	855a                	mv	a0,s6
20401fbc:	9782                	jalr	a5
20401fbe:	bfe9                	j	20401f98 <__call_exitprocs+0x9a>
20401fc0:	852e                	mv	a0,a1
20401fc2:	9782                	jalr	a5
20401fc4:	bfd1                	j	20401f98 <__call_exitprocs+0x9a>

20401fc6 <metal_init>:
metal_init():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20401fc6:	1101                	addi	sp,sp,-32
20401fc8:	ce06                	sw	ra,28(sp)
20401fca:	cc22                	sw	s0,24(sp)
20401fcc:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20401fce:	800007b7          	lui	a5,0x80000
20401fd2:	7d87a783          	lw	a5,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xfffff368>
20401fd6:	efa9                	bnez	a5,20402030 <metal_init+0x6a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20401fd8:	800007b7          	lui	a5,0x80000
20401fdc:	4705                	li	a4,1
20401fde:	7ce7ac23          	sw	a4,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xfffff368>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20401fe2:	204007b7          	lui	a5,0x20400
20401fe6:	2ec78713          	addi	a4,a5,748 # 204002ec <metal_tty_init>
20401fea:	204007b7          	lui	a5,0x20400
20401fee:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20401ff2:	04e7f163          	bgeu	a5,a4,20402034 <metal_init+0x6e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20401ff6:	204007b7          	lui	a5,0x20400
20401ffa:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20401ffe:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402002:	a831                	j	2040201e <metal_init+0x58>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20402004:	fec42783          	lw	a5,-20(s0)
20402008:	439c                	lw	a5,0(a5)
2040200a:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:33

        func();
2040200e:	fe842783          	lw	a5,-24(s0)
20402012:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:35

        funcptr += 1;
20402014:	fec42783          	lw	a5,-20(s0)
20402018:	0791                	addi	a5,a5,4
2040201a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
2040201e:	fec42703          	lw	a4,-20(s0)
20402022:	204007b7          	lui	a5,0x20400
20402026:	2ec78793          	addi	a5,a5,748 # 204002ec <metal_tty_init>
2040202a:	fcf71de3          	bne	a4,a5,20402004 <metal_init+0x3e>
2040202e:	a021                	j	20402036 <metal_init+0x70>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:21
        return;
20402030:	0001                	nop
20402032:	a011                	j	20402036 <metal_init+0x70>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:26
        return;
20402034:	0001                	nop
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:37
    }
}
20402036:	40f2                	lw	ra,28(sp)
20402038:	4462                	lw	s0,24(sp)
2040203a:	6105                	addi	sp,sp,32
2040203c:	8082                	ret

2040203e <metal_fini>:
metal_fini():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:39

void metal_fini(void) {
2040203e:	1101                	addi	sp,sp,-32
20402040:	ce06                	sw	ra,28(sp)
20402042:	cc22                	sw	s0,24(sp)
20402044:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
20402046:	800007b7          	lui	a5,0x80000
2040204a:	7dc7a783          	lw	a5,2012(a5) # 800007dc <metal_segment_heap_target_end+0xfffff36c>
2040204e:	efa9                	bnez	a5,204020a8 <metal_fini+0x6a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
20402050:	800007b7          	lui	a5,0x80000
20402054:	4705                	li	a4,1
20402056:	7ce7ae23          	sw	a4,2012(a5) # 800007dc <metal_segment_heap_target_end+0xfffff36c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
2040205a:	204007b7          	lui	a5,0x20400
2040205e:	2f078713          	addi	a4,a5,752 # 204002f0 <__fini_array_end>
20402062:	204007b7          	lui	a5,0x20400
20402066:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
2040206a:	04e7f163          	bgeu	a5,a4,204020ac <metal_fini+0x6e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
2040206e:	204007b7          	lui	a5,0x20400
20402072:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402076:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
2040207a:	a831                	j	20402096 <metal_fini+0x58>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
2040207c:	fec42783          	lw	a5,-20(s0)
20402080:	439c                	lw	a5,0(a5)
20402082:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:55

        func();
20402086:	fe842783          	lw	a5,-24(s0)
2040208a:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:57

        funcptr += 1;
2040208c:	fec42783          	lw	a5,-20(s0)
20402090:	0791                	addi	a5,a5,4
20402092:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20402096:	fec42703          	lw	a4,-20(s0)
2040209a:	204007b7          	lui	a5,0x20400
2040209e:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
204020a2:	fcf71de3          	bne	a4,a5,2040207c <metal_fini+0x3e>
204020a6:	a021                	j	204020ae <metal_fini+0x70>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:43
        return;
204020a8:	0001                	nop
204020aa:	a011                	j	204020ae <metal_fini+0x70>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:48
        return;
204020ac:	0001                	nop
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:59
    }
}
204020ae:	40f2                	lw	ra,28(sp)
204020b0:	4462                	lw	s0,24(sp)
204020b2:	6105                	addi	sp,sp,32
204020b4:	8082                	ret

204020b6 <metal_init_run>:
metal_init_run():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
204020b6:	1141                	addi	sp,sp,-16
204020b8:	c606                	sw	ra,12(sp)
204020ba:	c422                	sw	s0,8(sp)
204020bc:	0800                	addi	s0,sp,16
204020be:	3721                	jal	20401fc6 <metal_init>
204020c0:	0001                	nop
204020c2:	40b2                	lw	ra,12(sp)
204020c4:	4422                	lw	s0,8(sp)
204020c6:	0141                	addi	sp,sp,16
204020c8:	8082                	ret

204020ca <metal_fini_run>:
metal_fini_run():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
204020ca:	1141                	addi	sp,sp,-16
204020cc:	c606                	sw	ra,12(sp)
204020ce:	c422                	sw	s0,8(sp)
204020d0:	0800                	addi	s0,sp,16
204020d2:	37b5                	jal	2040203e <metal_fini>
204020d4:	0001                	nop
204020d6:	40b2                	lw	ra,12(sp)
204020d8:	4422                	lw	s0,8(sp)
204020da:	0141                	addi	sp,sp,16
204020dc:	8082                	ret

204020de <metal_tty_putc>:
metal_tty_putc():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
204020de:	1101                	addi	sp,sp,-32
204020e0:	ce06                	sw	ra,28(sp)
204020e2:	cc22                	sw	s0,24(sp)
204020e4:	1000                	addi	s0,sp,32
204020e6:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
204020ea:	fec42583          	lw	a1,-20(s0)
204020ee:	800007b7          	lui	a5,0x80000
204020f2:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
204020f6:	282d                	jal	20402130 <metal_uart_putc>
204020f8:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/tty.c:14
}
204020fa:	853e                	mv	a0,a5
204020fc:	40f2                	lw	ra,28(sp)
204020fe:	4462                	lw	s0,24(sp)
20402100:	6105                	addi	sp,sp,32
20402102:	8082                	ret

20402104 <metal_uart_init>:
metal_uart_init():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20402104:	1101                	addi	sp,sp,-32
20402106:	ce06                	sw	ra,28(sp)
20402108:	cc22                	sw	s0,24(sp)
2040210a:	1000                	addi	s0,sp,32
2040210c:	fea42623          	sw	a0,-20(s0)
20402110:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20402114:	fec42783          	lw	a5,-20(s0)
20402118:	439c                	lw	a5,0(a5)
2040211a:	439c                	lw	a5,0(a5)
2040211c:	fe842583          	lw	a1,-24(s0)
20402120:	fec42503          	lw	a0,-20(s0)
20402124:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/uart.h:61
}
20402126:	0001                	nop
20402128:	40f2                	lw	ra,28(sp)
2040212a:	4462                	lw	s0,24(sp)
2040212c:	6105                	addi	sp,sp,32
2040212e:	8082                	ret

20402130 <metal_uart_putc>:
metal_uart_putc():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
20402130:	1101                	addi	sp,sp,-32
20402132:	ce06                	sw	ra,28(sp)
20402134:	cc22                	sw	s0,24(sp)
20402136:	1000                	addi	s0,sp,32
20402138:	fea42623          	sw	a0,-20(s0)
2040213c:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
20402140:	fec42783          	lw	a5,-20(s0)
20402144:	439c                	lw	a5,0(a5)
20402146:	43dc                	lw	a5,4(a5)
20402148:	fe842583          	lw	a1,-24(s0)
2040214c:	fec42503          	lw	a0,-20(s0)
20402150:	9782                	jalr	a5
20402152:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/uart.h:71
}
20402154:	853e                	mv	a0,a5
20402156:	40f2                	lw	ra,28(sp)
20402158:	4462                	lw	s0,24(sp)
2040215a:	6105                	addi	sp,sp,32
2040215c:	8082                	ret

2040215e <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
2040215e:	1101                	addi	sp,sp,-32
20402160:	ce06                	sw	ra,28(sp)
20402162:	cc22                	sw	s0,24(sp)
20402164:	1000                	addi	s0,sp,32
20402166:	fea42623          	sw	a0,-20(s0)
2040216a:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
2040216e:	fec42783          	lw	a5,-20(s0)
20402172:	439c                	lw	a5,0(a5)
20402174:	4bdc                	lw	a5,20(a5)
20402176:	fe842583          	lw	a1,-24(s0)
2040217a:	fec42503          	lw	a0,-20(s0)
2040217e:	9782                	jalr	a5
20402180:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/uart.h:113
}
20402182:	853e                	mv	a0,a5
20402184:	40f2                	lw	ra,28(sp)
20402186:	4462                	lw	s0,24(sp)
20402188:	6105                	addi	sp,sp,32
2040218a:	8082                	ret

2040218c <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:202
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
2040218c:	1101                	addi	sp,sp,-32
2040218e:	ce22                	sw	s0,28(sp)
20402190:	1000                	addi	s0,sp,32
20402192:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:203
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20402196:	fec42703          	lw	a4,-20(s0)
2040219a:	800007b7          	lui	a5,0x80000
2040219e:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
204021a2:	00f71563          	bne	a4,a5,204021ac <__metal_driver_sifive_clint0_control_base+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:204
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
204021a6:	020007b7          	lui	a5,0x2000
204021aa:	a011                	j	204021ae <__metal_driver_sifive_clint0_control_base+0x22>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:207
	}
	else {
		return 0;
204021ac:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:209
	}
}
204021ae:	853e                	mv	a0,a5
204021b0:	4472                	lw	s0,28(sp)
204021b2:	6105                	addi	sp,sp,32
204021b4:	8082                	ret

204021b6 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:222
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
204021b6:	1101                	addi	sp,sp,-32
204021b8:	ce22                	sw	s0,28(sp)
204021ba:	1000                	addi	s0,sp,32
204021bc:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:223
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
204021c0:	fec42703          	lw	a4,-20(s0)
204021c4:	800007b7          	lui	a5,0x80000
204021c8:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
204021cc:	00f71463          	bne	a4,a5,204021d4 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:224
		return METAL_MAX_CLINT_INTERRUPTS;
204021d0:	4789                	li	a5,2
204021d2:	a011                	j	204021d6 <__metal_driver_sifive_clint0_num_interrupts+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:227
	}
	else {
		return 0;
204021d4:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:229
	}
}
204021d6:	853e                	mv	a0,a5
204021d8:	4472                	lw	s0,28(sp)
204021da:	6105                	addi	sp,sp,32
204021dc:	8082                	ret

204021de <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:232

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
204021de:	1101                	addi	sp,sp,-32
204021e0:	ce22                	sw	s0,28(sp)
204021e2:	1000                	addi	s0,sp,32
204021e4:	fea42623          	sw	a0,-20(s0)
204021e8:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:233
	if (idx == 0) {
204021ec:	fe842783          	lw	a5,-24(s0)
204021f0:	e791                	bnez	a5,204021fc <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:234
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
204021f2:	800007b7          	lui	a5,0x80000
204021f6:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffec18>
204021fa:	a821                	j	20402212 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:236
	}
	else if (idx == 1) {
204021fc:	fe842703          	lw	a4,-24(s0)
20402200:	4785                	li	a5,1
20402202:	00f71763          	bne	a4,a5,20402210 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:237
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20402206:	800007b7          	lui	a5,0x80000
2040220a:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffec18>
2040220e:	a011                	j	20402212 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:240
	}
	else {
		return NULL;
20402210:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:242
	}
}
20402212:	853e                	mv	a0,a5
20402214:	4472                	lw	s0,28(sp)
20402216:	6105                	addi	sp,sp,32
20402218:	8082                	ret

2040221a <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:245

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
2040221a:	1101                	addi	sp,sp,-32
2040221c:	ce22                	sw	s0,28(sp)
2040221e:	1000                	addi	s0,sp,32
20402220:	fea42623          	sw	a0,-20(s0)
20402224:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:246
	if (idx == 0) {
20402228:	fe842783          	lw	a5,-24(s0)
2040222c:	e399                	bnez	a5,20402232 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:247
		return 3;
2040222e:	478d                	li	a5,3
20402230:	a809                	j	20402242 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:249
	}
	else if (idx == 1) {
20402232:	fe842703          	lw	a4,-24(s0)
20402236:	4785                	li	a5,1
20402238:	00f71463          	bne	a4,a5,20402240 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:250
		return 7;
2040223c:	479d                	li	a5,7
2040223e:	a011                	j	20402242 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:253
	}
	else {
		return 0;
20402240:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:255
	}
}
20402242:	853e                	mv	a0,a5
20402244:	4472                	lw	s0,28(sp)
20402246:	6105                	addi	sp,sp,32
20402248:	8082                	ret

2040224a <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
2040224a:	715d                	addi	sp,sp,-80
2040224c:	c686                	sw	ra,76(sp)
2040224e:	c4a2                	sw	s0,72(sp)
20402250:	c2ca                	sw	s2,68(sp)
20402252:	c0ce                	sw	s3,64(sp)
20402254:	de52                	sw	s4,60(sp)
20402256:	dc56                	sw	s5,56(sp)
20402258:	da5a                	sw	s6,52(sp)
2040225a:	d85e                	sw	s7,48(sp)
2040225c:	d662                	sw	s8,44(sp)
2040225e:	d466                	sw	s9,40(sp)
20402260:	0880                	addi	s0,sp,80
20402262:	faa42e23          	sw	a0,-68(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20402266:	fbc42783          	lw	a5,-68(s0)
2040226a:	853e                	mv	a0,a5
2040226c:	3705                	jal	2040218c <__metal_driver_sifive_clint0_control_base>
2040226e:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
20402272:	fcc42703          	lw	a4,-52(s0)
20402276:	67b1                	lui	a5,0xc
20402278:	17f1                	addi	a5,a5,-4
2040227a:	97ba                	add	a5,a5,a4
2040227c:	439c                	lw	a5,0(a5)
2040227e:	fcf42423          	sw	a5,-56(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
20402282:	fcc42703          	lw	a4,-52(s0)
20402286:	67b1                	lui	a5,0xc
20402288:	17e1                	addi	a5,a5,-8
2040228a:	97ba                	add	a5,a5,a4
2040228c:	439c                	lw	a5,0(a5)
2040228e:	fcf42223          	sw	a5,-60(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20402292:	fcc42703          	lw	a4,-52(s0)
20402296:	67b1                	lui	a5,0xc
20402298:	17f1                	addi	a5,a5,-4
2040229a:	97ba                	add	a5,a5,a4
2040229c:	439c                	lw	a5,0(a5)
2040229e:	fc842703          	lw	a4,-56(s0)
204022a2:	fcf718e3          	bne	a4,a5,20402272 <__metal_clint0_mtime_get+0x28>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
204022a6:	fc842783          	lw	a5,-56(s0)
204022aa:	8c3e                	mv	s8,a5
204022ac:	4c81                	li	s9,0
204022ae:	000c1993          	slli	s3,s8,0x0
204022b2:	4901                	li	s2,0
204022b4:	fc442783          	lw	a5,-60(s0)
204022b8:	8a3e                	mv	s4,a5
204022ba:	4a81                	li	s5,0
204022bc:	01496b33          	or	s6,s2,s4
204022c0:	0159ebb3          	or	s7,s3,s5
204022c4:	875a                	mv	a4,s6
204022c6:	87de                	mv	a5,s7
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:30
}
204022c8:	853a                	mv	a0,a4
204022ca:	85be                	mv	a1,a5
204022cc:	40b6                	lw	ra,76(sp)
204022ce:	4426                	lw	s0,72(sp)
204022d0:	4916                	lw	s2,68(sp)
204022d2:	4986                	lw	s3,64(sp)
204022d4:	5a72                	lw	s4,60(sp)
204022d6:	5ae2                	lw	s5,56(sp)
204022d8:	5b52                	lw	s6,52(sp)
204022da:	5bc2                	lw	s7,48(sp)
204022dc:	5c32                	lw	s8,44(sp)
204022de:	5ca2                	lw	s9,40(sp)
204022e0:	6161                	addi	sp,sp,80
204022e2:	8082                	ret

204022e4 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
204022e4:	7179                	addi	sp,sp,-48
204022e6:	d606                	sw	ra,44(sp)
204022e8:	d422                	sw	s0,40(sp)
204022ea:	d24a                	sw	s2,36(sp)
204022ec:	d04e                	sw	s3,32(sp)
204022ee:	1800                	addi	s0,sp,48
204022f0:	fca42e23          	sw	a0,-36(s0)
204022f4:	fcb42c23          	sw	a1,-40(s0)
204022f8:	fcc42823          	sw	a2,-48(s0)
204022fc:	fcd42a23          	sw	a3,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
20402300:	fdc42783          	lw	a5,-36(s0)
20402304:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20402308:	fec42783          	lw	a5,-20(s0)
2040230c:	853e                	mv	a0,a5
2040230e:	3dbd                	jal	2040218c <__metal_driver_sifive_clint0_control_base>
20402310:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20402314:	fd842783          	lw	a5,-40(s0)
20402318:	078e                	slli	a5,a5,0x3
2040231a:	873e                	mv	a4,a5
2040231c:	fe842783          	lw	a5,-24(s0)
20402320:	973e                	add	a4,a4,a5
20402322:	6791                	lui	a5,0x4
20402324:	0791                	addi	a5,a5,4
20402326:	97ba                	add	a5,a5,a4
20402328:	873e                	mv	a4,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
2040232a:	57fd                	li	a5,-1
2040232c:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2040232e:	fd842783          	lw	a5,-40(s0)
20402332:	078e                	slli	a5,a5,0x3
20402334:	873e                	mv	a4,a5
20402336:	fe842783          	lw	a5,-24(s0)
2040233a:	973e                	add	a4,a4,a5
2040233c:	6791                	lui	a5,0x4
2040233e:	97ba                	add	a5,a5,a4
20402340:	873e                	mv	a4,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
20402342:	fd042783          	lw	a5,-48(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
20402346:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
20402348:	fd442783          	lw	a5,-44(s0)
2040234c:	0007d913          	srli	s2,a5,0x0
20402350:	4981                	li	s3,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20402352:	fd842783          	lw	a5,-40(s0)
20402356:	078e                	slli	a5,a5,0x3
20402358:	873e                	mv	a4,a5
2040235a:	fe842783          	lw	a5,-24(s0)
2040235e:	973e                	add	a4,a4,a5
20402360:	6791                	lui	a5,0x4
20402362:	0791                	addi	a5,a5,4
20402364:	97ba                	add	a5,a5,a4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
20402366:	874a                	mv	a4,s2
20402368:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
2040236a:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:55
}
2040236c:	853e                	mv	a0,a5
2040236e:	50b2                	lw	ra,44(sp)
20402370:	5422                	lw	s0,40(sp)
20402372:	5912                	lw	s2,36(sp)
20402374:	5982                	lw	s3,32(sp)
20402376:	6145                	addi	sp,sp,48
20402378:	8082                	ret

2040237a <_get_cpu_intc>:
_get_cpu_intc():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
2040237a:	1101                	addi	sp,sp,-32
2040237c:	ce06                	sw	ra,28(sp)
2040237e:	cc22                	sw	s0,24(sp)
20402380:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
20402382:	fe042623          	sw	zero,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
20402386:	f14027f3          	csrr	a5,mhartid
2040238a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
2040238e:	fec42783          	lw	a5,-20(s0)
20402392:	853e                	mv	a0,a5
20402394:	2a2040ef          	jal	ra,20406636 <metal_cpu_get>
20402398:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
2040239c:	fe842503          	lw	a0,-24(s0)
204023a0:	270040ef          	jal	ra,20406610 <metal_cpu_interrupt_controller>
204023a4:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:65
}
204023a6:	853e                	mv	a0,a5
204023a8:	40f2                	lw	ra,28(sp)
204023aa:	4462                	lw	s0,24(sp)
204023ac:	6105                	addi	sp,sp,32
204023ae:	8082                	ret

204023b0 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
204023b0:	7139                	addi	sp,sp,-64
204023b2:	de06                	sw	ra,60(sp)
204023b4:	dc22                	sw	s0,56(sp)
204023b6:	0080                	addi	s0,sp,64
204023b8:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
204023bc:	fcc42503          	lw	a0,-52(s0)
204023c0:	3bdd                	jal	204021b6 <__metal_driver_sifive_clint0_num_interrupts>
204023c2:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
204023c6:	fcc42783          	lw	a5,-52(s0)
204023ca:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
204023ce:	fe442783          	lw	a5,-28(s0)
204023d2:	43dc                	lw	a5,4(a5)
204023d4:	efa9                	bnez	a5,2040242e <__metal_driver_riscv_clint0_init+0x7e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
204023d6:	fe042623          	sw	zero,-20(s0)
204023da:	a081                	j	2040241a <__metal_driver_riscv_clint0_init+0x6a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204023dc:	fec42583          	lw	a1,-20(s0)
204023e0:	fcc42503          	lw	a0,-52(s0)
204023e4:	3bed                	jal	204021de <__metal_driver_sifive_clint0_interrupt_parents>
204023e6:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204023ea:	fec42583          	lw	a1,-20(s0)
204023ee:	fcc42503          	lw	a0,-52(s0)
204023f2:	3525                	jal	2040221a <__metal_driver_sifive_clint0_interrupt_lines>
204023f4:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
204023f8:	fe042783          	lw	a5,-32(s0)
204023fc:	439c                	lw	a5,0(a5)
204023fe:	4fdc                	lw	a5,28(a5)
20402400:	fcc42683          	lw	a3,-52(s0)
20402404:	4601                	li	a2,0
20402406:	fdc42583          	lw	a1,-36(s0)
2040240a:	fe042503          	lw	a0,-32(s0)
2040240e:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
20402410:	fec42783          	lw	a5,-20(s0)
20402414:	0785                	addi	a5,a5,1
20402416:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
2040241a:	fec42703          	lw	a4,-20(s0)
2040241e:	fe842783          	lw	a5,-24(s0)
20402422:	faf74de3          	blt	a4,a5,204023dc <__metal_driver_riscv_clint0_init+0x2c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
20402426:	fe442783          	lw	a5,-28(s0)
2040242a:	4705                	li	a4,1
2040242c:	c3d8                	sw	a4,4(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
2040242e:	0001                	nop
20402430:	50f2                	lw	ra,60(sp)
20402432:	5462                	lw	s0,56(sp)
20402434:	6121                	addi	sp,sp,64
20402436:	8082                	ret

20402438 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
20402438:	7139                	addi	sp,sp,-64
2040243a:	de06                	sw	ra,60(sp)
2040243c:	dc22                	sw	s0,56(sp)
2040243e:	0080                	addi	s0,sp,64
20402440:	fca42623          	sw	a0,-52(s0)
20402444:	fcb42423          	sw	a1,-56(s0)
20402448:	fcc42223          	sw	a2,-60(s0)
2040244c:	fcd42023          	sw	a3,-64(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
20402450:	57fd                	li	a5,-1
20402452:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20402456:	482010ef          	jal	ra,204038d8 <__metal_controller_interrupt_vector_mode>
2040245a:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
2040245e:	fe042423          	sw	zero,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20402462:	3f21                	jal	2040237a <_get_cpu_intc>
20402464:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20402468:	fcc42503          	lw	a0,-52(s0)
2040246c:	33a9                	jal	204021b6 <__metal_driver_sifive_clint0_num_interrupts>
2040246e:	fca42c23          	sw	a0,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
20402472:	fe042703          	lw	a4,-32(s0)
20402476:	4785                	li	a5,1
20402478:	00f70863          	beq	a4,a5,20402488 <__metal_driver_riscv_clint0_register+0x50>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
2040247c:	fe042783          	lw	a5,-32(s0)
20402480:	c781                	beqz	a5,20402488 <__metal_driver_riscv_clint0_register+0x50>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
20402482:	fec42783          	lw	a5,-20(s0)
20402486:	a049                	j	20402508 <__metal_driver_riscv_clint0_register+0xd0>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
20402488:	fe042223          	sw	zero,-28(s0)
2040248c:	a091                	j	204024d0 <__metal_driver_riscv_clint0_register+0x98>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2040248e:	fe442583          	lw	a1,-28(s0)
20402492:	fcc42503          	lw	a0,-52(s0)
20402496:	3351                	jal	2040221a <__metal_driver_sifive_clint0_interrupt_lines>
20402498:	fca42a23          	sw	a0,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2040249c:	fe442583          	lw	a1,-28(s0)
204024a0:	fcc42503          	lw	a0,-52(s0)
204024a4:	3b2d                	jal	204021de <__metal_driver_sifive_clint0_interrupt_parents>
204024a6:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
204024aa:	fdc42703          	lw	a4,-36(s0)
204024ae:	fe842783          	lw	a5,-24(s0)
204024b2:	00f71863          	bne	a4,a5,204024c2 <__metal_driver_riscv_clint0_register+0x8a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
204024b6:	fc842703          	lw	a4,-56(s0)
204024ba:	fd442783          	lw	a5,-44(s0)
204024be:	02f70063          	beq	a4,a5,204024de <__metal_driver_riscv_clint0_register+0xa6>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
204024c2:	fe042423          	sw	zero,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
204024c6:	fe442783          	lw	a5,-28(s0)
204024ca:	0785                	addi	a5,a5,1
204024cc:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
204024d0:	fe442703          	lw	a4,-28(s0)
204024d4:	fd842783          	lw	a5,-40(s0)
204024d8:	faf74be3          	blt	a4,a5,2040248e <__metal_driver_riscv_clint0_register+0x56>
204024dc:	a011                	j	204024e0 <__metal_driver_riscv_clint0_register+0xa8>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
204024de:	0001                	nop
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
204024e0:	fe842783          	lw	a5,-24(s0)
204024e4:	c385                	beqz	a5,20402504 <__metal_driver_riscv_clint0_register+0xcc>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
204024e6:	fe842783          	lw	a5,-24(s0)
204024ea:	439c                	lw	a5,0(a5)
204024ec:	4fdc                	lw	a5,28(a5)
204024ee:	fc042683          	lw	a3,-64(s0)
204024f2:	fc442603          	lw	a2,-60(s0)
204024f6:	fc842583          	lw	a1,-56(s0)
204024fa:	fe842503          	lw	a0,-24(s0)
204024fe:	9782                	jalr	a5
20402500:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20402504:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:115
}
20402508:	853e                	mv	a0,a5
2040250a:	50f2                	lw	ra,60(sp)
2040250c:	5462                	lw	s0,56(sp)
2040250e:	6121                	addi	sp,sp,64
20402510:	8082                	ret

20402512 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
20402512:	7179                	addi	sp,sp,-48
20402514:	d622                	sw	s0,44(sp)
20402516:	1800                	addi	s0,sp,48
20402518:	fca42e23          	sw	a0,-36(s0)
2040251c:	fcb42c23          	sw	a1,-40(s0)
20402520:	fcc42a23          	sw	a2,-44(s0)
20402524:	fcd42823          	sw	a3,-48(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
20402528:	57fd                	li	a5,-1
2040252a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
2040252e:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:123
}
20402532:	853e                	mv	a0,a5
20402534:	5432                	lw	s0,44(sp)
20402536:	6145                	addi	sp,sp,48
20402538:	8082                	ret

2040253a <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
2040253a:	1101                	addi	sp,sp,-32
2040253c:	ce06                	sw	ra,28(sp)
2040253e:	cc22                	sw	s0,24(sp)
20402540:	1000                	addi	s0,sp,32
20402542:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
20402546:	392010ef          	jal	ra,204038d8 <__metal_controller_interrupt_vector_mode>
2040254a:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:128
}
2040254c:	853e                	mv	a0,a5
2040254e:	40f2                	lw	ra,28(sp)
20402550:	4462                	lw	s0,24(sp)
20402552:	6105                	addi	sp,sp,32
20402554:	8082                	ret

20402556 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20402556:	7179                	addi	sp,sp,-48
20402558:	d606                	sw	ra,44(sp)
2040255a:	d422                	sw	s0,40(sp)
2040255c:	1800                	addi	s0,sp,48
2040255e:	fca42e23          	sw	a0,-36(s0)
20402562:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
20402566:	57fd                	li	a5,-1
20402568:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
2040256c:	3539                	jal	2040237a <_get_cpu_intc>
2040256e:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20402572:	fe842783          	lw	a5,-24(s0)
20402576:	c395                	beqz	a5,2040259a <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
20402578:	fd842703          	lw	a4,-40(s0)
2040257c:	4785                	li	a5,1
2040257e:	02e7e063          	bltu	a5,a4,2040259e <__metal_driver_riscv_clint0_set_vector_mode+0x48>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20402582:	fe842783          	lw	a5,-24(s0)
20402586:	439c                	lw	a5,0(a5)
20402588:	43dc                	lw	a5,4(a5)
2040258a:	fd842583          	lw	a1,-40(s0)
2040258e:	fe842503          	lw	a0,-24(s0)
20402592:	9782                	jalr	a5
20402594:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
20402598:	a021                	j	204025a0 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
2040259a:	0001                	nop
2040259c:	a011                	j	204025a0 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
2040259e:	0001                	nop
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
204025a0:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:148
}
204025a4:	853e                	mv	a0,a5
204025a6:	50b2                	lw	ra,44(sp)
204025a8:	5422                	lw	s0,40(sp)
204025aa:	6145                	addi	sp,sp,48
204025ac:	8082                	ret

204025ae <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
204025ae:	7139                	addi	sp,sp,-64
204025b0:	de06                	sw	ra,60(sp)
204025b2:	dc22                	sw	s0,56(sp)
204025b4:	0080                	addi	s0,sp,64
204025b6:	fca42623          	sw	a0,-52(s0)
204025ba:	fcb42423          	sw	a1,-56(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
204025be:	57fd                	li	a5,-1
204025c0:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
204025c4:	fc842783          	lw	a5,-56(s0)
204025c8:	c7c9                	beqz	a5,20402652 <__metal_driver_riscv_clint0_enable+0xa4>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
204025ca:	fe042423          	sw	zero,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
204025ce:	3375                	jal	2040237a <_get_cpu_intc>
204025d0:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
204025d4:	fcc42503          	lw	a0,-52(s0)
204025d8:	3ef9                	jal	204021b6 <__metal_driver_sifive_clint0_num_interrupts>
204025da:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
204025de:	fe042223          	sw	zero,-28(s0)
204025e2:	a091                	j	20402626 <__metal_driver_riscv_clint0_enable+0x78>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204025e4:	fe442583          	lw	a1,-28(s0)
204025e8:	fcc42503          	lw	a0,-52(s0)
204025ec:	313d                	jal	2040221a <__metal_driver_sifive_clint0_interrupt_lines>
204025ee:	fca42c23          	sw	a0,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204025f2:	fe442583          	lw	a1,-28(s0)
204025f6:	fcc42503          	lw	a0,-52(s0)
204025fa:	36d5                	jal	204021de <__metal_driver_sifive_clint0_interrupt_parents>
204025fc:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20402600:	fe042703          	lw	a4,-32(s0)
20402604:	fe842783          	lw	a5,-24(s0)
20402608:	00f71863          	bne	a4,a5,20402618 <__metal_driver_riscv_clint0_enable+0x6a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
2040260c:	fc842703          	lw	a4,-56(s0)
20402610:	fd842783          	lw	a5,-40(s0)
20402614:	02f70063          	beq	a4,a5,20402634 <__metal_driver_riscv_clint0_enable+0x86>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20402618:	fe042423          	sw	zero,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
2040261c:	fe442783          	lw	a5,-28(s0)
20402620:	0785                	addi	a5,a5,1
20402622:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20402626:	fe442703          	lw	a4,-28(s0)
2040262a:	fdc42783          	lw	a5,-36(s0)
2040262e:	faf74be3          	blt	a4,a5,204025e4 <__metal_driver_riscv_clint0_enable+0x36>
20402632:	a011                	j	20402636 <__metal_driver_riscv_clint0_enable+0x88>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
20402634:	0001                	nop
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20402636:	fe842783          	lw	a5,-24(s0)
2040263a:	cf81                	beqz	a5,20402652 <__metal_driver_riscv_clint0_enable+0xa4>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
2040263c:	fe842783          	lw	a5,-24(s0)
20402640:	439c                	lw	a5,0(a5)
20402642:	53dc                	lw	a5,36(a5)
20402644:	fc842583          	lw	a1,-56(s0)
20402648:	fe842503          	lw	a0,-24(s0)
2040264c:	9782                	jalr	a5
2040264e:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20402652:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:178
}
20402656:	853e                	mv	a0,a5
20402658:	50f2                	lw	ra,60(sp)
2040265a:	5462                	lw	s0,56(sp)
2040265c:	6121                	addi	sp,sp,64
2040265e:	8082                	ret

20402660 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20402660:	7139                	addi	sp,sp,-64
20402662:	de06                	sw	ra,60(sp)
20402664:	dc22                	sw	s0,56(sp)
20402666:	0080                	addi	s0,sp,64
20402668:	fca42623          	sw	a0,-52(s0)
2040266c:	fcb42423          	sw	a1,-56(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20402670:	57fd                	li	a5,-1
20402672:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20402676:	fc842783          	lw	a5,-56(s0)
2040267a:	c7c9                	beqz	a5,20402704 <__metal_driver_riscv_clint0_disable+0xa4>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
2040267c:	fe042423          	sw	zero,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20402680:	39ed                	jal	2040237a <_get_cpu_intc>
20402682:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20402686:	fcc42503          	lw	a0,-52(s0)
2040268a:	3635                	jal	204021b6 <__metal_driver_sifive_clint0_num_interrupts>
2040268c:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20402690:	fe042223          	sw	zero,-28(s0)
20402694:	a091                	j	204026d8 <__metal_driver_riscv_clint0_disable+0x78>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20402696:	fe442583          	lw	a1,-28(s0)
2040269a:	fcc42503          	lw	a0,-52(s0)
2040269e:	3eb5                	jal	2040221a <__metal_driver_sifive_clint0_interrupt_lines>
204026a0:	fca42c23          	sw	a0,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204026a4:	fe442583          	lw	a1,-28(s0)
204026a8:	fcc42503          	lw	a0,-52(s0)
204026ac:	3e0d                	jal	204021de <__metal_driver_sifive_clint0_interrupt_parents>
204026ae:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
204026b2:	fe042703          	lw	a4,-32(s0)
204026b6:	fe842783          	lw	a5,-24(s0)
204026ba:	00f71863          	bne	a4,a5,204026ca <__metal_driver_riscv_clint0_disable+0x6a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
204026be:	fc842703          	lw	a4,-56(s0)
204026c2:	fd842783          	lw	a5,-40(s0)
204026c6:	02f70063          	beq	a4,a5,204026e6 <__metal_driver_riscv_clint0_disable+0x86>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
204026ca:	fe042423          	sw	zero,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
204026ce:	fe442783          	lw	a5,-28(s0)
204026d2:	0785                	addi	a5,a5,1
204026d4:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
204026d8:	fe442703          	lw	a4,-28(s0)
204026dc:	fdc42783          	lw	a5,-36(s0)
204026e0:	faf74be3          	blt	a4,a5,20402696 <__metal_driver_riscv_clint0_disable+0x36>
204026e4:	a011                	j	204026e8 <__metal_driver_riscv_clint0_disable+0x88>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
204026e6:	0001                	nop
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
204026e8:	fe842783          	lw	a5,-24(s0)
204026ec:	cf81                	beqz	a5,20402704 <__metal_driver_riscv_clint0_disable+0xa4>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
204026ee:	fe842783          	lw	a5,-24(s0)
204026f2:	439c                	lw	a5,0(a5)
204026f4:	579c                	lw	a5,40(a5)
204026f6:	fc842583          	lw	a1,-56(s0)
204026fa:	fe842503          	lw	a0,-24(s0)
204026fe:	9782                	jalr	a5
20402700:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20402704:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:208
}
20402708:	853e                	mv	a0,a5
2040270a:	50f2                	lw	ra,60(sp)
2040270c:	5462                	lw	s0,56(sp)
2040270e:	6121                	addi	sp,sp,64
20402710:	8082                	ret

20402712 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20402712:	7179                	addi	sp,sp,-48
20402714:	d606                	sw	ra,44(sp)
20402716:	d422                	sw	s0,40(sp)
20402718:	1800                	addi	s0,sp,48
2040271a:	fca42e23          	sw	a0,-36(s0)
2040271e:	fcb42c23          	sw	a1,-40(s0)
20402722:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20402726:	57fd                	li	a5,-1
20402728:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
2040272c:	fdc42783          	lw	a5,-36(s0)
20402730:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20402734:	fdc42503          	lw	a0,-36(s0)
20402738:	a55ff0ef          	jal	ra,2040218c <__metal_driver_sifive_clint0_control_base>
2040273c:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20402740:	fd842703          	lw	a4,-40(s0)
20402744:	4791                	li	a5,4
20402746:	0cf70063          	beq	a4,a5,20402806 <__metal_driver_riscv_clint0_command_request+0xf4>
2040274a:	fd842703          	lw	a4,-40(s0)
2040274e:	4791                	li	a5,4
20402750:	0ee7c063          	blt	a5,a4,20402830 <__metal_driver_riscv_clint0_command_request+0x11e>
20402754:	fd842703          	lw	a4,-40(s0)
20402758:	478d                	li	a5,3
2040275a:	06f70563          	beq	a4,a5,204027c4 <__metal_driver_riscv_clint0_command_request+0xb2>
2040275e:	fd842703          	lw	a4,-40(s0)
20402762:	478d                	li	a5,3
20402764:	0ce7c663          	blt	a5,a4,20402830 <__metal_driver_riscv_clint0_command_request+0x11e>
20402768:	fd842703          	lw	a4,-40(s0)
2040276c:	4785                	li	a5,1
2040276e:	00f70863          	beq	a4,a5,2040277e <__metal_driver_riscv_clint0_command_request+0x6c>
20402772:	fd842703          	lw	a4,-40(s0)
20402776:	4789                	li	a5,2
20402778:	02f70263          	beq	a4,a5,2040279c <__metal_driver_riscv_clint0_command_request+0x8a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
2040277c:	a855                	j	20402830 <__metal_driver_riscv_clint0_command_request+0x11e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
2040277e:	fd442783          	lw	a5,-44(s0)
20402782:	cbcd                	beqz	a5,20402834 <__metal_driver_riscv_clint0_command_request+0x122>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20402784:	fe842503          	lw	a0,-24(s0)
20402788:	34c9                	jal	2040224a <__metal_clint0_mtime_get>
2040278a:	872a                	mv	a4,a0
2040278c:	87ae                	mv	a5,a1
2040278e:	fd442683          	lw	a3,-44(s0)
20402792:	c298                	sw	a4,0(a3)
20402794:	c2dc                	sw	a5,4(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20402796:	fe042623          	sw	zero,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
2040279a:	a869                	j	20402834 <__metal_driver_riscv_clint0_command_request+0x122>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
2040279c:	fd442783          	lw	a5,-44(s0)
204027a0:	cfc1                	beqz	a5,20402838 <__metal_driver_riscv_clint0_command_request+0x126>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
204027a2:	fd442783          	lw	a5,-44(s0)
204027a6:	439c                	lw	a5,0(a5)
204027a8:	fef42023          	sw	a5,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
204027ac:	fe042783          	lw	a5,-32(s0)
204027b0:	078a                	slli	a5,a5,0x2
204027b2:	873e                	mv	a4,a5
204027b4:	fe442783          	lw	a5,-28(s0)
204027b8:	97ba                	add	a5,a5,a4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
204027ba:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
204027be:	fe042623          	sw	zero,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
204027c2:	a89d                	j	20402838 <__metal_driver_riscv_clint0_command_request+0x126>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
204027c4:	fd442783          	lw	a5,-44(s0)
204027c8:	cbb5                	beqz	a5,2040283c <__metal_driver_riscv_clint0_command_request+0x12a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
204027ca:	fd442783          	lw	a5,-44(s0)
204027ce:	439c                	lw	a5,0(a5)
204027d0:	fef42023          	sw	a5,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
204027d4:	fe042783          	lw	a5,-32(s0)
204027d8:	078a                	slli	a5,a5,0x2
204027da:	873e                	mv	a4,a5
204027dc:	fe442783          	lw	a5,-28(s0)
204027e0:	97ba                	add	a5,a5,a4
204027e2:	873e                	mv	a4,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
204027e4:	4785                	li	a5,1
204027e6:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
204027e8:	0480000f          	fence	o,i
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
204027ec:	fe042783          	lw	a5,-32(s0)
204027f0:	078a                	slli	a5,a5,0x2
204027f2:	873e                	mv	a4,a5
204027f4:	fe442783          	lw	a5,-28(s0)
204027f8:	97ba                	add	a5,a5,a4
204027fa:	439c                	lw	a5,0(a5)
204027fc:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20402800:	fe042623          	sw	zero,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20402804:	a825                	j	2040283c <__metal_driver_riscv_clint0_command_request+0x12a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20402806:	fe042623          	sw	zero,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
2040280a:	fd442783          	lw	a5,-44(s0)
2040280e:	cb8d                	beqz	a5,20402840 <__metal_driver_riscv_clint0_command_request+0x12e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20402810:	fd442783          	lw	a5,-44(s0)
20402814:	439c                	lw	a5,0(a5)
20402816:	fef42023          	sw	a5,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
2040281a:	fe042783          	lw	a5,-32(s0)
2040281e:	078a                	slli	a5,a5,0x2
20402820:	873e                	mv	a4,a5
20402822:	fe442783          	lw	a5,-28(s0)
20402826:	97ba                	add	a5,a5,a4
20402828:	439c                	lw	a5,0(a5)
2040282a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
2040282e:	a809                	j	20402840 <__metal_driver_riscv_clint0_command_request+0x12e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20402830:	0001                	nop
20402832:	a801                	j	20402842 <__metal_driver_riscv_clint0_command_request+0x130>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20402834:	0001                	nop
20402836:	a031                	j	20402842 <__metal_driver_riscv_clint0_command_request+0x130>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20402838:	0001                	nop
2040283a:	a021                	j	20402842 <__metal_driver_riscv_clint0_command_request+0x130>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
2040283c:	0001                	nop
2040283e:	a011                	j	20402842 <__metal_driver_riscv_clint0_command_request+0x130>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20402840:	0001                	nop
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20402842:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:267
}
20402846:	853e                	mv	a0,a5
20402848:	50b2                	lw	ra,44(sp)
2040284a:	5422                	lw	s0,40(sp)
2040284c:	6145                	addi	sp,sp,48
2040284e:	8082                	ret

20402850 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20402850:	7179                	addi	sp,sp,-48
20402852:	d606                	sw	ra,44(sp)
20402854:	d422                	sw	s0,40(sp)
20402856:	1800                	addi	s0,sp,48
20402858:	fca42e23          	sw	a0,-36(s0)
2040285c:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20402860:	605030ef          	jal	ra,20406664 <metal_cpu_get_current_hartid>
20402864:	87aa                	mv	a5,a0
20402866:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
2040286a:	fec40793          	addi	a5,s0,-20
2040286e:	863e                	mv	a2,a5
20402870:	4589                	li	a1,2
20402872:	fdc42503          	lw	a0,-36(s0)
20402876:	3d71                	jal	20402712 <__metal_driver_riscv_clint0_command_request>
20402878:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
2040287a:	853e                	mv	a0,a5
2040287c:	50b2                	lw	ra,44(sp)
2040287e:	5422                	lw	s0,40(sp)
20402880:	6145                	addi	sp,sp,48
20402882:	8082                	ret

20402884 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20402884:	7179                	addi	sp,sp,-48
20402886:	d606                	sw	ra,44(sp)
20402888:	d422                	sw	s0,40(sp)
2040288a:	1800                	addi	s0,sp,48
2040288c:	fca42e23          	sw	a0,-36(s0)
20402890:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20402894:	5d1030ef          	jal	ra,20406664 <metal_cpu_get_current_hartid>
20402898:	87aa                	mv	a5,a0
2040289a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
2040289e:	fec40793          	addi	a5,s0,-20
204028a2:	863e                	mv	a2,a5
204028a4:	458d                	li	a1,3
204028a6:	fdc42503          	lw	a0,-36(s0)
204028aa:	35a5                	jal	20402712 <__metal_driver_riscv_clint0_command_request>
204028ac:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
204028ae:	853e                	mv	a0,a5
204028b0:	50b2                	lw	ra,44(sp)
204028b2:	5422                	lw	s0,40(sp)
204028b4:	6145                	addi	sp,sp,48
204028b6:	8082                	ret

204028b8 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:261



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
204028b8:	1101                	addi	sp,sp,-32
204028ba:	ce22                	sw	s0,28(sp)
204028bc:	1000                	addi	s0,sp,32
204028be:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:262
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204028c2:	fec42703          	lw	a4,-20(s0)
204028c6:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
204028ca:	00f71463          	bne	a4,a5,204028d2 <__metal_driver_cpu_hartid+0x1a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:263
		return 0;
204028ce:	4781                	li	a5,0
204028d0:	a011                	j	204028d4 <__metal_driver_cpu_hartid+0x1c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:266
	}
	else {
		return -1;
204028d2:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:268
	}
}
204028d4:	853e                	mv	a0,a5
204028d6:	4472                	lw	s0,28(sp)
204028d8:	6105                	addi	sp,sp,32
204028da:	8082                	ret

204028dc <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:271

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
204028dc:	1101                	addi	sp,sp,-32
204028de:	ce22                	sw	s0,28(sp)
204028e0:	1000                	addi	s0,sp,32
204028e2:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:272
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204028e6:	fec42703          	lw	a4,-20(s0)
204028ea:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
204028ee:	00f71763          	bne	a4,a5,204028fc <__metal_driver_cpu_timebase+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:273
		return 1000000;
204028f2:	000f47b7          	lui	a5,0xf4
204028f6:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
204028fa:	a011                	j	204028fe <__metal_driver_cpu_timebase+0x22>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:276
	}
	else {
		return 0;
204028fc:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:278
	}
}
204028fe:	853e                	mv	a0,a5
20402900:	4472                	lw	s0,28(sp)
20402902:	6105                	addi	sp,sp,32
20402904:	8082                	ret

20402906 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:281

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20402906:	1101                	addi	sp,sp,-32
20402908:	ce22                	sw	s0,28(sp)
2040290a:	1000                	addi	s0,sp,32
2040290c:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:282
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20402910:	fec42703          	lw	a4,-20(s0)
20402914:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20402918:	00f71763          	bne	a4,a5,20402926 <__metal_driver_cpu_interrupt_controller+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:283
		return &__metal_dt_cpu_0_interrupt_controller.controller;
2040291c:	800007b7          	lui	a5,0x80000
20402920:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffec18>
20402924:	a011                	j	20402928 <__metal_driver_cpu_interrupt_controller+0x22>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:286
	}
	else {
		return NULL;
20402926:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:288
	}
}
20402928:	853e                	mv	a0,a5
2040292a:	4472                	lw	s0,28(sp)
2040292c:	6105                	addi	sp,sp,32
2040292e:	8082                	ret

20402930 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:301
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20402930:	1101                	addi	sp,sp,-32
20402932:	ce22                	sw	s0,28(sp)
20402934:	1000                	addi	s0,sp,32
20402936:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:302
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
2040293a:	fec42703          	lw	a4,-20(s0)
2040293e:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20402942:	00f71463          	bne	a4,a5,2040294a <__metal_driver_cpu_buserror+0x1a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:303
		return NULL;
20402946:	4781                	li	a5,0
20402948:	a011                	j	2040294c <__metal_driver_cpu_buserror+0x1c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:306
	}
	else {
		return NULL;
2040294a:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:308
	}
}
2040294c:	853e                	mv	a0,a5
2040294e:	4472                	lw	s0,28(sp)
20402950:	6105                	addi	sp,sp,32
20402952:	8082                	ret

20402954 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
20402954:	1101                	addi	sp,sp,-32
20402956:	ce22                	sw	s0,28(sp)
20402958:	1000                	addi	s0,sp,32
2040295a:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
2040295e:	fec42783          	lw	a5,-20(s0)
20402962:	00f04c63          	bgtz	a5,2040297a <__metal_driver_cpu_get+0x26>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20402966:	800007b7          	lui	a5,0x80000
2040296a:	fec42703          	lw	a4,-20(s0)
2040296e:	070a                	slli	a4,a4,0x2
20402970:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20402974:	97ba                	add	a5,a5,a4
20402976:	439c                	lw	a5,0(a5)
20402978:	a011                	j	2040297c <__metal_driver_cpu_get+0x28>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
2040297a:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:30
}
2040297c:	853e                	mv	a0,a5
2040297e:	4472                	lw	s0,28(sp)
20402980:	6105                	addi	sp,sp,32
20402982:	8082                	ret

20402984 <__metal_myhart_id>:
__metal_myhart_id():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20402984:	1101                	addi	sp,sp,-32
20402986:	ce22                	sw	s0,28(sp)
20402988:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
2040298a:	f14027f3          	csrr	a5,mhartid
2040298e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20402992:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:36
}
20402996:	853e                	mv	a0,a5
20402998:	4472                	lw	s0,28(sp)
2040299a:	6105                	addi	sp,sp,32
2040299c:	8082                	ret

2040299e <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
2040299e:	1101                	addi	sp,sp,-32
204029a0:	ce22                	sw	s0,28(sp)
204029a2:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
204029a4:	47a1                	li	a5,8
204029a6:	3007a7f3          	csrrs	a5,mstatus,a5
204029aa:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
204029ae:	0001                	nop
204029b0:	4472                	lw	s0,28(sp)
204029b2:	6105                	addi	sp,sp,32
204029b4:	8082                	ret

204029b6 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
204029b6:	1101                	addi	sp,sp,-32
204029b8:	ce22                	sw	s0,28(sp)
204029ba:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
204029bc:	47a1                	li	a5,8
204029be:	3007b7f3          	csrrc	a5,mstatus,a5
204029c2:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
204029c6:	0001                	nop
204029c8:	4472                	lw	s0,28(sp)
204029ca:	6105                	addi	sp,sp,32
204029cc:	8082                	ret

204029ce <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
204029ce:	1101                	addi	sp,sp,-32
204029d0:	ce22                	sw	s0,28(sp)
204029d2:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
204029d4:	47a1                	li	a5,8
204029d6:	3047a7f3          	csrrs	a5,mie,a5
204029da:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
204029de:	0001                	nop
204029e0:	4472                	lw	s0,28(sp)
204029e2:	6105                	addi	sp,sp,32
204029e4:	8082                	ret

204029e6 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
204029e6:	1101                	addi	sp,sp,-32
204029e8:	ce22                	sw	s0,28(sp)
204029ea:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
204029ec:	47a1                	li	a5,8
204029ee:	3047b7f3          	csrrc	a5,mie,a5
204029f2:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
204029f6:	0001                	nop
204029f8:	4472                	lw	s0,28(sp)
204029fa:	6105                	addi	sp,sp,32
204029fc:	8082                	ret

204029fe <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
204029fe:	1101                	addi	sp,sp,-32
20402a00:	ce22                	sw	s0,28(sp)
20402a02:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20402a04:	08000793          	li	a5,128
20402a08:	3047a7f3          	csrrs	a5,mie,a5
20402a0c:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20402a10:	0001                	nop
20402a12:	4472                	lw	s0,28(sp)
20402a14:	6105                	addi	sp,sp,32
20402a16:	8082                	ret

20402a18 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20402a18:	1101                	addi	sp,sp,-32
20402a1a:	ce22                	sw	s0,28(sp)
20402a1c:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20402a1e:	08000793          	li	a5,128
20402a22:	3047b7f3          	csrrc	a5,mie,a5
20402a26:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20402a2a:	0001                	nop
20402a2c:	4472                	lw	s0,28(sp)
20402a2e:	6105                	addi	sp,sp,32
20402a30:	8082                	ret

20402a32 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20402a32:	1101                	addi	sp,sp,-32
20402a34:	ce22                	sw	s0,28(sp)
20402a36:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20402a38:	6785                	lui	a5,0x1
20402a3a:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20402a3e:	3047a7f3          	csrrs	a5,mie,a5
20402a42:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20402a46:	0001                	nop
20402a48:	4472                	lw	s0,28(sp)
20402a4a:	6105                	addi	sp,sp,32
20402a4c:	8082                	ret

20402a4e <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20402a4e:	1101                	addi	sp,sp,-32
20402a50:	ce22                	sw	s0,28(sp)
20402a52:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
20402a54:	6785                	lui	a5,0x1
20402a56:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20402a5a:	3047b7f3          	csrrc	a5,mie,a5
20402a5e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20402a62:	0001                	nop
20402a64:	4472                	lw	s0,28(sp)
20402a66:	6105                	addi	sp,sp,32
20402a68:	8082                	ret

20402a6a <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20402a6a:	7179                	addi	sp,sp,-48
20402a6c:	d622                	sw	s0,44(sp)
20402a6e:	1800                	addi	s0,sp,48
20402a70:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20402a74:	fdc42783          	lw	a5,-36(s0)
20402a78:	4705                	li	a4,1
20402a7a:	00f717b3          	sll	a5,a4,a5
20402a7e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20402a82:	fec42783          	lw	a5,-20(s0)
20402a86:	3047a7f3          	csrrs	a5,mie,a5
20402a8a:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:105
}
20402a8e:	0001                	nop
20402a90:	5432                	lw	s0,44(sp)
20402a92:	6145                	addi	sp,sp,48
20402a94:	8082                	ret

20402a96 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20402a96:	7179                	addi	sp,sp,-48
20402a98:	d622                	sw	s0,44(sp)
20402a9a:	1800                	addi	s0,sp,48
20402a9c:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20402aa0:	fdc42783          	lw	a5,-36(s0)
20402aa4:	4705                	li	a4,1
20402aa6:	00f717b3          	sll	a5,a4,a5
20402aaa:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20402aae:	fec42783          	lw	a5,-20(s0)
20402ab2:	3047b7f3          	csrrc	a5,mie,a5
20402ab6:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:111
}
20402aba:	0001                	nop
20402abc:	5432                	lw	s0,44(sp)
20402abe:	6145                	addi	sp,sp,48
20402ac0:	8082                	ret

20402ac2 <__metal_default_exception_handler>:
__metal_default_exception_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20402ac2:	1101                	addi	sp,sp,-32
20402ac4:	ce06                	sw	ra,28(sp)
20402ac6:	cc22                	sw	s0,24(sp)
20402ac8:	1000                	addi	s0,sp,32
20402aca:	fea42623          	sw	a0,-20(s0)
20402ace:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20402ad2:	06400513          	li	a0,100
20402ad6:	3cb030ef          	jal	ra,204066a0 <metal_shutdown>

20402ada <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20402ada:	1101                	addi	sp,sp,-32
20402adc:	ce06                	sw	ra,28(sp)
20402ade:	cc22                	sw	s0,24(sp)
20402ae0:	1000                	addi	s0,sp,32
20402ae2:	fea42623          	sw	a0,-20(s0)
20402ae6:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20402aea:	0c800513          	li	a0,200
20402aee:	3b3030ef          	jal	ra,204066a0 <metal_shutdown>

20402af2 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20402af2:	715d                	addi	sp,sp,-80
20402af4:	c686                	sw	ra,76(sp)
20402af6:	c496                	sw	t0,72(sp)
20402af8:	c29a                	sw	t1,68(sp)
20402afa:	c09e                	sw	t2,64(sp)
20402afc:	de22                	sw	s0,60(sp)
20402afe:	dc2a                	sw	a0,56(sp)
20402b00:	da2e                	sw	a1,52(sp)
20402b02:	d832                	sw	a2,48(sp)
20402b04:	d636                	sw	a3,44(sp)
20402b06:	d43a                	sw	a4,40(sp)
20402b08:	d23e                	sw	a5,36(sp)
20402b0a:	d042                	sw	a6,32(sp)
20402b0c:	ce46                	sw	a7,28(sp)
20402b0e:	cc72                	sw	t3,24(sp)
20402b10:	ca76                	sw	t4,20(sp)
20402b12:	c87a                	sw	t5,16(sp)
20402b14:	c67e                	sw	t6,12(sp)
20402b16:	0880                	addi	s0,sp,80
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20402b18:	12c00513          	li	a0,300
20402b1c:	385030ef          	jal	ra,204066a0 <metal_shutdown>

20402b20 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20402b20:	711d                	addi	sp,sp,-96
20402b22:	ce86                	sw	ra,92(sp)
20402b24:	cc96                	sw	t0,88(sp)
20402b26:	ca9a                	sw	t1,84(sp)
20402b28:	c89e                	sw	t2,80(sp)
20402b2a:	c6a2                	sw	s0,76(sp)
20402b2c:	c4aa                	sw	a0,72(sp)
20402b2e:	c2ae                	sw	a1,68(sp)
20402b30:	c0b2                	sw	a2,64(sp)
20402b32:	de36                	sw	a3,60(sp)
20402b34:	dc3a                	sw	a4,56(sp)
20402b36:	da3e                	sw	a5,52(sp)
20402b38:	d842                	sw	a6,48(sp)
20402b3a:	d646                	sw	a7,44(sp)
20402b3c:	d472                	sw	t3,40(sp)
20402b3e:	d276                	sw	t4,36(sp)
20402b40:	d07a                	sw	t5,32(sp)
20402b42:	ce7e                	sw	t6,28(sp)
20402b44:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20402b46:	3d3d                	jal	20402984 <__metal_myhart_id>
20402b48:	872a                	mv	a4,a0
20402b4a:	800007b7          	lui	a5,0x80000
20402b4e:	070a                	slli	a4,a4,0x2
20402b50:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20402b54:	97ba                	add	a5,a5,a4
20402b56:	439c                	lw	a5,0(a5)
20402b58:	faf42623          	sw	a5,-84(s0)
20402b5c:	fac42783          	lw	a5,-84(s0)
20402b60:	c785                	beqz	a5,20402b88 <metal_software_interrupt_vector_handler+0x68>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20402b62:	fac42503          	lw	a0,-84(s0)
20402b66:	3345                	jal	20402906 <__metal_driver_cpu_interrupt_controller>
20402b68:	faa42423          	sw	a0,-88(s0)
20402b6c:	fa842783          	lw	a5,-88(s0)
20402b70:	0e07a783          	lw	a5,224(a5)
20402b74:	faf42223          	sw	a5,-92(s0)
20402b78:	fa842783          	lw	a5,-88(s0)
20402b7c:	0d87a783          	lw	a5,216(a5)
20402b80:	fa442583          	lw	a1,-92(s0)
20402b84:	450d                	li	a0,3
20402b86:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:130
}
20402b88:	0001                	nop
20402b8a:	40f6                	lw	ra,92(sp)
20402b8c:	42e6                	lw	t0,88(sp)
20402b8e:	4356                	lw	t1,84(sp)
20402b90:	43c6                	lw	t2,80(sp)
20402b92:	4436                	lw	s0,76(sp)
20402b94:	4526                	lw	a0,72(sp)
20402b96:	4596                	lw	a1,68(sp)
20402b98:	4606                	lw	a2,64(sp)
20402b9a:	56f2                	lw	a3,60(sp)
20402b9c:	5762                	lw	a4,56(sp)
20402b9e:	57d2                	lw	a5,52(sp)
20402ba0:	5842                	lw	a6,48(sp)
20402ba2:	58b2                	lw	a7,44(sp)
20402ba4:	5e22                	lw	t3,40(sp)
20402ba6:	5e92                	lw	t4,36(sp)
20402ba8:	5f02                	lw	t5,32(sp)
20402baa:	4ff2                	lw	t6,28(sp)
20402bac:	6125                	addi	sp,sp,96
20402bae:	30200073          	mret

20402bb2 <__metal_default_sw_handler>:
__metal_default_sw_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20402bb2:	7179                	addi	sp,sp,-48
20402bb4:	d606                	sw	ra,44(sp)
20402bb6:	d422                	sw	s0,40(sp)
20402bb8:	1800                	addi	s0,sp,48
20402bba:	fca42e23          	sw	a0,-36(s0)
20402bbe:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20402bc2:	33c9                	jal	20402984 <__metal_myhart_id>
20402bc4:	872a                	mv	a4,a0
20402bc6:	800007b7          	lui	a5,0x80000
20402bca:	070a                	slli	a4,a4,0x2
20402bcc:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20402bd0:	97ba                	add	a5,a5,a4
20402bd2:	439c                	lw	a5,0(a5)
20402bd4:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20402bd8:	342027f3          	csrr	a5,mcause
20402bdc:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20402be0:	fec42783          	lw	a5,-20(s0)
20402be4:	c795                	beqz	a5,20402c10 <__metal_default_sw_handler+0x5e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20402be6:	fec42503          	lw	a0,-20(s0)
20402bea:	3b31                	jal	20402906 <__metal_driver_cpu_interrupt_controller>
20402bec:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20402bf0:	fe842783          	lw	a5,-24(s0)
20402bf4:	3ff7f793          	andi	a5,a5,1023
20402bf8:	fe442703          	lw	a4,-28(s0)
20402bfc:	0e878793          	addi	a5,a5,232
20402c00:	078a                	slli	a5,a5,0x2
20402c02:	97ba                	add	a5,a5,a4
20402c04:	439c                	lw	a5,0(a5)
20402c06:	fdc42583          	lw	a1,-36(s0)
20402c0a:	fec42503          	lw	a0,-20(s0)
20402c0e:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20402c10:	0001                	nop
20402c12:	50b2                	lw	ra,44(sp)
20402c14:	5422                	lw	s0,40(sp)
20402c16:	6145                	addi	sp,sp,48
20402c18:	8082                	ret

20402c1a <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20402c1a:	711d                	addi	sp,sp,-96
20402c1c:	ce86                	sw	ra,92(sp)
20402c1e:	cc96                	sw	t0,88(sp)
20402c20:	ca9a                	sw	t1,84(sp)
20402c22:	c89e                	sw	t2,80(sp)
20402c24:	c6a2                	sw	s0,76(sp)
20402c26:	c4aa                	sw	a0,72(sp)
20402c28:	c2ae                	sw	a1,68(sp)
20402c2a:	c0b2                	sw	a2,64(sp)
20402c2c:	de36                	sw	a3,60(sp)
20402c2e:	dc3a                	sw	a4,56(sp)
20402c30:	da3e                	sw	a5,52(sp)
20402c32:	d842                	sw	a6,48(sp)
20402c34:	d646                	sw	a7,44(sp)
20402c36:	d472                	sw	t3,40(sp)
20402c38:	d276                	sw	t4,36(sp)
20402c3a:	d07a                	sw	t5,32(sp)
20402c3c:	ce7e                	sw	t6,28(sp)
20402c3e:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20402c40:	3391                	jal	20402984 <__metal_myhart_id>
20402c42:	872a                	mv	a4,a0
20402c44:	800007b7          	lui	a5,0x80000
20402c48:	070a                	slli	a4,a4,0x2
20402c4a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20402c4e:	97ba                	add	a5,a5,a4
20402c50:	439c                	lw	a5,0(a5)
20402c52:	faf42623          	sw	a5,-84(s0)
20402c56:	fac42783          	lw	a5,-84(s0)
20402c5a:	c785                	beqz	a5,20402c82 <metal_timer_interrupt_vector_handler+0x68>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20402c5c:	fac42503          	lw	a0,-84(s0)
20402c60:	315d                	jal	20402906 <__metal_driver_cpu_interrupt_controller>
20402c62:	faa42423          	sw	a0,-88(s0)
20402c66:	fa842783          	lw	a5,-88(s0)
20402c6a:	1407a783          	lw	a5,320(a5)
20402c6e:	faf42223          	sw	a5,-92(s0)
20402c72:	fa842783          	lw	a5,-88(s0)
20402c76:	1387a783          	lw	a5,312(a5)
20402c7a:	fa442583          	lw	a1,-92(s0)
20402c7e:	451d                	li	a0,7
20402c80:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:150
}
20402c82:	0001                	nop
20402c84:	40f6                	lw	ra,92(sp)
20402c86:	42e6                	lw	t0,88(sp)
20402c88:	4356                	lw	t1,84(sp)
20402c8a:	43c6                	lw	t2,80(sp)
20402c8c:	4436                	lw	s0,76(sp)
20402c8e:	4526                	lw	a0,72(sp)
20402c90:	4596                	lw	a1,68(sp)
20402c92:	4606                	lw	a2,64(sp)
20402c94:	56f2                	lw	a3,60(sp)
20402c96:	5762                	lw	a4,56(sp)
20402c98:	57d2                	lw	a5,52(sp)
20402c9a:	5842                	lw	a6,48(sp)
20402c9c:	58b2                	lw	a7,44(sp)
20402c9e:	5e22                	lw	t3,40(sp)
20402ca0:	5e92                	lw	t4,36(sp)
20402ca2:	5f02                	lw	t5,32(sp)
20402ca4:	4ff2                	lw	t6,28(sp)
20402ca6:	6125                	addi	sp,sp,96
20402ca8:	30200073          	mret

20402cac <__metal_default_beu_handler>:
__metal_default_beu_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20402cac:	1101                	addi	sp,sp,-32
20402cae:	ce22                	sw	s0,28(sp)
20402cb0:	1000                	addi	s0,sp,32
20402cb2:	fea42623          	sw	a0,-20(s0)
20402cb6:	feb42423          	sw	a1,-24(s0)
20402cba:	0001                	nop
20402cbc:	4472                	lw	s0,28(sp)
20402cbe:	6105                	addi	sp,sp,32
20402cc0:	8082                	ret

20402cc2 <__metal_default_timer_handler>:
__metal_default_timer_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20402cc2:	7179                	addi	sp,sp,-48
20402cc4:	d606                	sw	ra,44(sp)
20402cc6:	d422                	sw	s0,40(sp)
20402cc8:	1800                	addi	s0,sp,48
20402cca:	fca42e23          	sw	a0,-36(s0)
20402cce:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20402cd2:	394d                	jal	20402984 <__metal_myhart_id>
20402cd4:	87aa                	mv	a5,a0
20402cd6:	853e                	mv	a0,a5
20402cd8:	39b5                	jal	20402954 <__metal_driver_cpu_get>
20402cda:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20402cde:	fec42503          	lw	a0,-20(s0)
20402ce2:	2ba010ef          	jal	ra,20403f9c <__metal_driver_cpu_mtime_get>
20402ce6:	fea42023          	sw	a0,-32(s0)
20402cea:	feb42223          	sw	a1,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20402cee:	fe042703          	lw	a4,-32(s0)
20402cf2:	fe442783          	lw	a5,-28(s0)
20402cf6:	4529                	li	a0,10
20402cf8:	4581                	li	a1,0
20402cfa:	00a70633          	add	a2,a4,a0
20402cfe:	8832                	mv	a6,a2
20402d00:	00e83833          	sltu	a6,a6,a4
20402d04:	00b786b3          	add	a3,a5,a1
20402d08:	00d807b3          	add	a5,a6,a3
20402d0c:	86be                	mv	a3,a5
20402d0e:	8732                	mv	a4,a2
20402d10:	87b6                	mv	a5,a3
20402d12:	85ba                	mv	a1,a4
20402d14:	863e                	mv	a2,a5
20402d16:	fec42503          	lw	a0,-20(s0)
20402d1a:	2e8010ef          	jal	ra,20404002 <__metal_driver_cpu_mtimecmp_set>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:160
}
20402d1e:	0001                	nop
20402d20:	50b2                	lw	ra,44(sp)
20402d22:	5422                	lw	s0,40(sp)
20402d24:	6145                	addi	sp,sp,48
20402d26:	8082                	ret
	...

20402d80 <__metal_exception_handler>:
__metal_exception_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20402d80:	7119                	addi	sp,sp,-128
20402d82:	de86                	sw	ra,124(sp)
20402d84:	dc96                	sw	t0,120(sp)
20402d86:	da9a                	sw	t1,116(sp)
20402d88:	d89e                	sw	t2,112(sp)
20402d8a:	d6a2                	sw	s0,108(sp)
20402d8c:	d4aa                	sw	a0,104(sp)
20402d8e:	d2ae                	sw	a1,100(sp)
20402d90:	d0b2                	sw	a2,96(sp)
20402d92:	ceb6                	sw	a3,92(sp)
20402d94:	ccba                	sw	a4,88(sp)
20402d96:	cabe                	sw	a5,84(sp)
20402d98:	c8c2                	sw	a6,80(sp)
20402d9a:	c6c6                	sw	a7,76(sp)
20402d9c:	c4f2                	sw	t3,72(sp)
20402d9e:	c2f6                	sw	t4,68(sp)
20402da0:	c0fa                	sw	t5,64(sp)
20402da2:	de7e                	sw	t6,60(sp)
20402da4:	0100                	addi	s0,sp,128
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20402da6:	3ef9                	jal	20402984 <__metal_myhart_id>
20402da8:	872a                	mv	a4,a0
20402daa:	800007b7          	lui	a5,0x80000
20402dae:	070a                	slli	a4,a4,0x2
20402db0:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20402db4:	97ba                	add	a5,a5,a4
20402db6:	439c                	lw	a5,0(a5)
20402db8:	faf42623          	sw	a5,-84(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20402dbc:	342027f3          	csrr	a5,mcause
20402dc0:	faf42423          	sw	a5,-88(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20402dc4:	341027f3          	csrr	a5,mepc
20402dc8:	faf42223          	sw	a5,-92(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
20402dcc:	343027f3          	csrr	a5,mtval
20402dd0:	faf42023          	sw	a5,-96(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20402dd4:	305027f3          	csrr	a5,mtvec
20402dd8:	f8f42e23          	sw	a5,-100(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
20402ddc:	fac42783          	lw	a5,-84(s0)
20402de0:	cbfd                	beqz	a5,20402ed6 <__metal_exception_handler+0x156>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20402de2:	fac42503          	lw	a0,-84(s0)
20402de6:	b21ff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
20402dea:	f8a42c23          	sw	a0,-104(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20402dee:	fa842783          	lw	a5,-88(s0)
20402df2:	3ff7f793          	andi	a5,a5,1023
20402df6:	f8f42a23          	sw	a5,-108(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
20402dfa:	fa842783          	lw	a5,-88(s0)
20402dfe:	0a07de63          	bgez	a5,20402eba <__metal_exception_handler+0x13a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20402e02:	f9442703          	lw	a4,-108(s0)
20402e06:	08000793          	li	a5,128
20402e0a:	02f71263          	bne	a4,a5,20402e2e <__metal_exception_handler+0xae>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20402e0e:	f9842783          	lw	a5,-104(s0)
20402e12:	3987a783          	lw	a5,920(a5)
20402e16:	f8f42623          	sw	a5,-116(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20402e1a:	f9842783          	lw	a5,-104(s0)
20402e1e:	3907a783          	lw	a5,912(a5)
20402e22:	f8c42583          	lw	a1,-116(s0)
20402e26:	f9442503          	lw	a0,-108(s0)
20402e2a:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
20402e2c:	a06d                	j	20402ed6 <__metal_exception_handler+0x156>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20402e2e:	f9442703          	lw	a4,-108(s0)
20402e32:	47ad                	li	a5,11
20402e34:	00e7d763          	bge	a5,a4,20402e42 <__metal_exception_handler+0xc2>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20402e38:	f9c42783          	lw	a5,-100(s0)
20402e3c:	03f7f793          	andi	a5,a5,63
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20402e40:	ef9d                	bnez	a5,20402e7e <__metal_exception_handler+0xfe>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20402e42:	f9842683          	lw	a3,-104(s0)
20402e46:	f9442703          	lw	a4,-108(s0)
20402e4a:	87ba                	mv	a5,a4
20402e4c:	0786                	slli	a5,a5,0x1
20402e4e:	97ba                	add	a5,a5,a4
20402e50:	078e                	slli	a5,a5,0x3
20402e52:	97b6                	add	a5,a5,a3
20402e54:	0987a783          	lw	a5,152(a5)
20402e58:	f8f42623          	sw	a5,-116(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
20402e5c:	f9842683          	lw	a3,-104(s0)
20402e60:	f9442703          	lw	a4,-108(s0)
20402e64:	87ba                	mv	a5,a4
20402e66:	0786                	slli	a5,a5,0x1
20402e68:	97ba                	add	a5,a5,a4
20402e6a:	078e                	slli	a5,a5,0x3
20402e6c:	97b6                	add	a5,a5,a3
20402e6e:	0907a783          	lw	a5,144(a5)
20402e72:	f8c42583          	lw	a1,-116(s0)
20402e76:	f9442503          	lw	a0,-108(s0)
20402e7a:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
20402e7c:	a8a9                	j	20402ed6 <__metal_exception_handler+0x156>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20402e7e:	f9c42783          	lw	a5,-100(s0)
20402e82:	03f7f713          	andi	a4,a5,63
20402e86:	4789                	li	a5,2
20402e88:	04f71763          	bne	a4,a5,20402ed6 <__metal_exception_handler+0x156>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
20402e8c:	307027f3          	csrr	a5,mtvt
20402e90:	f8f42823          	sw	a5,-112(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20402e94:	f9842783          	lw	a5,-104(s0)
20402e98:	0dc7a783          	lw	a5,220(a5)
20402e9c:	f8f42623          	sw	a5,-116(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20402ea0:	f9042783          	lw	a5,-112(s0)
20402ea4:	439c                	lw	a5,0(a5)
20402ea6:	f8f42423          	sw	a5,-120(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20402eaa:	f8842783          	lw	a5,-120(s0)
20402eae:	f8c42583          	lw	a1,-116(s0)
20402eb2:	f9442503          	lw	a0,-108(s0)
20402eb6:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20402eb8:	a839                	j	20402ed6 <__metal_exception_handler+0x156>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20402eba:	f9842703          	lw	a4,-104(s0)
20402ebe:	f9442783          	lw	a5,-108(s0)
20402ec2:	0e878793          	addi	a5,a5,232
20402ec6:	078a                	slli	a5,a5,0x2
20402ec8:	97ba                	add	a5,a5,a4
20402eca:	439c                	lw	a5,0(a5)
20402ecc:	f9442583          	lw	a1,-108(s0)
20402ed0:	fac42503          	lw	a0,-84(s0)
20402ed4:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20402ed6:	50f6                	lw	ra,124(sp)
20402ed8:	52e6                	lw	t0,120(sp)
20402eda:	5356                	lw	t1,116(sp)
20402edc:	53c6                	lw	t2,112(sp)
20402ede:	5436                	lw	s0,108(sp)
20402ee0:	5526                	lw	a0,104(sp)
20402ee2:	5596                	lw	a1,100(sp)
20402ee4:	5606                	lw	a2,96(sp)
20402ee6:	46f6                	lw	a3,92(sp)
20402ee8:	4766                	lw	a4,88(sp)
20402eea:	47d6                	lw	a5,84(sp)
20402eec:	4846                	lw	a6,80(sp)
20402eee:	48b6                	lw	a7,76(sp)
20402ef0:	4e26                	lw	t3,72(sp)
20402ef2:	4e96                	lw	t4,68(sp)
20402ef4:	4f06                	lw	t5,64(sp)
20402ef6:	5ff2                	lw	t6,60(sp)
20402ef8:	6109                	addi	sp,sp,128
20402efa:	30200073          	mret
	...

20402f78 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20402f78:	711d                	addi	sp,sp,-96
20402f7a:	ce86                	sw	ra,92(sp)
20402f7c:	cc96                	sw	t0,88(sp)
20402f7e:	ca9a                	sw	t1,84(sp)
20402f80:	c89e                	sw	t2,80(sp)
20402f82:	c6a2                	sw	s0,76(sp)
20402f84:	c4aa                	sw	a0,72(sp)
20402f86:	c2ae                	sw	a1,68(sp)
20402f88:	c0b2                	sw	a2,64(sp)
20402f8a:	de36                	sw	a3,60(sp)
20402f8c:	dc3a                	sw	a4,56(sp)
20402f8e:	da3e                	sw	a5,52(sp)
20402f90:	d842                	sw	a6,48(sp)
20402f92:	d646                	sw	a7,44(sp)
20402f94:	d472                	sw	t3,40(sp)
20402f96:	d276                	sw	t4,36(sp)
20402f98:	d07a                	sw	t5,32(sp)
20402f9a:	ce7e                	sw	t6,28(sp)
20402f9c:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20402f9e:	9e7ff0ef          	jal	ra,20402984 <__metal_myhart_id>
20402fa2:	872a                	mv	a4,a0
20402fa4:	800007b7          	lui	a5,0x80000
20402fa8:	070a                	slli	a4,a4,0x2
20402faa:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20402fae:	97ba                	add	a5,a5,a4
20402fb0:	439c                	lw	a5,0(a5)
20402fb2:	faf42623          	sw	a5,-84(s0)
20402fb6:	fac42783          	lw	a5,-84(s0)
20402fba:	c78d                	beqz	a5,20402fe4 <metal_lc0_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
20402fbc:	fac42503          	lw	a0,-84(s0)
20402fc0:	947ff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
20402fc4:	faa42423          	sw	a0,-88(s0)
20402fc8:	fa842783          	lw	a5,-88(s0)
20402fcc:	2187a783          	lw	a5,536(a5)
20402fd0:	faf42223          	sw	a5,-92(s0)
20402fd4:	fa842783          	lw	a5,-88(s0)
20402fd8:	2107a783          	lw	a5,528(a5)
20402fdc:	fa442583          	lw	a1,-92(s0)
20402fe0:	4541                	li	a0,16
20402fe2:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:216
}
20402fe4:	0001                	nop
20402fe6:	40f6                	lw	ra,92(sp)
20402fe8:	42e6                	lw	t0,88(sp)
20402fea:	4356                	lw	t1,84(sp)
20402fec:	43c6                	lw	t2,80(sp)
20402fee:	4436                	lw	s0,76(sp)
20402ff0:	4526                	lw	a0,72(sp)
20402ff2:	4596                	lw	a1,68(sp)
20402ff4:	4606                	lw	a2,64(sp)
20402ff6:	56f2                	lw	a3,60(sp)
20402ff8:	5762                	lw	a4,56(sp)
20402ffa:	57d2                	lw	a5,52(sp)
20402ffc:	5842                	lw	a6,48(sp)
20402ffe:	58b2                	lw	a7,44(sp)
20403000:	5e22                	lw	t3,40(sp)
20403002:	5e92                	lw	t4,36(sp)
20403004:	5f02                	lw	t5,32(sp)
20403006:	4ff2                	lw	t6,28(sp)
20403008:	6125                	addi	sp,sp,96
2040300a:	30200073          	mret

2040300e <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
2040300e:	711d                	addi	sp,sp,-96
20403010:	ce86                	sw	ra,92(sp)
20403012:	cc96                	sw	t0,88(sp)
20403014:	ca9a                	sw	t1,84(sp)
20403016:	c89e                	sw	t2,80(sp)
20403018:	c6a2                	sw	s0,76(sp)
2040301a:	c4aa                	sw	a0,72(sp)
2040301c:	c2ae                	sw	a1,68(sp)
2040301e:	c0b2                	sw	a2,64(sp)
20403020:	de36                	sw	a3,60(sp)
20403022:	dc3a                	sw	a4,56(sp)
20403024:	da3e                	sw	a5,52(sp)
20403026:	d842                	sw	a6,48(sp)
20403028:	d646                	sw	a7,44(sp)
2040302a:	d472                	sw	t3,40(sp)
2040302c:	d276                	sw	t4,36(sp)
2040302e:	d07a                	sw	t5,32(sp)
20403030:	ce7e                	sw	t6,28(sp)
20403032:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20403034:	951ff0ef          	jal	ra,20402984 <__metal_myhart_id>
20403038:	872a                	mv	a4,a0
2040303a:	800007b7          	lui	a5,0x80000
2040303e:	070a                	slli	a4,a4,0x2
20403040:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403044:	97ba                	add	a5,a5,a4
20403046:	439c                	lw	a5,0(a5)
20403048:	faf42623          	sw	a5,-84(s0)
2040304c:	fac42783          	lw	a5,-84(s0)
20403050:	c78d                	beqz	a5,2040307a <metal_lc1_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20403052:	fac42503          	lw	a0,-84(s0)
20403056:	8b1ff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
2040305a:	faa42423          	sw	a0,-88(s0)
2040305e:	fa842783          	lw	a5,-88(s0)
20403062:	2307a783          	lw	a5,560(a5)
20403066:	faf42223          	sw	a5,-92(s0)
2040306a:	fa842783          	lw	a5,-88(s0)
2040306e:	2287a783          	lw	a5,552(a5)
20403072:	fa442583          	lw	a1,-92(s0)
20403076:	4545                	li	a0,17
20403078:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:221
}
2040307a:	0001                	nop
2040307c:	40f6                	lw	ra,92(sp)
2040307e:	42e6                	lw	t0,88(sp)
20403080:	4356                	lw	t1,84(sp)
20403082:	43c6                	lw	t2,80(sp)
20403084:	4436                	lw	s0,76(sp)
20403086:	4526                	lw	a0,72(sp)
20403088:	4596                	lw	a1,68(sp)
2040308a:	4606                	lw	a2,64(sp)
2040308c:	56f2                	lw	a3,60(sp)
2040308e:	5762                	lw	a4,56(sp)
20403090:	57d2                	lw	a5,52(sp)
20403092:	5842                	lw	a6,48(sp)
20403094:	58b2                	lw	a7,44(sp)
20403096:	5e22                	lw	t3,40(sp)
20403098:	5e92                	lw	t4,36(sp)
2040309a:	5f02                	lw	t5,32(sp)
2040309c:	4ff2                	lw	t6,28(sp)
2040309e:	6125                	addi	sp,sp,96
204030a0:	30200073          	mret

204030a4 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
204030a4:	711d                	addi	sp,sp,-96
204030a6:	ce86                	sw	ra,92(sp)
204030a8:	cc96                	sw	t0,88(sp)
204030aa:	ca9a                	sw	t1,84(sp)
204030ac:	c89e                	sw	t2,80(sp)
204030ae:	c6a2                	sw	s0,76(sp)
204030b0:	c4aa                	sw	a0,72(sp)
204030b2:	c2ae                	sw	a1,68(sp)
204030b4:	c0b2                	sw	a2,64(sp)
204030b6:	de36                	sw	a3,60(sp)
204030b8:	dc3a                	sw	a4,56(sp)
204030ba:	da3e                	sw	a5,52(sp)
204030bc:	d842                	sw	a6,48(sp)
204030be:	d646                	sw	a7,44(sp)
204030c0:	d472                	sw	t3,40(sp)
204030c2:	d276                	sw	t4,36(sp)
204030c4:	d07a                	sw	t5,32(sp)
204030c6:	ce7e                	sw	t6,28(sp)
204030c8:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
204030ca:	8bbff0ef          	jal	ra,20402984 <__metal_myhart_id>
204030ce:	872a                	mv	a4,a0
204030d0:	800007b7          	lui	a5,0x80000
204030d4:	070a                	slli	a4,a4,0x2
204030d6:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204030da:	97ba                	add	a5,a5,a4
204030dc:	439c                	lw	a5,0(a5)
204030de:	faf42623          	sw	a5,-84(s0)
204030e2:	fac42783          	lw	a5,-84(s0)
204030e6:	c78d                	beqz	a5,20403110 <metal_lc2_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
204030e8:	fac42503          	lw	a0,-84(s0)
204030ec:	81bff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
204030f0:	faa42423          	sw	a0,-88(s0)
204030f4:	fa842783          	lw	a5,-88(s0)
204030f8:	2487a783          	lw	a5,584(a5)
204030fc:	faf42223          	sw	a5,-92(s0)
20403100:	fa842783          	lw	a5,-88(s0)
20403104:	2407a783          	lw	a5,576(a5)
20403108:	fa442583          	lw	a1,-92(s0)
2040310c:	4549                	li	a0,18
2040310e:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:226
}
20403110:	0001                	nop
20403112:	40f6                	lw	ra,92(sp)
20403114:	42e6                	lw	t0,88(sp)
20403116:	4356                	lw	t1,84(sp)
20403118:	43c6                	lw	t2,80(sp)
2040311a:	4436                	lw	s0,76(sp)
2040311c:	4526                	lw	a0,72(sp)
2040311e:	4596                	lw	a1,68(sp)
20403120:	4606                	lw	a2,64(sp)
20403122:	56f2                	lw	a3,60(sp)
20403124:	5762                	lw	a4,56(sp)
20403126:	57d2                	lw	a5,52(sp)
20403128:	5842                	lw	a6,48(sp)
2040312a:	58b2                	lw	a7,44(sp)
2040312c:	5e22                	lw	t3,40(sp)
2040312e:	5e92                	lw	t4,36(sp)
20403130:	5f02                	lw	t5,32(sp)
20403132:	4ff2                	lw	t6,28(sp)
20403134:	6125                	addi	sp,sp,96
20403136:	30200073          	mret

2040313a <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
2040313a:	711d                	addi	sp,sp,-96
2040313c:	ce86                	sw	ra,92(sp)
2040313e:	cc96                	sw	t0,88(sp)
20403140:	ca9a                	sw	t1,84(sp)
20403142:	c89e                	sw	t2,80(sp)
20403144:	c6a2                	sw	s0,76(sp)
20403146:	c4aa                	sw	a0,72(sp)
20403148:	c2ae                	sw	a1,68(sp)
2040314a:	c0b2                	sw	a2,64(sp)
2040314c:	de36                	sw	a3,60(sp)
2040314e:	dc3a                	sw	a4,56(sp)
20403150:	da3e                	sw	a5,52(sp)
20403152:	d842                	sw	a6,48(sp)
20403154:	d646                	sw	a7,44(sp)
20403156:	d472                	sw	t3,40(sp)
20403158:	d276                	sw	t4,36(sp)
2040315a:	d07a                	sw	t5,32(sp)
2040315c:	ce7e                	sw	t6,28(sp)
2040315e:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
20403160:	825ff0ef          	jal	ra,20402984 <__metal_myhart_id>
20403164:	872a                	mv	a4,a0
20403166:	800007b7          	lui	a5,0x80000
2040316a:	070a                	slli	a4,a4,0x2
2040316c:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403170:	97ba                	add	a5,a5,a4
20403172:	439c                	lw	a5,0(a5)
20403174:	faf42623          	sw	a5,-84(s0)
20403178:	fac42783          	lw	a5,-84(s0)
2040317c:	c78d                	beqz	a5,204031a6 <metal_lc3_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
2040317e:	fac42503          	lw	a0,-84(s0)
20403182:	f84ff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
20403186:	faa42423          	sw	a0,-88(s0)
2040318a:	fa842783          	lw	a5,-88(s0)
2040318e:	2607a783          	lw	a5,608(a5)
20403192:	faf42223          	sw	a5,-92(s0)
20403196:	fa842783          	lw	a5,-88(s0)
2040319a:	2587a783          	lw	a5,600(a5)
2040319e:	fa442583          	lw	a1,-92(s0)
204031a2:	454d                	li	a0,19
204031a4:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:231
}
204031a6:	0001                	nop
204031a8:	40f6                	lw	ra,92(sp)
204031aa:	42e6                	lw	t0,88(sp)
204031ac:	4356                	lw	t1,84(sp)
204031ae:	43c6                	lw	t2,80(sp)
204031b0:	4436                	lw	s0,76(sp)
204031b2:	4526                	lw	a0,72(sp)
204031b4:	4596                	lw	a1,68(sp)
204031b6:	4606                	lw	a2,64(sp)
204031b8:	56f2                	lw	a3,60(sp)
204031ba:	5762                	lw	a4,56(sp)
204031bc:	57d2                	lw	a5,52(sp)
204031be:	5842                	lw	a6,48(sp)
204031c0:	58b2                	lw	a7,44(sp)
204031c2:	5e22                	lw	t3,40(sp)
204031c4:	5e92                	lw	t4,36(sp)
204031c6:	5f02                	lw	t5,32(sp)
204031c8:	4ff2                	lw	t6,28(sp)
204031ca:	6125                	addi	sp,sp,96
204031cc:	30200073          	mret

204031d0 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
204031d0:	711d                	addi	sp,sp,-96
204031d2:	ce86                	sw	ra,92(sp)
204031d4:	cc96                	sw	t0,88(sp)
204031d6:	ca9a                	sw	t1,84(sp)
204031d8:	c89e                	sw	t2,80(sp)
204031da:	c6a2                	sw	s0,76(sp)
204031dc:	c4aa                	sw	a0,72(sp)
204031de:	c2ae                	sw	a1,68(sp)
204031e0:	c0b2                	sw	a2,64(sp)
204031e2:	de36                	sw	a3,60(sp)
204031e4:	dc3a                	sw	a4,56(sp)
204031e6:	da3e                	sw	a5,52(sp)
204031e8:	d842                	sw	a6,48(sp)
204031ea:	d646                	sw	a7,44(sp)
204031ec:	d472                	sw	t3,40(sp)
204031ee:	d276                	sw	t4,36(sp)
204031f0:	d07a                	sw	t5,32(sp)
204031f2:	ce7e                	sw	t6,28(sp)
204031f4:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
204031f6:	f8eff0ef          	jal	ra,20402984 <__metal_myhart_id>
204031fa:	872a                	mv	a4,a0
204031fc:	800007b7          	lui	a5,0x80000
20403200:	070a                	slli	a4,a4,0x2
20403202:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403206:	97ba                	add	a5,a5,a4
20403208:	439c                	lw	a5,0(a5)
2040320a:	faf42623          	sw	a5,-84(s0)
2040320e:	fac42783          	lw	a5,-84(s0)
20403212:	c78d                	beqz	a5,2040323c <metal_lc4_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20403214:	fac42503          	lw	a0,-84(s0)
20403218:	eeeff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
2040321c:	faa42423          	sw	a0,-88(s0)
20403220:	fa842783          	lw	a5,-88(s0)
20403224:	2787a783          	lw	a5,632(a5)
20403228:	faf42223          	sw	a5,-92(s0)
2040322c:	fa842783          	lw	a5,-88(s0)
20403230:	2707a783          	lw	a5,624(a5)
20403234:	fa442583          	lw	a1,-92(s0)
20403238:	4551                	li	a0,20
2040323a:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:236
}
2040323c:	0001                	nop
2040323e:	40f6                	lw	ra,92(sp)
20403240:	42e6                	lw	t0,88(sp)
20403242:	4356                	lw	t1,84(sp)
20403244:	43c6                	lw	t2,80(sp)
20403246:	4436                	lw	s0,76(sp)
20403248:	4526                	lw	a0,72(sp)
2040324a:	4596                	lw	a1,68(sp)
2040324c:	4606                	lw	a2,64(sp)
2040324e:	56f2                	lw	a3,60(sp)
20403250:	5762                	lw	a4,56(sp)
20403252:	57d2                	lw	a5,52(sp)
20403254:	5842                	lw	a6,48(sp)
20403256:	58b2                	lw	a7,44(sp)
20403258:	5e22                	lw	t3,40(sp)
2040325a:	5e92                	lw	t4,36(sp)
2040325c:	5f02                	lw	t5,32(sp)
2040325e:	4ff2                	lw	t6,28(sp)
20403260:	6125                	addi	sp,sp,96
20403262:	30200073          	mret

20403266 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20403266:	711d                	addi	sp,sp,-96
20403268:	ce86                	sw	ra,92(sp)
2040326a:	cc96                	sw	t0,88(sp)
2040326c:	ca9a                	sw	t1,84(sp)
2040326e:	c89e                	sw	t2,80(sp)
20403270:	c6a2                	sw	s0,76(sp)
20403272:	c4aa                	sw	a0,72(sp)
20403274:	c2ae                	sw	a1,68(sp)
20403276:	c0b2                	sw	a2,64(sp)
20403278:	de36                	sw	a3,60(sp)
2040327a:	dc3a                	sw	a4,56(sp)
2040327c:	da3e                	sw	a5,52(sp)
2040327e:	d842                	sw	a6,48(sp)
20403280:	d646                	sw	a7,44(sp)
20403282:	d472                	sw	t3,40(sp)
20403284:	d276                	sw	t4,36(sp)
20403286:	d07a                	sw	t5,32(sp)
20403288:	ce7e                	sw	t6,28(sp)
2040328a:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2040328c:	ef8ff0ef          	jal	ra,20402984 <__metal_myhart_id>
20403290:	872a                	mv	a4,a0
20403292:	800007b7          	lui	a5,0x80000
20403296:	070a                	slli	a4,a4,0x2
20403298:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
2040329c:	97ba                	add	a5,a5,a4
2040329e:	439c                	lw	a5,0(a5)
204032a0:	faf42623          	sw	a5,-84(s0)
204032a4:	fac42783          	lw	a5,-84(s0)
204032a8:	c78d                	beqz	a5,204032d2 <metal_lc5_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
204032aa:	fac42503          	lw	a0,-84(s0)
204032ae:	e58ff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
204032b2:	faa42423          	sw	a0,-88(s0)
204032b6:	fa842783          	lw	a5,-88(s0)
204032ba:	2907a783          	lw	a5,656(a5)
204032be:	faf42223          	sw	a5,-92(s0)
204032c2:	fa842783          	lw	a5,-88(s0)
204032c6:	2887a783          	lw	a5,648(a5)
204032ca:	fa442583          	lw	a1,-92(s0)
204032ce:	4555                	li	a0,21
204032d0:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:241
}
204032d2:	0001                	nop
204032d4:	40f6                	lw	ra,92(sp)
204032d6:	42e6                	lw	t0,88(sp)
204032d8:	4356                	lw	t1,84(sp)
204032da:	43c6                	lw	t2,80(sp)
204032dc:	4436                	lw	s0,76(sp)
204032de:	4526                	lw	a0,72(sp)
204032e0:	4596                	lw	a1,68(sp)
204032e2:	4606                	lw	a2,64(sp)
204032e4:	56f2                	lw	a3,60(sp)
204032e6:	5762                	lw	a4,56(sp)
204032e8:	57d2                	lw	a5,52(sp)
204032ea:	5842                	lw	a6,48(sp)
204032ec:	58b2                	lw	a7,44(sp)
204032ee:	5e22                	lw	t3,40(sp)
204032f0:	5e92                	lw	t4,36(sp)
204032f2:	5f02                	lw	t5,32(sp)
204032f4:	4ff2                	lw	t6,28(sp)
204032f6:	6125                	addi	sp,sp,96
204032f8:	30200073          	mret

204032fc <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
204032fc:	711d                	addi	sp,sp,-96
204032fe:	ce86                	sw	ra,92(sp)
20403300:	cc96                	sw	t0,88(sp)
20403302:	ca9a                	sw	t1,84(sp)
20403304:	c89e                	sw	t2,80(sp)
20403306:	c6a2                	sw	s0,76(sp)
20403308:	c4aa                	sw	a0,72(sp)
2040330a:	c2ae                	sw	a1,68(sp)
2040330c:	c0b2                	sw	a2,64(sp)
2040330e:	de36                	sw	a3,60(sp)
20403310:	dc3a                	sw	a4,56(sp)
20403312:	da3e                	sw	a5,52(sp)
20403314:	d842                	sw	a6,48(sp)
20403316:	d646                	sw	a7,44(sp)
20403318:	d472                	sw	t3,40(sp)
2040331a:	d276                	sw	t4,36(sp)
2040331c:	d07a                	sw	t5,32(sp)
2040331e:	ce7e                	sw	t6,28(sp)
20403320:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
20403322:	e62ff0ef          	jal	ra,20402984 <__metal_myhart_id>
20403326:	872a                	mv	a4,a0
20403328:	800007b7          	lui	a5,0x80000
2040332c:	070a                	slli	a4,a4,0x2
2040332e:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403332:	97ba                	add	a5,a5,a4
20403334:	439c                	lw	a5,0(a5)
20403336:	faf42623          	sw	a5,-84(s0)
2040333a:	fac42783          	lw	a5,-84(s0)
2040333e:	c78d                	beqz	a5,20403368 <metal_lc6_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
20403340:	fac42503          	lw	a0,-84(s0)
20403344:	dc2ff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
20403348:	faa42423          	sw	a0,-88(s0)
2040334c:	fa842783          	lw	a5,-88(s0)
20403350:	2a87a783          	lw	a5,680(a5)
20403354:	faf42223          	sw	a5,-92(s0)
20403358:	fa842783          	lw	a5,-88(s0)
2040335c:	2a07a783          	lw	a5,672(a5)
20403360:	fa442583          	lw	a1,-92(s0)
20403364:	4559                	li	a0,22
20403366:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:246
}
20403368:	0001                	nop
2040336a:	40f6                	lw	ra,92(sp)
2040336c:	42e6                	lw	t0,88(sp)
2040336e:	4356                	lw	t1,84(sp)
20403370:	43c6                	lw	t2,80(sp)
20403372:	4436                	lw	s0,76(sp)
20403374:	4526                	lw	a0,72(sp)
20403376:	4596                	lw	a1,68(sp)
20403378:	4606                	lw	a2,64(sp)
2040337a:	56f2                	lw	a3,60(sp)
2040337c:	5762                	lw	a4,56(sp)
2040337e:	57d2                	lw	a5,52(sp)
20403380:	5842                	lw	a6,48(sp)
20403382:	58b2                	lw	a7,44(sp)
20403384:	5e22                	lw	t3,40(sp)
20403386:	5e92                	lw	t4,36(sp)
20403388:	5f02                	lw	t5,32(sp)
2040338a:	4ff2                	lw	t6,28(sp)
2040338c:	6125                	addi	sp,sp,96
2040338e:	30200073          	mret

20403392 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20403392:	711d                	addi	sp,sp,-96
20403394:	ce86                	sw	ra,92(sp)
20403396:	cc96                	sw	t0,88(sp)
20403398:	ca9a                	sw	t1,84(sp)
2040339a:	c89e                	sw	t2,80(sp)
2040339c:	c6a2                	sw	s0,76(sp)
2040339e:	c4aa                	sw	a0,72(sp)
204033a0:	c2ae                	sw	a1,68(sp)
204033a2:	c0b2                	sw	a2,64(sp)
204033a4:	de36                	sw	a3,60(sp)
204033a6:	dc3a                	sw	a4,56(sp)
204033a8:	da3e                	sw	a5,52(sp)
204033aa:	d842                	sw	a6,48(sp)
204033ac:	d646                	sw	a7,44(sp)
204033ae:	d472                	sw	t3,40(sp)
204033b0:	d276                	sw	t4,36(sp)
204033b2:	d07a                	sw	t5,32(sp)
204033b4:	ce7e                	sw	t6,28(sp)
204033b6:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
204033b8:	dccff0ef          	jal	ra,20402984 <__metal_myhart_id>
204033bc:	872a                	mv	a4,a0
204033be:	800007b7          	lui	a5,0x80000
204033c2:	070a                	slli	a4,a4,0x2
204033c4:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204033c8:	97ba                	add	a5,a5,a4
204033ca:	439c                	lw	a5,0(a5)
204033cc:	faf42623          	sw	a5,-84(s0)
204033d0:	fac42783          	lw	a5,-84(s0)
204033d4:	c78d                	beqz	a5,204033fe <metal_lc7_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
204033d6:	fac42503          	lw	a0,-84(s0)
204033da:	d2cff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
204033de:	faa42423          	sw	a0,-88(s0)
204033e2:	fa842783          	lw	a5,-88(s0)
204033e6:	2c07a783          	lw	a5,704(a5)
204033ea:	faf42223          	sw	a5,-92(s0)
204033ee:	fa842783          	lw	a5,-88(s0)
204033f2:	2b87a783          	lw	a5,696(a5)
204033f6:	fa442583          	lw	a1,-92(s0)
204033fa:	455d                	li	a0,23
204033fc:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:251
}
204033fe:	0001                	nop
20403400:	40f6                	lw	ra,92(sp)
20403402:	42e6                	lw	t0,88(sp)
20403404:	4356                	lw	t1,84(sp)
20403406:	43c6                	lw	t2,80(sp)
20403408:	4436                	lw	s0,76(sp)
2040340a:	4526                	lw	a0,72(sp)
2040340c:	4596                	lw	a1,68(sp)
2040340e:	4606                	lw	a2,64(sp)
20403410:	56f2                	lw	a3,60(sp)
20403412:	5762                	lw	a4,56(sp)
20403414:	57d2                	lw	a5,52(sp)
20403416:	5842                	lw	a6,48(sp)
20403418:	58b2                	lw	a7,44(sp)
2040341a:	5e22                	lw	t3,40(sp)
2040341c:	5e92                	lw	t4,36(sp)
2040341e:	5f02                	lw	t5,32(sp)
20403420:	4ff2                	lw	t6,28(sp)
20403422:	6125                	addi	sp,sp,96
20403424:	30200073          	mret

20403428 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
20403428:	711d                	addi	sp,sp,-96
2040342a:	ce86                	sw	ra,92(sp)
2040342c:	cc96                	sw	t0,88(sp)
2040342e:	ca9a                	sw	t1,84(sp)
20403430:	c89e                	sw	t2,80(sp)
20403432:	c6a2                	sw	s0,76(sp)
20403434:	c4aa                	sw	a0,72(sp)
20403436:	c2ae                	sw	a1,68(sp)
20403438:	c0b2                	sw	a2,64(sp)
2040343a:	de36                	sw	a3,60(sp)
2040343c:	dc3a                	sw	a4,56(sp)
2040343e:	da3e                	sw	a5,52(sp)
20403440:	d842                	sw	a6,48(sp)
20403442:	d646                	sw	a7,44(sp)
20403444:	d472                	sw	t3,40(sp)
20403446:	d276                	sw	t4,36(sp)
20403448:	d07a                	sw	t5,32(sp)
2040344a:	ce7e                	sw	t6,28(sp)
2040344c:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
2040344e:	d36ff0ef          	jal	ra,20402984 <__metal_myhart_id>
20403452:	872a                	mv	a4,a0
20403454:	800007b7          	lui	a5,0x80000
20403458:	070a                	slli	a4,a4,0x2
2040345a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
2040345e:	97ba                	add	a5,a5,a4
20403460:	439c                	lw	a5,0(a5)
20403462:	faf42623          	sw	a5,-84(s0)
20403466:	fac42783          	lw	a5,-84(s0)
2040346a:	c78d                	beqz	a5,20403494 <metal_lc8_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
2040346c:	fac42503          	lw	a0,-84(s0)
20403470:	c96ff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
20403474:	faa42423          	sw	a0,-88(s0)
20403478:	fa842783          	lw	a5,-88(s0)
2040347c:	2d87a783          	lw	a5,728(a5)
20403480:	faf42223          	sw	a5,-92(s0)
20403484:	fa842783          	lw	a5,-88(s0)
20403488:	2d07a783          	lw	a5,720(a5)
2040348c:	fa442583          	lw	a1,-92(s0)
20403490:	4561                	li	a0,24
20403492:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:256
}
20403494:	0001                	nop
20403496:	40f6                	lw	ra,92(sp)
20403498:	42e6                	lw	t0,88(sp)
2040349a:	4356                	lw	t1,84(sp)
2040349c:	43c6                	lw	t2,80(sp)
2040349e:	4436                	lw	s0,76(sp)
204034a0:	4526                	lw	a0,72(sp)
204034a2:	4596                	lw	a1,68(sp)
204034a4:	4606                	lw	a2,64(sp)
204034a6:	56f2                	lw	a3,60(sp)
204034a8:	5762                	lw	a4,56(sp)
204034aa:	57d2                	lw	a5,52(sp)
204034ac:	5842                	lw	a6,48(sp)
204034ae:	58b2                	lw	a7,44(sp)
204034b0:	5e22                	lw	t3,40(sp)
204034b2:	5e92                	lw	t4,36(sp)
204034b4:	5f02                	lw	t5,32(sp)
204034b6:	4ff2                	lw	t6,28(sp)
204034b8:	6125                	addi	sp,sp,96
204034ba:	30200073          	mret

204034be <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
204034be:	711d                	addi	sp,sp,-96
204034c0:	ce86                	sw	ra,92(sp)
204034c2:	cc96                	sw	t0,88(sp)
204034c4:	ca9a                	sw	t1,84(sp)
204034c6:	c89e                	sw	t2,80(sp)
204034c8:	c6a2                	sw	s0,76(sp)
204034ca:	c4aa                	sw	a0,72(sp)
204034cc:	c2ae                	sw	a1,68(sp)
204034ce:	c0b2                	sw	a2,64(sp)
204034d0:	de36                	sw	a3,60(sp)
204034d2:	dc3a                	sw	a4,56(sp)
204034d4:	da3e                	sw	a5,52(sp)
204034d6:	d842                	sw	a6,48(sp)
204034d8:	d646                	sw	a7,44(sp)
204034da:	d472                	sw	t3,40(sp)
204034dc:	d276                	sw	t4,36(sp)
204034de:	d07a                	sw	t5,32(sp)
204034e0:	ce7e                	sw	t6,28(sp)
204034e2:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
204034e4:	ca0ff0ef          	jal	ra,20402984 <__metal_myhart_id>
204034e8:	872a                	mv	a4,a0
204034ea:	800007b7          	lui	a5,0x80000
204034ee:	070a                	slli	a4,a4,0x2
204034f0:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204034f4:	97ba                	add	a5,a5,a4
204034f6:	439c                	lw	a5,0(a5)
204034f8:	faf42623          	sw	a5,-84(s0)
204034fc:	fac42783          	lw	a5,-84(s0)
20403500:	c78d                	beqz	a5,2040352a <metal_lc9_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20403502:	fac42503          	lw	a0,-84(s0)
20403506:	c00ff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
2040350a:	faa42423          	sw	a0,-88(s0)
2040350e:	fa842783          	lw	a5,-88(s0)
20403512:	2f07a783          	lw	a5,752(a5)
20403516:	faf42223          	sw	a5,-92(s0)
2040351a:	fa842783          	lw	a5,-88(s0)
2040351e:	2e87a783          	lw	a5,744(a5)
20403522:	fa442583          	lw	a1,-92(s0)
20403526:	4565                	li	a0,25
20403528:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:261
}
2040352a:	0001                	nop
2040352c:	40f6                	lw	ra,92(sp)
2040352e:	42e6                	lw	t0,88(sp)
20403530:	4356                	lw	t1,84(sp)
20403532:	43c6                	lw	t2,80(sp)
20403534:	4436                	lw	s0,76(sp)
20403536:	4526                	lw	a0,72(sp)
20403538:	4596                	lw	a1,68(sp)
2040353a:	4606                	lw	a2,64(sp)
2040353c:	56f2                	lw	a3,60(sp)
2040353e:	5762                	lw	a4,56(sp)
20403540:	57d2                	lw	a5,52(sp)
20403542:	5842                	lw	a6,48(sp)
20403544:	58b2                	lw	a7,44(sp)
20403546:	5e22                	lw	t3,40(sp)
20403548:	5e92                	lw	t4,36(sp)
2040354a:	5f02                	lw	t5,32(sp)
2040354c:	4ff2                	lw	t6,28(sp)
2040354e:	6125                	addi	sp,sp,96
20403550:	30200073          	mret

20403554 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20403554:	711d                	addi	sp,sp,-96
20403556:	ce86                	sw	ra,92(sp)
20403558:	cc96                	sw	t0,88(sp)
2040355a:	ca9a                	sw	t1,84(sp)
2040355c:	c89e                	sw	t2,80(sp)
2040355e:	c6a2                	sw	s0,76(sp)
20403560:	c4aa                	sw	a0,72(sp)
20403562:	c2ae                	sw	a1,68(sp)
20403564:	c0b2                	sw	a2,64(sp)
20403566:	de36                	sw	a3,60(sp)
20403568:	dc3a                	sw	a4,56(sp)
2040356a:	da3e                	sw	a5,52(sp)
2040356c:	d842                	sw	a6,48(sp)
2040356e:	d646                	sw	a7,44(sp)
20403570:	d472                	sw	t3,40(sp)
20403572:	d276                	sw	t4,36(sp)
20403574:	d07a                	sw	t5,32(sp)
20403576:	ce7e                	sw	t6,28(sp)
20403578:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
2040357a:	c0aff0ef          	jal	ra,20402984 <__metal_myhart_id>
2040357e:	872a                	mv	a4,a0
20403580:	800007b7          	lui	a5,0x80000
20403584:	070a                	slli	a4,a4,0x2
20403586:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
2040358a:	97ba                	add	a5,a5,a4
2040358c:	439c                	lw	a5,0(a5)
2040358e:	faf42623          	sw	a5,-84(s0)
20403592:	fac42783          	lw	a5,-84(s0)
20403596:	c78d                	beqz	a5,204035c0 <metal_lc10_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20403598:	fac42503          	lw	a0,-84(s0)
2040359c:	b6aff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
204035a0:	faa42423          	sw	a0,-88(s0)
204035a4:	fa842783          	lw	a5,-88(s0)
204035a8:	3087a783          	lw	a5,776(a5)
204035ac:	faf42223          	sw	a5,-92(s0)
204035b0:	fa842783          	lw	a5,-88(s0)
204035b4:	3007a783          	lw	a5,768(a5)
204035b8:	fa442583          	lw	a1,-92(s0)
204035bc:	4569                	li	a0,26
204035be:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:267
}
204035c0:	0001                	nop
204035c2:	40f6                	lw	ra,92(sp)
204035c4:	42e6                	lw	t0,88(sp)
204035c6:	4356                	lw	t1,84(sp)
204035c8:	43c6                	lw	t2,80(sp)
204035ca:	4436                	lw	s0,76(sp)
204035cc:	4526                	lw	a0,72(sp)
204035ce:	4596                	lw	a1,68(sp)
204035d0:	4606                	lw	a2,64(sp)
204035d2:	56f2                	lw	a3,60(sp)
204035d4:	5762                	lw	a4,56(sp)
204035d6:	57d2                	lw	a5,52(sp)
204035d8:	5842                	lw	a6,48(sp)
204035da:	58b2                	lw	a7,44(sp)
204035dc:	5e22                	lw	t3,40(sp)
204035de:	5e92                	lw	t4,36(sp)
204035e0:	5f02                	lw	t5,32(sp)
204035e2:	4ff2                	lw	t6,28(sp)
204035e4:	6125                	addi	sp,sp,96
204035e6:	30200073          	mret

204035ea <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
204035ea:	711d                	addi	sp,sp,-96
204035ec:	ce86                	sw	ra,92(sp)
204035ee:	cc96                	sw	t0,88(sp)
204035f0:	ca9a                	sw	t1,84(sp)
204035f2:	c89e                	sw	t2,80(sp)
204035f4:	c6a2                	sw	s0,76(sp)
204035f6:	c4aa                	sw	a0,72(sp)
204035f8:	c2ae                	sw	a1,68(sp)
204035fa:	c0b2                	sw	a2,64(sp)
204035fc:	de36                	sw	a3,60(sp)
204035fe:	dc3a                	sw	a4,56(sp)
20403600:	da3e                	sw	a5,52(sp)
20403602:	d842                	sw	a6,48(sp)
20403604:	d646                	sw	a7,44(sp)
20403606:	d472                	sw	t3,40(sp)
20403608:	d276                	sw	t4,36(sp)
2040360a:	d07a                	sw	t5,32(sp)
2040360c:	ce7e                	sw	t6,28(sp)
2040360e:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20403610:	b74ff0ef          	jal	ra,20402984 <__metal_myhart_id>
20403614:	872a                	mv	a4,a0
20403616:	800007b7          	lui	a5,0x80000
2040361a:	070a                	slli	a4,a4,0x2
2040361c:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403620:	97ba                	add	a5,a5,a4
20403622:	439c                	lw	a5,0(a5)
20403624:	faf42623          	sw	a5,-84(s0)
20403628:	fac42783          	lw	a5,-84(s0)
2040362c:	c78d                	beqz	a5,20403656 <metal_lc11_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
2040362e:	fac42503          	lw	a0,-84(s0)
20403632:	ad4ff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
20403636:	faa42423          	sw	a0,-88(s0)
2040363a:	fa842783          	lw	a5,-88(s0)
2040363e:	3207a783          	lw	a5,800(a5)
20403642:	faf42223          	sw	a5,-92(s0)
20403646:	fa842783          	lw	a5,-88(s0)
2040364a:	3187a783          	lw	a5,792(a5)
2040364e:	fa442583          	lw	a1,-92(s0)
20403652:	456d                	li	a0,27
20403654:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:273
}
20403656:	0001                	nop
20403658:	40f6                	lw	ra,92(sp)
2040365a:	42e6                	lw	t0,88(sp)
2040365c:	4356                	lw	t1,84(sp)
2040365e:	43c6                	lw	t2,80(sp)
20403660:	4436                	lw	s0,76(sp)
20403662:	4526                	lw	a0,72(sp)
20403664:	4596                	lw	a1,68(sp)
20403666:	4606                	lw	a2,64(sp)
20403668:	56f2                	lw	a3,60(sp)
2040366a:	5762                	lw	a4,56(sp)
2040366c:	57d2                	lw	a5,52(sp)
2040366e:	5842                	lw	a6,48(sp)
20403670:	58b2                	lw	a7,44(sp)
20403672:	5e22                	lw	t3,40(sp)
20403674:	5e92                	lw	t4,36(sp)
20403676:	5f02                	lw	t5,32(sp)
20403678:	4ff2                	lw	t6,28(sp)
2040367a:	6125                	addi	sp,sp,96
2040367c:	30200073          	mret

20403680 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20403680:	711d                	addi	sp,sp,-96
20403682:	ce86                	sw	ra,92(sp)
20403684:	cc96                	sw	t0,88(sp)
20403686:	ca9a                	sw	t1,84(sp)
20403688:	c89e                	sw	t2,80(sp)
2040368a:	c6a2                	sw	s0,76(sp)
2040368c:	c4aa                	sw	a0,72(sp)
2040368e:	c2ae                	sw	a1,68(sp)
20403690:	c0b2                	sw	a2,64(sp)
20403692:	de36                	sw	a3,60(sp)
20403694:	dc3a                	sw	a4,56(sp)
20403696:	da3e                	sw	a5,52(sp)
20403698:	d842                	sw	a6,48(sp)
2040369a:	d646                	sw	a7,44(sp)
2040369c:	d472                	sw	t3,40(sp)
2040369e:	d276                	sw	t4,36(sp)
204036a0:	d07a                	sw	t5,32(sp)
204036a2:	ce7e                	sw	t6,28(sp)
204036a4:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
204036a6:	adeff0ef          	jal	ra,20402984 <__metal_myhart_id>
204036aa:	872a                	mv	a4,a0
204036ac:	800007b7          	lui	a5,0x80000
204036b0:	070a                	slli	a4,a4,0x2
204036b2:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204036b6:	97ba                	add	a5,a5,a4
204036b8:	439c                	lw	a5,0(a5)
204036ba:	faf42623          	sw	a5,-84(s0)
204036be:	fac42783          	lw	a5,-84(s0)
204036c2:	c78d                	beqz	a5,204036ec <metal_lc12_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
204036c4:	fac42503          	lw	a0,-84(s0)
204036c8:	a3eff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
204036cc:	faa42423          	sw	a0,-88(s0)
204036d0:	fa842783          	lw	a5,-88(s0)
204036d4:	3387a783          	lw	a5,824(a5)
204036d8:	faf42223          	sw	a5,-92(s0)
204036dc:	fa842783          	lw	a5,-88(s0)
204036e0:	3307a783          	lw	a5,816(a5)
204036e4:	fa442583          	lw	a1,-92(s0)
204036e8:	4571                	li	a0,28
204036ea:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:279
}
204036ec:	0001                	nop
204036ee:	40f6                	lw	ra,92(sp)
204036f0:	42e6                	lw	t0,88(sp)
204036f2:	4356                	lw	t1,84(sp)
204036f4:	43c6                	lw	t2,80(sp)
204036f6:	4436                	lw	s0,76(sp)
204036f8:	4526                	lw	a0,72(sp)
204036fa:	4596                	lw	a1,68(sp)
204036fc:	4606                	lw	a2,64(sp)
204036fe:	56f2                	lw	a3,60(sp)
20403700:	5762                	lw	a4,56(sp)
20403702:	57d2                	lw	a5,52(sp)
20403704:	5842                	lw	a6,48(sp)
20403706:	58b2                	lw	a7,44(sp)
20403708:	5e22                	lw	t3,40(sp)
2040370a:	5e92                	lw	t4,36(sp)
2040370c:	5f02                	lw	t5,32(sp)
2040370e:	4ff2                	lw	t6,28(sp)
20403710:	6125                	addi	sp,sp,96
20403712:	30200073          	mret

20403716 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20403716:	711d                	addi	sp,sp,-96
20403718:	ce86                	sw	ra,92(sp)
2040371a:	cc96                	sw	t0,88(sp)
2040371c:	ca9a                	sw	t1,84(sp)
2040371e:	c89e                	sw	t2,80(sp)
20403720:	c6a2                	sw	s0,76(sp)
20403722:	c4aa                	sw	a0,72(sp)
20403724:	c2ae                	sw	a1,68(sp)
20403726:	c0b2                	sw	a2,64(sp)
20403728:	de36                	sw	a3,60(sp)
2040372a:	dc3a                	sw	a4,56(sp)
2040372c:	da3e                	sw	a5,52(sp)
2040372e:	d842                	sw	a6,48(sp)
20403730:	d646                	sw	a7,44(sp)
20403732:	d472                	sw	t3,40(sp)
20403734:	d276                	sw	t4,36(sp)
20403736:	d07a                	sw	t5,32(sp)
20403738:	ce7e                	sw	t6,28(sp)
2040373a:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
2040373c:	a48ff0ef          	jal	ra,20402984 <__metal_myhart_id>
20403740:	872a                	mv	a4,a0
20403742:	800007b7          	lui	a5,0x80000
20403746:	070a                	slli	a4,a4,0x2
20403748:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
2040374c:	97ba                	add	a5,a5,a4
2040374e:	439c                	lw	a5,0(a5)
20403750:	faf42623          	sw	a5,-84(s0)
20403754:	fac42783          	lw	a5,-84(s0)
20403758:	c78d                	beqz	a5,20403782 <metal_lc13_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
2040375a:	fac42503          	lw	a0,-84(s0)
2040375e:	9a8ff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
20403762:	faa42423          	sw	a0,-88(s0)
20403766:	fa842783          	lw	a5,-88(s0)
2040376a:	3507a783          	lw	a5,848(a5)
2040376e:	faf42223          	sw	a5,-92(s0)
20403772:	fa842783          	lw	a5,-88(s0)
20403776:	3487a783          	lw	a5,840(a5)
2040377a:	fa442583          	lw	a1,-92(s0)
2040377e:	4575                	li	a0,29
20403780:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:285
}
20403782:	0001                	nop
20403784:	40f6                	lw	ra,92(sp)
20403786:	42e6                	lw	t0,88(sp)
20403788:	4356                	lw	t1,84(sp)
2040378a:	43c6                	lw	t2,80(sp)
2040378c:	4436                	lw	s0,76(sp)
2040378e:	4526                	lw	a0,72(sp)
20403790:	4596                	lw	a1,68(sp)
20403792:	4606                	lw	a2,64(sp)
20403794:	56f2                	lw	a3,60(sp)
20403796:	5762                	lw	a4,56(sp)
20403798:	57d2                	lw	a5,52(sp)
2040379a:	5842                	lw	a6,48(sp)
2040379c:	58b2                	lw	a7,44(sp)
2040379e:	5e22                	lw	t3,40(sp)
204037a0:	5e92                	lw	t4,36(sp)
204037a2:	5f02                	lw	t5,32(sp)
204037a4:	4ff2                	lw	t6,28(sp)
204037a6:	6125                	addi	sp,sp,96
204037a8:	30200073          	mret

204037ac <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
204037ac:	711d                	addi	sp,sp,-96
204037ae:	ce86                	sw	ra,92(sp)
204037b0:	cc96                	sw	t0,88(sp)
204037b2:	ca9a                	sw	t1,84(sp)
204037b4:	c89e                	sw	t2,80(sp)
204037b6:	c6a2                	sw	s0,76(sp)
204037b8:	c4aa                	sw	a0,72(sp)
204037ba:	c2ae                	sw	a1,68(sp)
204037bc:	c0b2                	sw	a2,64(sp)
204037be:	de36                	sw	a3,60(sp)
204037c0:	dc3a                	sw	a4,56(sp)
204037c2:	da3e                	sw	a5,52(sp)
204037c4:	d842                	sw	a6,48(sp)
204037c6:	d646                	sw	a7,44(sp)
204037c8:	d472                	sw	t3,40(sp)
204037ca:	d276                	sw	t4,36(sp)
204037cc:	d07a                	sw	t5,32(sp)
204037ce:	ce7e                	sw	t6,28(sp)
204037d0:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
204037d2:	9b2ff0ef          	jal	ra,20402984 <__metal_myhart_id>
204037d6:	872a                	mv	a4,a0
204037d8:	800007b7          	lui	a5,0x80000
204037dc:	070a                	slli	a4,a4,0x2
204037de:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204037e2:	97ba                	add	a5,a5,a4
204037e4:	439c                	lw	a5,0(a5)
204037e6:	faf42623          	sw	a5,-84(s0)
204037ea:	fac42783          	lw	a5,-84(s0)
204037ee:	c78d                	beqz	a5,20403818 <metal_lc14_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
204037f0:	fac42503          	lw	a0,-84(s0)
204037f4:	912ff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
204037f8:	faa42423          	sw	a0,-88(s0)
204037fc:	fa842783          	lw	a5,-88(s0)
20403800:	3687a783          	lw	a5,872(a5)
20403804:	faf42223          	sw	a5,-92(s0)
20403808:	fa842783          	lw	a5,-88(s0)
2040380c:	3607a783          	lw	a5,864(a5)
20403810:	fa442583          	lw	a1,-92(s0)
20403814:	4579                	li	a0,30
20403816:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:291
}
20403818:	0001                	nop
2040381a:	40f6                	lw	ra,92(sp)
2040381c:	42e6                	lw	t0,88(sp)
2040381e:	4356                	lw	t1,84(sp)
20403820:	43c6                	lw	t2,80(sp)
20403822:	4436                	lw	s0,76(sp)
20403824:	4526                	lw	a0,72(sp)
20403826:	4596                	lw	a1,68(sp)
20403828:	4606                	lw	a2,64(sp)
2040382a:	56f2                	lw	a3,60(sp)
2040382c:	5762                	lw	a4,56(sp)
2040382e:	57d2                	lw	a5,52(sp)
20403830:	5842                	lw	a6,48(sp)
20403832:	58b2                	lw	a7,44(sp)
20403834:	5e22                	lw	t3,40(sp)
20403836:	5e92                	lw	t4,36(sp)
20403838:	5f02                	lw	t5,32(sp)
2040383a:	4ff2                	lw	t6,28(sp)
2040383c:	6125                	addi	sp,sp,96
2040383e:	30200073          	mret

20403842 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20403842:	711d                	addi	sp,sp,-96
20403844:	ce86                	sw	ra,92(sp)
20403846:	cc96                	sw	t0,88(sp)
20403848:	ca9a                	sw	t1,84(sp)
2040384a:	c89e                	sw	t2,80(sp)
2040384c:	c6a2                	sw	s0,76(sp)
2040384e:	c4aa                	sw	a0,72(sp)
20403850:	c2ae                	sw	a1,68(sp)
20403852:	c0b2                	sw	a2,64(sp)
20403854:	de36                	sw	a3,60(sp)
20403856:	dc3a                	sw	a4,56(sp)
20403858:	da3e                	sw	a5,52(sp)
2040385a:	d842                	sw	a6,48(sp)
2040385c:	d646                	sw	a7,44(sp)
2040385e:	d472                	sw	t3,40(sp)
20403860:	d276                	sw	t4,36(sp)
20403862:	d07a                	sw	t5,32(sp)
20403864:	ce7e                	sw	t6,28(sp)
20403866:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
20403868:	91cff0ef          	jal	ra,20402984 <__metal_myhart_id>
2040386c:	872a                	mv	a4,a0
2040386e:	800007b7          	lui	a5,0x80000
20403872:	070a                	slli	a4,a4,0x2
20403874:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403878:	97ba                	add	a5,a5,a4
2040387a:	439c                	lw	a5,0(a5)
2040387c:	faf42623          	sw	a5,-84(s0)
20403880:	fac42783          	lw	a5,-84(s0)
20403884:	c78d                	beqz	a5,204038ae <metal_lc15_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20403886:	fac42503          	lw	a0,-84(s0)
2040388a:	87cff0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
2040388e:	faa42423          	sw	a0,-88(s0)
20403892:	fa842783          	lw	a5,-88(s0)
20403896:	3807a783          	lw	a5,896(a5)
2040389a:	faf42223          	sw	a5,-92(s0)
2040389e:	fa842783          	lw	a5,-88(s0)
204038a2:	3787a783          	lw	a5,888(a5)
204038a6:	fa442583          	lw	a1,-92(s0)
204038aa:	457d                	li	a0,31
204038ac:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:297
}
204038ae:	0001                	nop
204038b0:	40f6                	lw	ra,92(sp)
204038b2:	42e6                	lw	t0,88(sp)
204038b4:	4356                	lw	t1,84(sp)
204038b6:	43c6                	lw	t2,80(sp)
204038b8:	4436                	lw	s0,76(sp)
204038ba:	4526                	lw	a0,72(sp)
204038bc:	4596                	lw	a1,68(sp)
204038be:	4606                	lw	a2,64(sp)
204038c0:	56f2                	lw	a3,60(sp)
204038c2:	5762                	lw	a4,56(sp)
204038c4:	57d2                	lw	a5,52(sp)
204038c6:	5842                	lw	a6,48(sp)
204038c8:	58b2                	lw	a7,44(sp)
204038ca:	5e22                	lw	t3,40(sp)
204038cc:	5e92                	lw	t4,36(sp)
204038ce:	5f02                	lw	t5,32(sp)
204038d0:	4ff2                	lw	t6,28(sp)
204038d2:	6125                	addi	sp,sp,96
204038d4:	30200073          	mret

204038d8 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
204038d8:	1101                	addi	sp,sp,-32
204038da:	ce22                	sw	s0,28(sp)
204038dc:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
204038de:	305027f3          	csrr	a5,mtvec
204038e2:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
204038e6:	fec42783          	lw	a5,-20(s0)
204038ea:	03f7f793          	andi	a5,a5,63
204038ee:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
204038f2:	fec42703          	lw	a4,-20(s0)
204038f6:	478d                	li	a5,3
204038f8:	02f70363          	beq	a4,a5,2040391e <__metal_controller_interrupt_vector_mode+0x46>
204038fc:	fec42703          	lw	a4,-20(s0)
20403900:	478d                	li	a5,3
20403902:	02e7e263          	bltu	a5,a4,20403926 <__metal_controller_interrupt_vector_mode+0x4e>
20403906:	fec42703          	lw	a4,-20(s0)
2040390a:	4785                	li	a5,1
2040390c:	00f70b63          	beq	a4,a5,20403922 <__metal_controller_interrupt_vector_mode+0x4a>
20403910:	fec42703          	lw	a4,-20(s0)
20403914:	4789                	li	a5,2
20403916:	00f71863          	bne	a4,a5,20403926 <__metal_controller_interrupt_vector_mode+0x4e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
2040391a:	478d                	li	a5,3
2040391c:	a031                	j	20403928 <__metal_controller_interrupt_vector_mode+0x50>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
2040391e:	4791                	li	a5,4
20403920:	a021                	j	20403928 <__metal_controller_interrupt_vector_mode+0x50>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20403922:	4785                	li	a5,1
20403924:	a011                	j	20403928 <__metal_controller_interrupt_vector_mode+0x50>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20403926:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:314
}
20403928:	853e                	mv	a0,a5
2040392a:	4472                	lw	s0,28(sp)
2040392c:	6105                	addi	sp,sp,32
2040392e:	8082                	ret

20403930 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20403930:	7179                	addi	sp,sp,-48
20403932:	d622                	sw	s0,44(sp)
20403934:	1800                	addi	s0,sp,48
20403936:	fca42e23          	sw	a0,-36(s0)
2040393a:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
2040393e:	305027f3          	csrr	a5,mtvec
20403942:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20403946:	fec42783          	lw	a5,-20(s0)
2040394a:	fc07f793          	andi	a5,a5,-64
2040394e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20403952:	fd842783          	lw	a5,-40(s0)
20403956:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
2040395a:	fdc42703          	lw	a4,-36(s0)
2040395e:	4791                	li	a5,4
20403960:	04f70563          	beq	a4,a5,204039aa <__metal_controller_interrupt_vector+0x7a>
20403964:	fdc42703          	lw	a4,-36(s0)
20403968:	4791                	li	a5,4
2040396a:	06e7e863          	bltu	a5,a4,204039da <__metal_controller_interrupt_vector+0xaa>
2040396e:	fdc42703          	lw	a4,-36(s0)
20403972:	478d                	li	a5,3
20403974:	06e7e363          	bltu	a5,a4,204039da <__metal_controller_interrupt_vector+0xaa>
20403978:	fdc42703          	lw	a4,-36(s0)
2040397c:	4789                	li	a5,2
2040397e:	00f77b63          	bgeu	a4,a5,20403994 <__metal_controller_interrupt_vector+0x64>
20403982:	fdc42783          	lw	a5,-36(s0)
20403986:	c7a1                	beqz	a5,204039ce <__metal_controller_interrupt_vector+0x9e>
20403988:	fdc42703          	lw	a4,-36(s0)
2040398c:	4785                	li	a5,1
2040398e:	02f70963          	beq	a4,a5,204039c0 <__metal_controller_interrupt_vector+0x90>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20403992:	a0a1                	j	204039da <__metal_controller_interrupt_vector+0xaa>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20403994:	fe842783          	lw	a5,-24(s0)
20403998:	30779073          	csrw	mtvt,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
2040399c:	fec42783          	lw	a5,-20(s0)
204039a0:	0027e793          	ori	a5,a5,2
204039a4:	30579073          	csrw	mtvec,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
204039a8:	a80d                	j	204039da <__metal_controller_interrupt_vector+0xaa>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
204039aa:	fe842783          	lw	a5,-24(s0)
204039ae:	30779073          	csrw	mtvt,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
204039b2:	fec42783          	lw	a5,-20(s0)
204039b6:	0037e793          	ori	a5,a5,3
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
204039ba:	30579073          	csrw	mtvec,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
204039be:	a831                	j	204039da <__metal_controller_interrupt_vector+0xaa>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
204039c0:	fe842783          	lw	a5,-24(s0)
204039c4:	0017e793          	ori	a5,a5,1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
204039c8:	30579073          	csrw	mtvec,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
204039cc:	a039                	j	204039da <__metal_controller_interrupt_vector+0xaa>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
204039ce:	fe842783          	lw	a5,-24(s0)
204039d2:	9bf1                	andi	a5,a5,-4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
204039d4:	30579073          	csrw	mtvec,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
204039d8:	0001                	nop
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:344
}
204039da:	0001                	nop
204039dc:	5432                	lw	s0,44(sp)
204039de:	6145                	addi	sp,sp,48
204039e0:	8082                	ret

204039e2 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
204039e2:	1101                	addi	sp,sp,-32
204039e4:	ce22                	sw	s0,28(sp)
204039e6:	1000                	addi	s0,sp,32
204039e8:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
204039ec:	fec42703          	lw	a4,-20(s0)
204039f0:	47fd                	li	a5,31
204039f2:	02e7c663          	blt	a5,a4,20403a1e <__metal_valid_interrupt_id+0x3c>
204039f6:	fec42703          	lw	a4,-20(s0)
204039fa:	478d                	li	a5,3
204039fc:	02f74963          	blt	a4,a5,20403a2e <__metal_valid_interrupt_id+0x4c>
20403a00:	fec42783          	lw	a5,-20(s0)
20403a04:	4705                	li	a4,1
20403a06:	00f71733          	sll	a4,a4,a5
20403a0a:	77c5                	lui	a5,0xffff1
20403a0c:	88878793          	addi	a5,a5,-1912 # ffff0888 <metal_segment_heap_target_end+0x7ffef418>
20403a10:	8ff9                	and	a5,a5,a4
20403a12:	00f037b3          	snez	a5,a5
20403a16:	0ff7f793          	zext.b	a5,a5
20403a1a:	eb81                	bnez	a5,20403a2a <__metal_valid_interrupt_id+0x48>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
20403a1c:	a809                	j	20403a2e <__metal_valid_interrupt_id+0x4c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20403a1e:	fec42703          	lw	a4,-20(s0)
20403a22:	08000793          	li	a5,128
20403a26:	00f71463          	bne	a4,a5,20403a2e <__metal_valid_interrupt_id+0x4c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20403a2a:	4785                	li	a5,1
20403a2c:	a019                	j	20403a32 <__metal_valid_interrupt_id+0x50>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20403a2e:	0001                	nop
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20403a30:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:374
}
20403a32:	853e                	mv	a0,a5
20403a34:	4472                	lw	s0,28(sp)
20403a36:	6105                	addi	sp,sp,32
20403a38:	8082                	ret

20403a3a <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20403a3a:	7179                	addi	sp,sp,-48
20403a3c:	d606                	sw	ra,44(sp)
20403a3e:	d422                	sw	s0,40(sp)
20403a40:	1800                	addi	s0,sp,48
20403a42:	fca42e23          	sw	a0,-36(s0)
20403a46:	fcb42c23          	sw	a1,-40(s0)
20403a4a:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20403a4e:	fe042623          	sw	zero,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20403a52:	fdc42783          	lw	a5,-36(s0)
20403a56:	e399                	bnez	a5,20403a5c <__metal_local_interrupt_enable+0x22>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20403a58:	57fd                	li	a5,-1
20403a5a:	a849                	j	20403aec <__metal_local_interrupt_enable+0xb2>
20403a5c:	fd842703          	lw	a4,-40(s0)
20403a60:	47fd                	li	a5,31
20403a62:	08e7e063          	bltu	a5,a4,20403ae2 <__metal_local_interrupt_enable+0xa8>
20403a66:	fd842783          	lw	a5,-40(s0)
20403a6a:	00279713          	slli	a4,a5,0x2
20403a6e:	204007b7          	lui	a5,0x20400
20403a72:	45478793          	addi	a5,a5,1108 # 20400454 <__metal_driver_vtable_riscv_clint0+0x64>
20403a76:	97ba                	add	a5,a5,a4
20403a78:	439c                	lw	a5,0(a5)
20403a7a:	8782                	jr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:386
    }

    switch (id) {
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20403a7c:	fd442783          	lw	a5,-44(s0)
20403a80:	c781                	beqz	a5,20403a88 <__metal_local_interrupt_enable+0x4e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20403a82:	f1dfe0ef          	jal	ra,2040299e <__metal_interrupt_global_enable>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20403a86:	a08d                	j	20403ae8 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20403a88:	f2ffe0ef          	jal	ra,204029b6 <__metal_interrupt_global_disable>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20403a8c:	a8b1                	j	20403ae8 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20403a8e:	fd442783          	lw	a5,-44(s0)
20403a92:	c781                	beqz	a5,20403a9a <__metal_local_interrupt_enable+0x60>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20403a94:	f3bfe0ef          	jal	ra,204029ce <__metal_interrupt_software_enable>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20403a98:	a881                	j	20403ae8 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20403a9a:	f4dfe0ef          	jal	ra,204029e6 <__metal_interrupt_software_disable>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20403a9e:	a0a9                	j	20403ae8 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20403aa0:	fd442783          	lw	a5,-44(s0)
20403aa4:	c781                	beqz	a5,20403aac <__metal_local_interrupt_enable+0x72>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20403aa6:	f59fe0ef          	jal	ra,204029fe <__metal_interrupt_timer_enable>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
20403aaa:	a83d                	j	20403ae8 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
20403aac:	f6dfe0ef          	jal	ra,20402a18 <__metal_interrupt_timer_disable>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20403ab0:	a825                	j	20403ae8 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20403ab2:	fd442783          	lw	a5,-44(s0)
20403ab6:	c781                	beqz	a5,20403abe <__metal_local_interrupt_enable+0x84>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20403ab8:	f7bfe0ef          	jal	ra,20402a32 <__metal_interrupt_external_enable>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20403abc:	a035                	j	20403ae8 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20403abe:	f91fe0ef          	jal	ra,20402a4e <__metal_interrupt_external_disable>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20403ac2:	a01d                	j	20403ae8 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20403ac4:	fd442783          	lw	a5,-44(s0)
20403ac8:	c799                	beqz	a5,20403ad6 <__metal_local_interrupt_enable+0x9c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
20403aca:	fd842783          	lw	a5,-40(s0)
20403ace:	853e                	mv	a0,a5
20403ad0:	f9bfe0ef          	jal	ra,20402a6a <__metal_interrupt_local_enable>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20403ad4:	a811                	j	20403ae8 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20403ad6:	fd842783          	lw	a5,-40(s0)
20403ada:	853e                	mv	a0,a5
20403adc:	fbbfe0ef          	jal	ra,20402a96 <__metal_interrupt_local_disable>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20403ae0:	a021                	j	20403ae8 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20403ae2:	57fd                	li	a5,-1
20403ae4:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20403ae8:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:439
}
20403aec:	853e                	mv	a0,a5
20403aee:	50b2                	lw	ra,44(sp)
20403af0:	5422                	lw	s0,40(sp)
20403af2:	6145                	addi	sp,sp,48
20403af4:	8082                	ret

20403af6 <__metal_exception_register>:
__metal_exception_register():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20403af6:	7179                	addi	sp,sp,-48
20403af8:	d622                	sw	s0,44(sp)
20403afa:	1800                	addi	s0,sp,48
20403afc:	fca42e23          	sw	a0,-36(s0)
20403b00:	fcb42c23          	sw	a1,-40(s0)
20403b04:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20403b08:	fdc42783          	lw	a5,-36(s0)
20403b0c:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20403b10:	fd842703          	lw	a4,-40(s0)
20403b14:	47ad                	li	a5,11
20403b16:	02e7c263          	blt	a5,a4,20403b3a <__metal_exception_register+0x44>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20403b1a:	fd442783          	lw	a5,-44(s0)
20403b1e:	cf91                	beqz	a5,20403b3a <__metal_exception_register+0x44>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20403b20:	fec42703          	lw	a4,-20(s0)
20403b24:	fd842783          	lw	a5,-40(s0)
20403b28:	0e878793          	addi	a5,a5,232
20403b2c:	078a                	slli	a5,a5,0x2
20403b2e:	97ba                	add	a5,a5,a4
20403b30:	fd442703          	lw	a4,-44(s0)
20403b34:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20403b36:	4781                	li	a5,0
20403b38:	a011                	j	20403b3c <__metal_exception_register+0x46>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20403b3a:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:450
}
20403b3c:	853e                	mv	a0,a5
20403b3e:	5432                	lw	s0,44(sp)
20403b40:	6145                	addi	sp,sp,48
20403b42:	8082                	ret

20403b44 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20403b44:	7179                	addi	sp,sp,-48
20403b46:	d606                	sw	ra,44(sp)
20403b48:	d422                	sw	s0,40(sp)
20403b4a:	1800                	addi	s0,sp,48
20403b4c:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20403b50:	fdc42783          	lw	a5,-36(s0)
20403b54:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20403b58:	fe442783          	lw	a5,-28(s0)
20403b5c:	43dc                	lw	a5,4(a5)
20403b5e:	efdd                	bnez	a5,20403c1c <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20403b60:	fe042623          	sw	zero,-20(s0)
20403b64:	a0b9                	j	20403bb2 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20403b66:	fe442683          	lw	a3,-28(s0)
20403b6a:	fec42703          	lw	a4,-20(s0)
20403b6e:	87ba                	mv	a5,a4
20403b70:	0786                	slli	a5,a5,0x1
20403b72:	97ba                	add	a5,a5,a4
20403b74:	078e                	slli	a5,a5,0x3
20403b76:	97b6                	add	a5,a5,a3
20403b78:	0807a823          	sw	zero,144(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20403b7c:	fe442683          	lw	a3,-28(s0)
20403b80:	fec42703          	lw	a4,-20(s0)
20403b84:	87ba                	mv	a5,a4
20403b86:	0786                	slli	a5,a5,0x1
20403b88:	97ba                	add	a5,a5,a4
20403b8a:	078e                	slli	a5,a5,0x3
20403b8c:	97b6                	add	a5,a5,a3
20403b8e:	0807aa23          	sw	zero,148(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20403b92:	fe442683          	lw	a3,-28(s0)
20403b96:	fec42703          	lw	a4,-20(s0)
20403b9a:	87ba                	mv	a5,a4
20403b9c:	0786                	slli	a5,a5,0x1
20403b9e:	97ba                	add	a5,a5,a4
20403ba0:	078e                	slli	a5,a5,0x3
20403ba2:	97b6                	add	a5,a5,a3
20403ba4:	0807ac23          	sw	zero,152(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20403ba8:	fec42783          	lw	a5,-20(s0)
20403bac:	0785                	addi	a5,a5,1
20403bae:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20403bb2:	fec42703          	lw	a4,-20(s0)
20403bb6:	47fd                	li	a5,31
20403bb8:	fae7d7e3          	bge	a5,a4,20403b66 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
20403bbc:	fe042423          	sw	zero,-24(s0)
20403bc0:	a01d                	j	20403be6 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20403bc2:	fe442703          	lw	a4,-28(s0)
20403bc6:	fe842783          	lw	a5,-24(s0)
20403bca:	0e878793          	addi	a5,a5,232
20403bce:	078a                	slli	a5,a5,0x2
20403bd0:	97ba                	add	a5,a5,a4
20403bd2:	20403737          	lui	a4,0x20403
20403bd6:	ac270713          	addi	a4,a4,-1342 # 20402ac2 <__metal_default_exception_handler>
20403bda:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
20403bdc:	fe842783          	lw	a5,-24(s0)
20403be0:	0785                	addi	a5,a5,1
20403be2:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20403be6:	fe842703          	lw	a4,-24(s0)
20403bea:	47ad                	li	a5,11
20403bec:	fce7dbe3          	bge	a5,a4,20403bc2 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20403bf0:	305027f3          	csrr	a5,mtvec
20403bf4:	fef42023          	sw	a5,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20403bf8:	204007b7          	lui	a5,0x20400
20403bfc:	13478793          	addi	a5,a5,308 # 20400134 <early_trap_vector>
20403c00:	fe042703          	lw	a4,-32(s0)
20403c04:	00f71863          	bne	a4,a5,20403c14 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20403c08:	204037b7          	lui	a5,0x20403
20403c0c:	d8078593          	addi	a1,a5,-640 # 20402d80 <__metal_exception_handler>
20403c10:	4501                	li	a0,0
20403c12:	3b39                	jal	20403930 <__metal_controller_interrupt_vector>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20403c14:	fe442783          	lw	a5,-28(s0)
20403c18:	4705                	li	a4,1
20403c1a:	c3d8                	sw	a4,4(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20403c1c:	0001                	nop
20403c1e:	50b2                	lw	ra,44(sp)
20403c20:	5422                	lw	s0,40(sp)
20403c22:	6145                	addi	sp,sp,48
20403c24:	8082                	ret

20403c26 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20403c26:	7179                	addi	sp,sp,-48
20403c28:	d606                	sw	ra,44(sp)
20403c2a:	d422                	sw	s0,40(sp)
20403c2c:	1800                	addi	s0,sp,48
20403c2e:	fca42e23          	sw	a0,-36(s0)
20403c32:	fcb42c23          	sw	a1,-40(s0)
20403c36:	fcc42a23          	sw	a2,-44(s0)
20403c3a:	fcd42823          	sw	a3,-48(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20403c3e:	fe042623          	sw	zero,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20403c42:	fdc42783          	lw	a5,-36(s0)
20403c46:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20403c4a:	fd842503          	lw	a0,-40(s0)
20403c4e:	3b51                	jal	204039e2 <__metal_valid_interrupt_id>
20403c50:	87aa                	mv	a5,a0
20403c52:	e399                	bnez	a5,20403c58 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20403c54:	57d5                	li	a5,-11
20403c56:	a25d                	j	20403dfc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20403c58:	fd842703          	lw	a4,-40(s0)
20403c5c:	08000793          	li	a5,128
20403c60:	00f71763          	bne	a4,a5,20403c6e <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20403c64:	3995                	jal	204038d8 <__metal_controller_interrupt_vector_mode>
20403c66:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20403c68:	c399                	beqz	a5,20403c6e <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20403c6a:	57cd                	li	a5,-13
20403c6c:	aa41                	j	20403dfc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20403c6e:	fd442783          	lw	a5,-44(s0)
20403c72:	cfb9                	beqz	a5,20403cd0 <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
20403c74:	fd842703          	lw	a4,-40(s0)
20403c78:	08000793          	li	a5,128
20403c7c:	00f71f63          	bne	a4,a5,20403c9a <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20403c80:	fe842783          	lw	a5,-24(s0)
20403c84:	fd442703          	lw	a4,-44(s0)
20403c88:	38e7a823          	sw	a4,912(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20403c8c:	fe842783          	lw	a5,-24(s0)
20403c90:	fd042703          	lw	a4,-48(s0)
20403c94:	38e7ac23          	sw	a4,920(a5)
20403c98:	a285                	j	20403df8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20403c9a:	fe842683          	lw	a3,-24(s0)
20403c9e:	fd842703          	lw	a4,-40(s0)
20403ca2:	87ba                	mv	a5,a4
20403ca4:	0786                	slli	a5,a5,0x1
20403ca6:	97ba                	add	a5,a5,a4
20403ca8:	078e                	slli	a5,a5,0x3
20403caa:	97b6                	add	a5,a5,a3
20403cac:	fd442703          	lw	a4,-44(s0)
20403cb0:	08e7a823          	sw	a4,144(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20403cb4:	fe842683          	lw	a3,-24(s0)
20403cb8:	fd842703          	lw	a4,-40(s0)
20403cbc:	87ba                	mv	a5,a4
20403cbe:	0786                	slli	a5,a5,0x1
20403cc0:	97ba                	add	a5,a5,a4
20403cc2:	078e                	slli	a5,a5,0x3
20403cc4:	97b6                	add	a5,a5,a3
20403cc6:	fd042703          	lw	a4,-48(s0)
20403cca:	08e7ac23          	sw	a4,152(a5)
20403cce:	a22d                	j	20403df8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20403cd0:	fd842703          	lw	a4,-40(s0)
20403cd4:	08000793          	li	a5,128
20403cd8:	0cf70163          	beq	a4,a5,20403d9a <__metal_driver_riscv_cpu_controller_interrupt_register+0x174>
20403cdc:	fd842703          	lw	a4,-40(s0)
20403ce0:	08000793          	li	a5,128
20403ce4:	10e7c763          	blt	a5,a4,20403df2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20403ce8:	fd842703          	lw	a4,-40(s0)
20403cec:	47fd                	li	a5,31
20403cee:	10e7c263          	blt	a5,a4,20403df2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20403cf2:	fd842703          	lw	a4,-40(s0)
20403cf6:	47c1                	li	a5,16
20403cf8:	0cf75063          	bge	a4,a5,20403db8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x192>
20403cfc:	fd842703          	lw	a4,-40(s0)
20403d00:	47ad                	li	a5,11
20403d02:	0af70b63          	beq	a4,a5,20403db8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x192>
20403d06:	fd842703          	lw	a4,-40(s0)
20403d0a:	47ad                	li	a5,11
20403d0c:	0ee7c363          	blt	a5,a4,20403df2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20403d10:	fd842703          	lw	a4,-40(s0)
20403d14:	478d                	li	a5,3
20403d16:	00f70863          	beq	a4,a5,20403d26 <__metal_driver_riscv_cpu_controller_interrupt_register+0x100>
20403d1a:	fd842703          	lw	a4,-40(s0)
20403d1e:	479d                	li	a5,7
20403d20:	04f70063          	beq	a4,a5,20403d60 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
20403d24:	a0f9                	j	20403df2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20403d26:	fe842683          	lw	a3,-24(s0)
20403d2a:	fd842703          	lw	a4,-40(s0)
20403d2e:	87ba                	mv	a5,a4
20403d30:	0786                	slli	a5,a5,0x1
20403d32:	97ba                	add	a5,a5,a4
20403d34:	078e                	slli	a5,a5,0x3
20403d36:	97b6                	add	a5,a5,a3
20403d38:	20403737          	lui	a4,0x20403
20403d3c:	bb270713          	addi	a4,a4,-1102 # 20402bb2 <__metal_default_sw_handler>
20403d40:	08e7a823          	sw	a4,144(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20403d44:	fe842683          	lw	a3,-24(s0)
20403d48:	fd842703          	lw	a4,-40(s0)
20403d4c:	87ba                	mv	a5,a4
20403d4e:	0786                	slli	a5,a5,0x1
20403d50:	97ba                	add	a5,a5,a4
20403d52:	078e                	slli	a5,a5,0x3
20403d54:	97b6                	add	a5,a5,a3
20403d56:	fd042703          	lw	a4,-48(s0)
20403d5a:	08e7aa23          	sw	a4,148(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20403d5e:	a869                	j	20403df8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20403d60:	fe842683          	lw	a3,-24(s0)
20403d64:	fd842703          	lw	a4,-40(s0)
20403d68:	87ba                	mv	a5,a4
20403d6a:	0786                	slli	a5,a5,0x1
20403d6c:	97ba                	add	a5,a5,a4
20403d6e:	078e                	slli	a5,a5,0x3
20403d70:	97b6                	add	a5,a5,a3
20403d72:	20403737          	lui	a4,0x20403
20403d76:	cc270713          	addi	a4,a4,-830 # 20402cc2 <__metal_default_timer_handler>
20403d7a:	08e7a823          	sw	a4,144(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20403d7e:	fe842683          	lw	a3,-24(s0)
20403d82:	fd842703          	lw	a4,-40(s0)
20403d86:	87ba                	mv	a5,a4
20403d88:	0786                	slli	a5,a5,0x1
20403d8a:	97ba                	add	a5,a5,a4
20403d8c:	078e                	slli	a5,a5,0x3
20403d8e:	97b6                	add	a5,a5,a3
20403d90:	fd042703          	lw	a4,-48(s0)
20403d94:	08e7aa23          	sw	a4,148(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20403d98:	a085                	j	20403df8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20403d9a:	fe842783          	lw	a5,-24(s0)
20403d9e:	20403737          	lui	a4,0x20403
20403da2:	cac70713          	addi	a4,a4,-852 # 20402cac <__metal_default_beu_handler>
20403da6:	38e7a823          	sw	a4,912(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20403daa:	fe842783          	lw	a5,-24(s0)
20403dae:	fd042703          	lw	a4,-48(s0)
20403db2:	38e7ac23          	sw	a4,920(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20403db6:	a089                	j	20403df8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20403db8:	fe842683          	lw	a3,-24(s0)
20403dbc:	fd842703          	lw	a4,-40(s0)
20403dc0:	87ba                	mv	a5,a4
20403dc2:	0786                	slli	a5,a5,0x1
20403dc4:	97ba                	add	a5,a5,a4
20403dc6:	078e                	slli	a5,a5,0x3
20403dc8:	97b6                	add	a5,a5,a3
20403dca:	20403737          	lui	a4,0x20403
20403dce:	ada70713          	addi	a4,a4,-1318 # 20402ada <__metal_default_interrupt_handler>
20403dd2:	08e7a823          	sw	a4,144(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20403dd6:	fe842683          	lw	a3,-24(s0)
20403dda:	fd842703          	lw	a4,-40(s0)
20403dde:	87ba                	mv	a5,a4
20403de0:	0786                	slli	a5,a5,0x1
20403de2:	97ba                	add	a5,a5,a4
20403de4:	078e                	slli	a5,a5,0x3
20403de6:	97b6                	add	a5,a5,a3
20403de8:	fd042703          	lw	a4,-48(s0)
20403dec:	08e7aa23          	sw	a4,148(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20403df0:	a021                	j	20403df8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20403df2:	57d1                	li	a5,-12
20403df4:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20403df8:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:549
}
20403dfc:	853e                	mv	a0,a5
20403dfe:	50b2                	lw	ra,44(sp)
20403e00:	5422                	lw	s0,40(sp)
20403e02:	6145                	addi	sp,sp,48
20403e04:	8082                	ret

20403e06 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20403e06:	1101                	addi	sp,sp,-32
20403e08:	ce06                	sw	ra,28(sp)
20403e0a:	cc22                	sw	s0,24(sp)
20403e0c:	1000                	addi	s0,sp,32
20403e0e:	fea42623          	sw	a0,-20(s0)
20403e12:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20403e16:	fe842783          	lw	a5,-24(s0)
20403e1a:	4605                	li	a2,1
20403e1c:	85be                	mv	a1,a5
20403e1e:	fec42503          	lw	a0,-20(s0)
20403e22:	3921                	jal	20403a3a <__metal_local_interrupt_enable>
20403e24:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:554
}
20403e26:	853e                	mv	a0,a5
20403e28:	40f2                	lw	ra,28(sp)
20403e2a:	4462                	lw	s0,24(sp)
20403e2c:	6105                	addi	sp,sp,32
20403e2e:	8082                	ret

20403e30 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20403e30:	1101                	addi	sp,sp,-32
20403e32:	ce06                	sw	ra,28(sp)
20403e34:	cc22                	sw	s0,24(sp)
20403e36:	1000                	addi	s0,sp,32
20403e38:	fea42623          	sw	a0,-20(s0)
20403e3c:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20403e40:	fe842783          	lw	a5,-24(s0)
20403e44:	4601                	li	a2,0
20403e46:	85be                	mv	a1,a5
20403e48:	fec42503          	lw	a0,-20(s0)
20403e4c:	36fd                	jal	20403a3a <__metal_local_interrupt_enable>
20403e4e:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:559
}
20403e50:	853e                	mv	a0,a5
20403e52:	40f2                	lw	ra,28(sp)
20403e54:	4462                	lw	s0,24(sp)
20403e56:	6105                	addi	sp,sp,32
20403e58:	8082                	ret

20403e5a <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20403e5a:	1101                	addi	sp,sp,-32
20403e5c:	ce06                	sw	ra,28(sp)
20403e5e:	cc22                	sw	s0,24(sp)
20403e60:	1000                	addi	s0,sp,32
20403e62:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20403e66:	a73ff0ef          	jal	ra,204038d8 <__metal_controller_interrupt_vector_mode>
20403e6a:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:593
}
20403e6c:	853e                	mv	a0,a5
20403e6e:	40f2                	lw	ra,28(sp)
20403e70:	4462                	lw	s0,24(sp)
20403e72:	6105                	addi	sp,sp,32
20403e74:	8082                	ret

20403e76 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20403e76:	1101                	addi	sp,sp,-32
20403e78:	ce06                	sw	ra,28(sp)
20403e7a:	cc22                	sw	s0,24(sp)
20403e7c:	1000                	addi	s0,sp,32
20403e7e:	fea42623          	sw	a0,-20(s0)
20403e82:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20403e86:	fe842783          	lw	a5,-24(s0)
20403e8a:	eb99                	bnez	a5,20403ea0 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20403e8c:	204037b7          	lui	a5,0x20403
20403e90:	d8078593          	addi	a1,a5,-640 # 20402d80 <__metal_exception_handler>
20403e94:	fe842503          	lw	a0,-24(s0)
20403e98:	a99ff0ef          	jal	ra,20403930 <__metal_controller_interrupt_vector>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20403e9c:	4781                	li	a5,0
20403e9e:	a00d                	j	20403ec0 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20403ea0:	fe842703          	lw	a4,-24(s0)
20403ea4:	4785                	li	a5,1
20403ea6:	00f71c63          	bne	a4,a5,20403ebe <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20403eaa:	204067b7          	lui	a5,0x20406
20403eae:	70078593          	addi	a1,a5,1792 # 20406700 <__metal_vector_table>
20403eb2:	fe842503          	lw	a0,-24(s0)
20403eb6:	a7bff0ef          	jal	ra,20403930 <__metal_controller_interrupt_vector>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20403eba:	4781                	li	a5,0
20403ebc:	a011                	j	20403ec0 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20403ebe:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:609
}
20403ec0:	853e                	mv	a0,a5
20403ec2:	40f2                	lw	ra,28(sp)
20403ec4:	4462                	lw	s0,24(sp)
20403ec6:	6105                	addi	sp,sp,32
20403ec8:	8082                	ret

20403eca <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20403eca:	1101                	addi	sp,sp,-32
20403ecc:	ce22                	sw	s0,28(sp)
20403ece:	1000                	addi	s0,sp,32
20403ed0:	fea42623          	sw	a0,-20(s0)
20403ed4:	feb42423          	sw	a1,-24(s0)
20403ed8:	fec42223          	sw	a2,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20403edc:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:616
}
20403ede:	853e                	mv	a0,a5
20403ee0:	4472                	lw	s0,28(sp)
20403ee2:	6105                	addi	sp,sp,32
20403ee4:	8082                	ret

20403ee6 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20403ee6:	7139                	addi	sp,sp,-64
20403ee8:	de22                	sw	s0,60(sp)
20403eea:	0080                	addi	s0,sp,64
20403eec:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20403ef0:	4501                	li	a0,0
20403ef2:	4581                	li	a1,0
20403ef4:	fea42423          	sw	a0,-24(s0)
20403ef8:	feb42623          	sw	a1,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20403efc:	b80025f3          	csrr	a1,mcycleh
20403f00:	feb42223          	sw	a1,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20403f04:	b00025f3          	csrr	a1,mcycle
20403f08:	feb42023          	sw	a1,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20403f0c:	b80025f3          	csrr	a1,mcycleh
20403f10:	fcb42e23          	sw	a1,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20403f14:	fe442503          	lw	a0,-28(s0)
20403f18:	fdc42583          	lw	a1,-36(s0)
20403f1c:	feb510e3          	bne	a0,a1,20403efc <__metal_driver_cpu_mcycle_get+0x16>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20403f20:	fe442583          	lw	a1,-28(s0)
20403f24:	882e                	mv	a6,a1
20403f26:	4881                	li	a7,0
20403f28:	00081793          	slli	a5,a6,0x0
20403f2c:	4701                	li	a4,0
20403f2e:	fe042583          	lw	a1,-32(s0)
20403f32:	862e                	mv	a2,a1
20403f34:	4681                	li	a3,0
20403f36:	00c765b3          	or	a1,a4,a2
20403f3a:	feb42423          	sw	a1,-24(s0)
20403f3e:	8fd5                	or	a5,a5,a3
20403f40:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20403f44:	fe842703          	lw	a4,-24(s0)
20403f48:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:640
}
20403f4c:	853a                	mv	a0,a4
20403f4e:	85be                	mv	a1,a5
20403f50:	5472                	lw	s0,60(sp)
20403f52:	6121                	addi	sp,sp,64
20403f54:	8082                	ret

20403f56 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20403f56:	7179                	addi	sp,sp,-48
20403f58:	d606                	sw	ra,44(sp)
20403f5a:	d422                	sw	s0,40(sp)
20403f5c:	d24a                	sw	s2,36(sp)
20403f5e:	d04e                	sw	s3,32(sp)
20403f60:	1800                	addi	s0,sp,48
20403f62:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20403f66:	fdc42783          	lw	a5,-36(s0)
20403f6a:	e781                	bnez	a5,20403f72 <__metal_driver_cpu_timebase_get+0x1c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20403f6c:	4901                	li	s2,0
20403f6e:	4981                	li	s3,0
20403f70:	a821                	j	20403f88 <__metal_driver_cpu_timebase_get+0x32>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20403f72:	fdc42503          	lw	a0,-36(s0)
20403f76:	967fe0ef          	jal	ra,204028dc <__metal_driver_cpu_timebase>
20403f7a:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20403f7e:	fec42783          	lw	a5,-20(s0)
20403f82:	893e                	mv	s2,a5
20403f84:	87fd                	srai	a5,a5,0x1f
20403f86:	89be                	mv	s3,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:650
}
20403f88:	874a                	mv	a4,s2
20403f8a:	87ce                	mv	a5,s3
20403f8c:	853a                	mv	a0,a4
20403f8e:	85be                	mv	a1,a5
20403f90:	50b2                	lw	ra,44(sp)
20403f92:	5422                	lw	s0,40(sp)
20403f94:	5912                	lw	s2,36(sp)
20403f96:	5982                	lw	s3,32(sp)
20403f98:	6145                	addi	sp,sp,48
20403f9a:	8082                	ret

20403f9c <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20403f9c:	7179                	addi	sp,sp,-48
20403f9e:	d606                	sw	ra,44(sp)
20403fa0:	d422                	sw	s0,40(sp)
20403fa2:	1800                	addi	s0,sp,48
20403fa4:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20403fa8:	4781                	li	a5,0
20403faa:	4801                	li	a6,0
20403fac:	fef42023          	sw	a5,-32(s0)
20403fb0:	ff042223          	sw	a6,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20403fb4:	fdc42503          	lw	a0,-36(s0)
20403fb8:	94ffe0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
20403fbc:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20403fc0:	fec42783          	lw	a5,-20(s0)
20403fc4:	c78d                	beqz	a5,20403fee <__metal_driver_cpu_mtime_get+0x52>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20403fc6:	fec42783          	lw	a5,-20(s0)
20403fca:	13c7a783          	lw	a5,316(a5)
20403fce:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20403fd2:	fe842783          	lw	a5,-24(s0)
20403fd6:	cf81                	beqz	a5,20403fee <__metal_driver_cpu_mtime_get+0x52>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20403fd8:	fe842783          	lw	a5,-24(s0)
20403fdc:	439c                	lw	a5,0(a5)
20403fde:	47f8                	lw	a4,76(a5)
20403fe0:	fe040793          	addi	a5,s0,-32
20403fe4:	863e                	mv	a2,a5
20403fe6:	4585                	li	a1,1
20403fe8:	fe842503          	lw	a0,-24(s0)
20403fec:	9702                	jalr	a4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20403fee:	fe042703          	lw	a4,-32(s0)
20403ff2:	fe442783          	lw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:667
}
20403ff6:	853a                	mv	a0,a4
20403ff8:	85be                	mv	a1,a5
20403ffa:	50b2                	lw	ra,44(sp)
20403ffc:	5422                	lw	s0,40(sp)
20403ffe:	6145                	addi	sp,sp,48
20404000:	8082                	ret

20404002 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20404002:	7179                	addi	sp,sp,-48
20404004:	d606                	sw	ra,44(sp)
20404006:	d422                	sw	s0,40(sp)
20404008:	d226                	sw	s1,36(sp)
2040400a:	1800                	addi	s0,sp,48
2040400c:	fca42e23          	sw	a0,-36(s0)
20404010:	fcb42823          	sw	a1,-48(s0)
20404014:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20404018:	57fd                	li	a5,-1
2040401a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2040401e:	fdc42503          	lw	a0,-36(s0)
20404022:	8e5fe0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
20404026:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
2040402a:	fe842783          	lw	a5,-24(s0)
2040402e:	cf8d                	beqz	a5,20404068 <__metal_driver_cpu_mtimecmp_set+0x66>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20404030:	fe842783          	lw	a5,-24(s0)
20404034:	13c7a783          	lw	a5,316(a5)
20404038:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
2040403c:	fe442783          	lw	a5,-28(s0)
20404040:	c785                	beqz	a5,20404068 <__metal_driver_cpu_mtimecmp_set+0x66>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
20404042:	fe442783          	lw	a5,-28(s0)
20404046:	439c                	lw	a5,0(a5)
20404048:	4ba4                	lw	s1,80(a5)
2040404a:	fdc42503          	lw	a0,-36(s0)
2040404e:	86bfe0ef          	jal	ra,204028b8 <__metal_driver_cpu_hartid>
20404052:	87aa                	mv	a5,a0
20404054:	fd042603          	lw	a2,-48(s0)
20404058:	fd442683          	lw	a3,-44(s0)
2040405c:	85be                	mv	a1,a5
2040405e:	fe442503          	lw	a0,-28(s0)
20404062:	9482                	jalr	s1
20404064:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20404068:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:685
}
2040406c:	853e                	mv	a0,a5
2040406e:	50b2                	lw	ra,44(sp)
20404070:	5422                	lw	s0,40(sp)
20404072:	5492                	lw	s1,36(sp)
20404074:	6145                	addi	sp,sp,48
20404076:	8082                	ret

20404078 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20404078:	1101                	addi	sp,sp,-32
2040407a:	ce22                	sw	s0,28(sp)
2040407c:	1000                	addi	s0,sp,32
2040407e:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20404082:	800007b7          	lui	a5,0x80000
20404086:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
2040408a:	853e                	mv	a0,a5
2040408c:	4472                	lw	s0,28(sp)
2040408e:	6105                	addi	sp,sp,32
20404090:	8082                	ret

20404092 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20404092:	1101                	addi	sp,sp,-32
20404094:	ce22                	sw	s0,28(sp)
20404096:	1000                	addi	s0,sp,32
20404098:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
2040409c:	479d                	li	a5,7
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:703
}
2040409e:	853e                	mv	a0,a5
204040a0:	4472                	lw	s0,28(sp)
204040a2:	6105                	addi	sp,sp,32
204040a4:	8082                	ret

204040a6 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
204040a6:	1101                	addi	sp,sp,-32
204040a8:	ce22                	sw	s0,28(sp)
204040aa:	1000                	addi	s0,sp,32
204040ac:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
204040b0:	800007b7          	lui	a5,0x80000
204040b4:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
204040b8:	853e                	mv	a0,a5
204040ba:	4472                	lw	s0,28(sp)
204040bc:	6105                	addi	sp,sp,32
204040be:	8082                	ret

204040c0 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
204040c0:	1101                	addi	sp,sp,-32
204040c2:	ce22                	sw	s0,28(sp)
204040c4:	1000                	addi	s0,sp,32
204040c6:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
204040ca:	478d                	li	a5,3
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:721
}
204040cc:	853e                	mv	a0,a5
204040ce:	4472                	lw	s0,28(sp)
204040d0:	6105                	addi	sp,sp,32
204040d2:	8082                	ret

204040d4 <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
204040d4:	7179                	addi	sp,sp,-48
204040d6:	d606                	sw	ra,44(sp)
204040d8:	d422                	sw	s0,40(sp)
204040da:	1800                	addi	s0,sp,48
204040dc:	fca42e23          	sw	a0,-36(s0)
204040e0:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
204040e4:	57fd                	li	a5,-1
204040e6:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204040ea:	fdc42503          	lw	a0,-36(s0)
204040ee:	819fe0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
204040f2:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
204040f6:	fe842783          	lw	a5,-24(s0)
204040fa:	c79d                	beqz	a5,20404128 <__metal_driver_cpu_set_sw_ipi+0x54>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
204040fc:	fe842783          	lw	a5,-24(s0)
20404100:	0dc7a783          	lw	a5,220(a5)
20404104:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20404108:	fe442783          	lw	a5,-28(s0)
2040410c:	cf91                	beqz	a5,20404128 <__metal_driver_cpu_set_sw_ipi+0x54>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
2040410e:	fe442783          	lw	a5,-28(s0)
20404112:	439c                	lw	a5,0(a5)
20404114:	47f8                	lw	a4,76(a5)
20404116:	fd840793          	addi	a5,s0,-40
2040411a:	863e                	mv	a2,a5
2040411c:	458d                	li	a1,3
2040411e:	fe442503          	lw	a0,-28(s0)
20404122:	9702                	jalr	a4
20404124:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20404128:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:738
}
2040412c:	853e                	mv	a0,a5
2040412e:	50b2                	lw	ra,44(sp)
20404130:	5422                	lw	s0,40(sp)
20404132:	6145                	addi	sp,sp,48
20404134:	8082                	ret

20404136 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
20404136:	7179                	addi	sp,sp,-48
20404138:	d606                	sw	ra,44(sp)
2040413a:	d422                	sw	s0,40(sp)
2040413c:	1800                	addi	s0,sp,48
2040413e:	fca42e23          	sw	a0,-36(s0)
20404142:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
20404146:	57fd                	li	a5,-1
20404148:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2040414c:	fdc42503          	lw	a0,-36(s0)
20404150:	fb6fe0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
20404154:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
20404158:	fe842783          	lw	a5,-24(s0)
2040415c:	c79d                	beqz	a5,2040418a <__metal_driver_cpu_clear_sw_ipi+0x54>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
2040415e:	fe842783          	lw	a5,-24(s0)
20404162:	0dc7a783          	lw	a5,220(a5)
20404166:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
2040416a:	fe442783          	lw	a5,-28(s0)
2040416e:	cf91                	beqz	a5,2040418a <__metal_driver_cpu_clear_sw_ipi+0x54>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
20404170:	fe442783          	lw	a5,-28(s0)
20404174:	439c                	lw	a5,0(a5)
20404176:	47f8                	lw	a4,76(a5)
20404178:	fd840793          	addi	a5,s0,-40
2040417c:	863e                	mv	a2,a5
2040417e:	4589                	li	a1,2
20404180:	fe442503          	lw	a0,-28(s0)
20404184:	9702                	jalr	a4
20404186:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
2040418a:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:755
}
2040418e:	853e                	mv	a0,a5
20404190:	50b2                	lw	ra,44(sp)
20404192:	5422                	lw	s0,40(sp)
20404194:	6145                	addi	sp,sp,48
20404196:	8082                	ret

20404198 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20404198:	7179                	addi	sp,sp,-48
2040419a:	d606                	sw	ra,44(sp)
2040419c:	d422                	sw	s0,40(sp)
2040419e:	1800                	addi	s0,sp,48
204041a0:	fca42e23          	sw	a0,-36(s0)
204041a4:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
204041a8:	fe042623          	sw	zero,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204041ac:	fdc42503          	lw	a0,-36(s0)
204041b0:	f56fe0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
204041b4:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
204041b8:	fe842783          	lw	a5,-24(s0)
204041bc:	c79d                	beqz	a5,204041ea <__metal_driver_cpu_get_msip+0x52>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
204041be:	fe842783          	lw	a5,-24(s0)
204041c2:	0dc7a783          	lw	a5,220(a5)
204041c6:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
204041ca:	fe442783          	lw	a5,-28(s0)
204041ce:	cf91                	beqz	a5,204041ea <__metal_driver_cpu_get_msip+0x52>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
204041d0:	fe442783          	lw	a5,-28(s0)
204041d4:	439c                	lw	a5,0(a5)
204041d6:	47f8                	lw	a4,76(a5)
204041d8:	fd840793          	addi	a5,s0,-40
204041dc:	863e                	mv	a2,a5
204041de:	4591                	li	a1,4
204041e0:	fe442503          	lw	a0,-28(s0)
204041e4:	9702                	jalr	a4
204041e6:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
204041ea:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:772
}
204041ee:	853e                	mv	a0,a5
204041f0:	50b2                	lw	ra,44(sp)
204041f2:	5422                	lw	s0,40(sp)
204041f4:	6145                	addi	sp,sp,48
204041f6:	8082                	ret

204041f8 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
204041f8:	1101                	addi	sp,sp,-32
204041fa:	ce06                	sw	ra,28(sp)
204041fc:	cc22                	sw	s0,24(sp)
204041fe:	1000                	addi	s0,sp,32
20404200:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
20404204:	fec42503          	lw	a0,-20(s0)
20404208:	efefe0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
2040420c:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:777
}
2040420e:	853e                	mv	a0,a5
20404210:	40f2                	lw	ra,28(sp)
20404212:	4462                	lw	s0,24(sp)
20404214:	6105                	addi	sp,sp,32
20404216:	8082                	ret

20404218 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20404218:	7179                	addi	sp,sp,-48
2040421a:	d606                	sw	ra,44(sp)
2040421c:	d422                	sw	s0,40(sp)
2040421e:	1800                	addi	s0,sp,48
20404220:	fca42e23          	sw	a0,-36(s0)
20404224:	fcb42c23          	sw	a1,-40(s0)
20404228:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2040422c:	fdc42503          	lw	a0,-36(s0)
20404230:	ed6fe0ef          	jal	ra,20402906 <__metal_driver_cpu_interrupt_controller>
20404234:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20404238:	fec42783          	lw	a5,-20(s0)
2040423c:	cb99                	beqz	a5,20404252 <__metal_driver_cpu_exception_register+0x3a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
2040423e:	fd442603          	lw	a2,-44(s0)
20404242:	fd842583          	lw	a1,-40(s0)
20404246:	fec42503          	lw	a0,-20(s0)
2040424a:	8adff0ef          	jal	ra,20403af6 <__metal_exception_register>
2040424e:	87aa                	mv	a5,a0
20404250:	a011                	j	20404254 <__metal_driver_cpu_exception_register+0x3c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
20404252:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:808
}
20404254:	853e                	mv	a0,a5
20404256:	50b2                	lw	ra,44(sp)
20404258:	5422                	lw	s0,40(sp)
2040425a:	6145                	addi	sp,sp,48
2040425c:	8082                	ret

2040425e <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
2040425e:	1101                	addi	sp,sp,-32
20404260:	ce22                	sw	s0,28(sp)
20404262:	1000                	addi	s0,sp,32
20404264:	fea42623          	sw	a0,-20(s0)
20404268:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
2040426c:	fe842783          	lw	a5,-24(s0)
20404270:	0007d783          	lhu	a5,0(a5)
20404274:	0037f713          	andi	a4,a5,3
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20404278:	478d                	li	a5,3
2040427a:	00f71463          	bne	a4,a5,20404282 <__metal_driver_cpu_get_instruction_length+0x24>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
2040427e:	4791                	li	a5,4
20404280:	a011                	j	20404284 <__metal_driver_cpu_get_instruction_length+0x26>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
20404282:	4789                	li	a5,2
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
20404284:	853e                	mv	a0,a5
20404286:	4472                	lw	s0,28(sp)
20404288:	6105                	addi	sp,sp,32
2040428a:	8082                	ret

2040428c <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
2040428c:	7179                	addi	sp,sp,-48
2040428e:	d622                	sw	s0,44(sp)
20404290:	1800                	addi	s0,sp,48
20404292:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20404296:	341027f3          	csrr	a5,mepc
2040429a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
2040429e:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:827
}
204042a2:	853e                	mv	a0,a5
204042a4:	5432                	lw	s0,44(sp)
204042a6:	6145                	addi	sp,sp,48
204042a8:	8082                	ret

204042aa <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
204042aa:	1101                	addi	sp,sp,-32
204042ac:	ce22                	sw	s0,28(sp)
204042ae:	1000                	addi	s0,sp,32
204042b0:	fea42623          	sw	a0,-20(s0)
204042b4:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
204042b8:	fe842783          	lw	a5,-24(s0)
204042bc:	34179073          	csrw	mepc,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
204042c0:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:832
}
204042c2:	853e                	mv	a0,a5
204042c4:	4472                	lw	s0,28(sp)
204042c6:	6105                	addi	sp,sp,32
204042c8:	8082                	ret

204042ca <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
204042ca:	1101                	addi	sp,sp,-32
204042cc:	ce06                	sw	ra,28(sp)
204042ce:	cc22                	sw	s0,24(sp)
204042d0:	1000                	addi	s0,sp,32
204042d2:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
204042d6:	fec42503          	lw	a0,-20(s0)
204042da:	e56fe0ef          	jal	ra,20402930 <__metal_driver_cpu_buserror>
204042de:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_cpu.c:836
}
204042e0:	853e                	mv	a0,a5
204042e2:	40f2                	lw	ra,28(sp)
204042e4:	4462                	lw	s0,24(sp)
204042e6:	6105                	addi	sp,sp,32
204042e8:	8082                	ret

204042ea <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:314



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
204042ea:	1101                	addi	sp,sp,-32
204042ec:	ce22                	sw	s0,28(sp)
204042ee:	1000                	addi	s0,sp,32
204042f0:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:315
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204042f4:	fec42703          	lw	a4,-20(s0)
204042f8:	800007b7          	lui	a5,0x80000
204042fc:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffefe8>
20404300:	00f71563          	bne	a4,a5,2040430a <__metal_driver_sifive_plic0_control_base+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:316
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
20404304:	0c0007b7          	lui	a5,0xc000
20404308:	a011                	j	2040430c <__metal_driver_sifive_plic0_control_base+0x22>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:319
	}
	else {
		return 0;
2040430a:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:321
	}
}
2040430c:	853e                	mv	a0,a5
2040430e:	4472                	lw	s0,28(sp)
20404310:	6105                	addi	sp,sp,32
20404312:	8082                	ret

20404314 <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:334
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
20404314:	1101                	addi	sp,sp,-32
20404316:	ce22                	sw	s0,28(sp)
20404318:	1000                	addi	s0,sp,32
2040431a:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:335
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
2040431e:	fec42703          	lw	a4,-20(s0)
20404322:	800007b7          	lui	a5,0x80000
20404326:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffefe8>
2040432a:	00f71463          	bne	a4,a5,20404332 <__metal_driver_sifive_plic0_num_interrupts+0x1e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:336
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
2040432e:	47ed                	li	a5,27
20404330:	a011                	j	20404334 <__metal_driver_sifive_plic0_num_interrupts+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:339
	}
	else {
		return 0;
20404332:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:341
	}
}
20404334:	853e                	mv	a0,a5
20404336:	4472                	lw	s0,28(sp)
20404338:	6105                	addi	sp,sp,32
2040433a:	8082                	ret

2040433c <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:344

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
2040433c:	1101                	addi	sp,sp,-32
2040433e:	ce22                	sw	s0,28(sp)
20404340:	1000                	addi	s0,sp,32
20404342:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:345
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20404346:	fec42703          	lw	a4,-20(s0)
2040434a:	800007b7          	lui	a5,0x80000
2040434e:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffefe8>
20404352:	00f71463          	bne	a4,a5,2040435a <__metal_driver_sifive_plic0_max_priority+0x1e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:346
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
20404356:	479d                	li	a5,7
20404358:	a011                	j	2040435c <__metal_driver_sifive_plic0_max_priority+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:349
	}
	else {
		return 0;
2040435a:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:351
	}
}
2040435c:	853e                	mv	a0,a5
2040435e:	4472                	lw	s0,28(sp)
20404360:	6105                	addi	sp,sp,32
20404362:	8082                	ret

20404364 <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:354

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20404364:	1101                	addi	sp,sp,-32
20404366:	ce22                	sw	s0,28(sp)
20404368:	1000                	addi	s0,sp,32
2040436a:	fea42623          	sw	a0,-20(s0)
2040436e:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:355
	if (idx == 0) {
20404372:	fe842783          	lw	a5,-24(s0)
20404376:	e791                	bnez	a5,20404382 <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:356
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20404378:	800007b7          	lui	a5,0x80000
2040437c:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffec18>
20404380:	a011                	j	20404384 <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:359
	}
	else {
		return NULL;
20404382:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:361
	}
}
20404384:	853e                	mv	a0,a5
20404386:	4472                	lw	s0,28(sp)
20404388:	6105                	addi	sp,sp,32
2040438a:	8082                	ret

2040438c <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:364

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
2040438c:	1101                	addi	sp,sp,-32
2040438e:	ce22                	sw	s0,28(sp)
20404390:	1000                	addi	s0,sp,32
20404392:	fea42623          	sw	a0,-20(s0)
20404396:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:365
	if (idx == 0) {
2040439a:	fe842783          	lw	a5,-24(s0)
2040439e:	e399                	bnez	a5,204043a4 <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:366
		return 11;
204043a0:	47ad                	li	a5,11
204043a2:	a011                	j	204043a6 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:369
	}
	else {
		return 0;
204043a4:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:371
	}
}
204043a6:	853e                	mv	a0,a5
204043a8:	4472                	lw	s0,28(sp)
204043aa:	6105                	addi	sp,sp,32
204043ac:	8082                	ret

204043ae <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:374

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
204043ae:	1101                	addi	sp,sp,-32
204043b0:	ce22                	sw	s0,28(sp)
204043b2:	1000                	addi	s0,sp,32
204043b4:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:375
	if (hartid == 0) {
204043b8:	fec42783          	lw	a5,-20(s0)
204043bc:	e399                	bnez	a5,204043c2 <__metal_driver_sifive_plic0_context_ids+0x14>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:376
		return 0;
204043be:	4781                	li	a5,0
204043c0:	a011                	j	204043c4 <__metal_driver_sifive_plic0_context_ids+0x16>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:379
	}
	else {
		return -1;
204043c2:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:381
	}
}
204043c4:	853e                	mv	a0,a5
204043c6:	4472                	lw	s0,28(sp)
204043c8:	6105                	addi	sp,sp,32
204043ca:	8082                	ret

204043cc <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
204043cc:	7179                	addi	sp,sp,-48
204043ce:	d606                	sw	ra,44(sp)
204043d0:	d422                	sw	s0,40(sp)
204043d2:	1800                	addi	s0,sp,48
204043d4:	fca42e23          	sw	a0,-36(s0)
204043d8:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
204043dc:	fdc42503          	lw	a0,-36(s0)
204043e0:	3729                	jal	204042ea <__metal_driver_sifive_plic0_control_base>
204043e2:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
204043e6:	fd842783          	lw	a5,-40(s0)
204043ea:	00c79713          	slli	a4,a5,0xc
204043ee:	fec42783          	lw	a5,-20(s0)
204043f2:	973e                	add	a4,a4,a5
204043f4:	002007b7          	lui	a5,0x200
204043f8:	0791                	addi	a5,a5,4
204043fa:	97ba                	add	a5,a5,a4
204043fc:	439c                	lw	a5,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
204043fe:	853e                	mv	a0,a5
20404400:	50b2                	lw	ra,44(sp)
20404402:	5422                	lw	s0,40(sp)
20404404:	6145                	addi	sp,sp,48
20404406:	8082                	ret

20404408 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
20404408:	7179                	addi	sp,sp,-48
2040440a:	d606                	sw	ra,44(sp)
2040440c:	d422                	sw	s0,40(sp)
2040440e:	1800                	addi	s0,sp,48
20404410:	fca42e23          	sw	a0,-36(s0)
20404414:	fcb42c23          	sw	a1,-40(s0)
20404418:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
2040441c:	fdc42503          	lw	a0,-36(s0)
20404420:	35e9                	jal	204042ea <__metal_driver_sifive_plic0_control_base>
20404422:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
20404426:	fd842783          	lw	a5,-40(s0)
2040442a:	00c79713          	slli	a4,a5,0xc
2040442e:	fec42783          	lw	a5,-20(s0)
20404432:	973e                	add	a4,a4,a5
20404434:	002007b7          	lui	a5,0x200
20404438:	0791                	addi	a5,a5,4
2040443a:	97ba                	add	a5,a5,a4
2040443c:	873e                	mv	a4,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
2040443e:	fd442783          	lw	a5,-44(s0)
20404442:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:35
}
20404444:	0001                	nop
20404446:	50b2                	lw	ra,44(sp)
20404448:	5422                	lw	s0,40(sp)
2040444a:	6145                	addi	sp,sp,48
2040444c:	8082                	ret

2040444e <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
2040444e:	7179                	addi	sp,sp,-48
20404450:	d606                	sw	ra,44(sp)
20404452:	d422                	sw	s0,40(sp)
20404454:	1800                	addi	s0,sp,48
20404456:	fca42e23          	sw	a0,-36(s0)
2040445a:	fcb42c23          	sw	a1,-40(s0)
2040445e:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20404462:	fdc42503          	lw	a0,-36(s0)
20404466:	3551                	jal	204042ea <__metal_driver_sifive_plic0_control_base>
20404468:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
2040446c:	fd842783          	lw	a5,-40(s0)
20404470:	00c79713          	slli	a4,a5,0xc
20404474:	fec42783          	lw	a5,-20(s0)
20404478:	973e                	add	a4,a4,a5
2040447a:	002007b7          	lui	a5,0x200
2040447e:	97ba                	add	a5,a5,a4
20404480:	873e                	mv	a4,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
20404482:	fd442783          	lw	a5,-44(s0)
20404486:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20404488:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:46
}
2040448a:	853e                	mv	a0,a5
2040448c:	50b2                	lw	ra,44(sp)
2040448e:	5422                	lw	s0,40(sp)
20404490:	6145                	addi	sp,sp,48
20404492:	8082                	ret

20404494 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
20404494:	7179                	addi	sp,sp,-48
20404496:	d606                	sw	ra,44(sp)
20404498:	d422                	sw	s0,40(sp)
2040449a:	1800                	addi	s0,sp,48
2040449c:	fca42e23          	sw	a0,-36(s0)
204044a0:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204044a4:	fdc42503          	lw	a0,-36(s0)
204044a8:	3589                	jal	204042ea <__metal_driver_sifive_plic0_control_base>
204044aa:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
204044ae:	fd842783          	lw	a5,-40(s0)
204044b2:	00c79713          	slli	a4,a5,0xc
204044b6:	fec42783          	lw	a5,-20(s0)
204044ba:	973e                	add	a4,a4,a5
204044bc:	002007b7          	lui	a5,0x200
204044c0:	97ba                	add	a5,a5,a4
204044c2:	439c                	lw	a5,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
204044c4:	853e                	mv	a0,a5
204044c6:	50b2                	lw	ra,44(sp)
204044c8:	5422                	lw	s0,40(sp)
204044ca:	6145                	addi	sp,sp,48
204044cc:	8082                	ret

204044ce <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
204044ce:	7179                	addi	sp,sp,-48
204044d0:	d606                	sw	ra,44(sp)
204044d2:	d422                	sw	s0,40(sp)
204044d4:	1800                	addi	s0,sp,48
204044d6:	fca42e23          	sw	a0,-36(s0)
204044da:	fcb42c23          	sw	a1,-40(s0)
204044de:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
204044e2:	fdc42503          	lw	a0,-36(s0)
204044e6:	3511                	jal	204042ea <__metal_driver_sifive_plic0_control_base>
204044e8:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
204044ec:	fdc42503          	lw	a0,-36(s0)
204044f0:	35b1                	jal	2040433c <__metal_driver_sifive_plic0_max_priority>
204044f2:	87aa                	mv	a5,a0
204044f4:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
204044f8:	fe842783          	lw	a5,-24(s0)
204044fc:	c785                	beqz	a5,20404524 <__metal_driver_riscv_plic0_set_priority+0x56>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
204044fe:	fd442703          	lw	a4,-44(s0)
20404502:	fe842783          	lw	a5,-24(s0)
20404506:	00f77f63          	bgeu	a4,a5,20404524 <__metal_driver_riscv_plic0_set_priority+0x56>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
2040450a:	fd842783          	lw	a5,-40(s0)
2040450e:	078a                	slli	a5,a5,0x2
20404510:	873e                	mv	a4,a5
20404512:	fec42783          	lw	a5,-20(s0)
20404516:	97ba                	add	a5,a5,a4
20404518:	873e                	mv	a4,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
2040451a:	fd442783          	lw	a5,-44(s0)
2040451e:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
20404520:	4781                	li	a5,0
20404522:	a011                	j	20404526 <__metal_driver_riscv_plic0_set_priority+0x58>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
20404524:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:72
}
20404526:	853e                	mv	a0,a5
20404528:	50b2                	lw	ra,44(sp)
2040452a:	5422                	lw	s0,40(sp)
2040452c:	6145                	addi	sp,sp,48
2040452e:	8082                	ret

20404530 <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
20404530:	7179                	addi	sp,sp,-48
20404532:	d606                	sw	ra,44(sp)
20404534:	d422                	sw	s0,40(sp)
20404536:	1800                	addi	s0,sp,48
20404538:	fca42e23          	sw	a0,-36(s0)
2040453c:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20404540:	fdc42503          	lw	a0,-36(s0)
20404544:	335d                	jal	204042ea <__metal_driver_sifive_plic0_control_base>
20404546:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
2040454a:	fd842783          	lw	a5,-40(s0)
2040454e:	078a                	slli	a5,a5,0x2
20404550:	873e                	mv	a4,a5
20404552:	fec42783          	lw	a5,-20(s0)
20404556:	97ba                	add	a5,a5,a4
20404558:	439c                	lw	a5,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
2040455a:	853e                	mv	a0,a5
2040455c:	50b2                	lw	ra,44(sp)
2040455e:	5422                	lw	s0,40(sp)
20404560:	6145                	addi	sp,sp,48
20404562:	8082                	ret

20404564 <__metal_plic0_enable>:
__metal_plic0_enable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
20404564:	7179                	addi	sp,sp,-48
20404566:	d606                	sw	ra,44(sp)
20404568:	d422                	sw	s0,40(sp)
2040456a:	1800                	addi	s0,sp,48
2040456c:	fca42e23          	sw	a0,-36(s0)
20404570:	fcb42c23          	sw	a1,-40(s0)
20404574:	fcc42a23          	sw	a2,-44(s0)
20404578:	fcd42823          	sw	a3,-48(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
2040457c:	fdc42503          	lw	a0,-36(s0)
20404580:	33ad                	jal	204042ea <__metal_driver_sifive_plic0_control_base>
20404582:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20404586:	fd842783          	lw	a5,-40(s0)
2040458a:	00779713          	slli	a4,a5,0x7
2040458e:	fec42783          	lw	a5,-20(s0)
20404592:	97ba                	add	a5,a5,a4
20404594:	fd442703          	lw	a4,-44(s0)
20404598:	8715                	srai	a4,a4,0x5
2040459a:	070a                	slli	a4,a4,0x2
2040459c:	973e                	add	a4,a4,a5
2040459e:	6789                	lui	a5,0x2
204045a0:	97ba                	add	a5,a5,a4
204045a2:	439c                	lw	a5,0(a5)
204045a4:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
204045a8:	fd042783          	lw	a5,-48(s0)
204045ac:	cf81                	beqz	a5,204045c4 <__metal_plic0_enable+0x60>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
204045ae:	fd442783          	lw	a5,-44(s0)
204045b2:	8bfd                	andi	a5,a5,31
204045b4:	4705                	li	a4,1
204045b6:	00f717b3          	sll	a5,a4,a5
204045ba:	873e                	mv	a4,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
204045bc:	fe842783          	lw	a5,-24(s0)
204045c0:	8fd9                	or	a5,a5,a4
204045c2:	a829                	j	204045dc <__metal_plic0_enable+0x78>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
204045c4:	fd442783          	lw	a5,-44(s0)
204045c8:	8bfd                	andi	a5,a5,31
204045ca:	4705                	li	a4,1
204045cc:	00f717b3          	sll	a5,a4,a5
204045d0:	fff7c793          	not	a5,a5
204045d4:	873e                	mv	a4,a5
204045d6:	fe842783          	lw	a5,-24(s0)
204045da:	8ff9                	and	a5,a5,a4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
204045dc:	fd842703          	lw	a4,-40(s0)
204045e0:	00771693          	slli	a3,a4,0x7
204045e4:	fec42703          	lw	a4,-20(s0)
204045e8:	9736                	add	a4,a4,a3
204045ea:	fd442683          	lw	a3,-44(s0)
204045ee:	8695                	srai	a3,a3,0x5
204045f0:	068a                	slli	a3,a3,0x2
204045f2:	96ba                	add	a3,a3,a4
204045f4:	6709                	lui	a4,0x2
204045f6:	9736                	add	a4,a4,a3
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
204045f8:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
204045fa:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:103
}
204045fc:	853e                	mv	a0,a5
204045fe:	50b2                	lw	ra,44(sp)
20404600:	5422                	lw	s0,40(sp)
20404602:	6145                	addi	sp,sp,48
20404604:	8082                	ret

20404606 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20404606:	1101                	addi	sp,sp,-32
20404608:	ce06                	sw	ra,28(sp)
2040460a:	cc22                	sw	s0,24(sp)
2040460c:	1000                	addi	s0,sp,32
2040460e:	fea42623          	sw	a0,-20(s0)
20404612:	feb42423          	sw	a1,-24(s0)
20404616:	12c00513          	li	a0,300
2040461a:	086020ef          	jal	ra,204066a0 <metal_shutdown>

2040461e <__metal_plic0_handler>:
__metal_plic0_handler():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
2040461e:	7179                	addi	sp,sp,-48
20404620:	d606                	sw	ra,44(sp)
20404622:	d422                	sw	s0,40(sp)
20404624:	1800                	addi	s0,sp,48
20404626:	fca42e23          	sw	a0,-36(s0)
2040462a:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
2040462e:	fd842783          	lw	a5,-40(s0)
20404632:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20404636:	b4efe0ef          	jal	ra,20402984 <__metal_myhart_id>
2040463a:	87aa                	mv	a5,a0
2040463c:	853e                	mv	a0,a5
2040463e:	3b85                	jal	204043ae <__metal_driver_sifive_plic0_context_ids>
20404640:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
20404644:	fe842583          	lw	a1,-24(s0)
20404648:	fec42503          	lw	a0,-20(s0)
2040464c:	3341                	jal	204043cc <__metal_plic0_claim_interrupt>
2040464e:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
20404652:	fec42503          	lw	a0,-20(s0)
20404656:	397d                	jal	20404314 <__metal_driver_sifive_plic0_num_interrupts>
20404658:	87aa                	mv	a5,a0
2040465a:	fef42023          	sw	a5,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
2040465e:	fe442703          	lw	a4,-28(s0)
20404662:	fe042783          	lw	a5,-32(s0)
20404666:	04f77263          	bgeu	a4,a5,204046aa <__metal_plic0_handler+0x8c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
2040466a:	fec42703          	lw	a4,-20(s0)
2040466e:	fe442783          	lw	a5,-28(s0)
20404672:	078a                	slli	a5,a5,0x2
20404674:	97ba                	add	a5,a5,a4
20404676:	479c                	lw	a5,8(a5)
20404678:	cb8d                	beqz	a5,204046aa <__metal_plic0_handler+0x8c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
2040467a:	fec42703          	lw	a4,-20(s0)
2040467e:	fe442783          	lw	a5,-28(s0)
20404682:	078a                	slli	a5,a5,0x2
20404684:	97ba                	add	a5,a5,a4
20404686:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
2040468a:	fe442603          	lw	a2,-28(s0)
2040468e:	fec42683          	lw	a3,-20(s0)
20404692:	fe442703          	lw	a4,-28(s0)
20404696:	87ba                	mv	a5,a4
20404698:	0786                	slli	a5,a5,0x1
2040469a:	97ba                	add	a5,a5,a4
2040469c:	078e                	slli	a5,a5,0x3
2040469e:	97b6                	add	a5,a5,a3
204046a0:	0887a783          	lw	a5,136(a5)
204046a4:	85be                	mv	a1,a5
204046a6:	8532                	mv	a0,a2
204046a8:	9802                	jalr	a6
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
204046aa:	fe442603          	lw	a2,-28(s0)
204046ae:	fe842583          	lw	a1,-24(s0)
204046b2:	fec42503          	lw	a0,-20(s0)
204046b6:	3b89                	jal	20404408 <__metal_plic0_complete_interrupt>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:121
}
204046b8:	0001                	nop
204046ba:	50b2                	lw	ra,44(sp)
204046bc:	5422                	lw	s0,40(sp)
204046be:	6145                	addi	sp,sp,48
204046c0:	8082                	ret

204046c2 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
204046c2:	7139                	addi	sp,sp,-64
204046c4:	de06                	sw	ra,60(sp)
204046c6:	dc22                	sw	s0,56(sp)
204046c8:	0080                	addi	s0,sp,64
204046ca:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204046ce:	fcc42783          	lw	a5,-52(s0)
204046d2:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
204046d6:	fe442783          	lw	a5,-28(s0)
204046da:	43dc                	lw	a5,4(a5)
204046dc:	12079763          	bnez	a5,2040480a <__metal_driver_riscv_plic0_init+0x148>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
204046e0:	fe042623          	sw	zero,-20(s0)
204046e4:	aa19                	j	204047fa <__metal_driver_riscv_plic0_init+0x138>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
204046e6:	fcc42503          	lw	a0,-52(s0)
204046ea:	c2bff0ef          	jal	ra,20404314 <__metal_driver_sifive_plic0_num_interrupts>
204046ee:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
204046f2:	fec42583          	lw	a1,-20(s0)
204046f6:	fcc42503          	lw	a0,-52(s0)
204046fa:	31ad                	jal	20404364 <__metal_driver_sifive_plic0_interrupt_parents>
204046fc:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20404700:	fec42583          	lw	a1,-20(s0)
20404704:	fcc42503          	lw	a0,-52(s0)
20404708:	3151                	jal	2040438c <__metal_driver_sifive_plic0_interrupt_lines>
2040470a:	fca42c23          	sw	a0,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
2040470e:	fdc42783          	lw	a5,-36(s0)
20404712:	439c                	lw	a5,0(a5)
20404714:	439c                	lw	a5,0(a5)
20404716:	fdc42503          	lw	a0,-36(s0)
2040471a:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
2040471c:	fe042423          	sw	zero,-24(s0)
20404720:	a885                	j	20404790 <__metal_driver_riscv_plic0_init+0xce>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
20404722:	4681                	li	a3,0
20404724:	fe842603          	lw	a2,-24(s0)
20404728:	fec42583          	lw	a1,-20(s0)
2040472c:	fe442503          	lw	a0,-28(s0)
20404730:	3d15                	jal	20404564 <__metal_plic0_enable>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
20404732:	fe842703          	lw	a4,-24(s0)
20404736:	fe042783          	lw	a5,-32(s0)
2040473a:	04f75663          	bge	a4,a5,20404786 <__metal_driver_riscv_plic0_init+0xc4>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
2040473e:	4601                	li	a2,0
20404740:	fe842583          	lw	a1,-24(s0)
20404744:	fcc42503          	lw	a0,-52(s0)
20404748:	3359                	jal	204044ce <__metal_driver_riscv_plic0_set_priority>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
2040474a:	fe442703          	lw	a4,-28(s0)
2040474e:	fe842783          	lw	a5,-24(s0)
20404752:	078a                	slli	a5,a5,0x2
20404754:	97ba                	add	a5,a5,a4
20404756:	0007a423          	sw	zero,8(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
2040475a:	fe442683          	lw	a3,-28(s0)
2040475e:	fe842703          	lw	a4,-24(s0)
20404762:	87ba                	mv	a5,a4
20404764:	0786                	slli	a5,a5,0x1
20404766:	97ba                	add	a5,a5,a4
20404768:	078e                	slli	a5,a5,0x3
2040476a:	97b6                	add	a5,a5,a3
2040476c:	0807a223          	sw	zero,132(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
20404770:	fe442683          	lw	a3,-28(s0)
20404774:	fe842703          	lw	a4,-24(s0)
20404778:	87ba                	mv	a5,a4
2040477a:	0786                	slli	a5,a5,0x1
2040477c:	97ba                	add	a5,a5,a4
2040477e:	078e                	slli	a5,a5,0x3
20404780:	97b6                	add	a5,a5,a3
20404782:	0807a423          	sw	zero,136(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20404786:	fe842783          	lw	a5,-24(s0)
2040478a:	0785                	addi	a5,a5,1
2040478c:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
20404790:	fe842703          	lw	a4,-24(s0)
20404794:	3ff00793          	li	a5,1023
20404798:	f8e7d5e3          	bge	a5,a4,20404722 <__metal_driver_riscv_plic0_init+0x60>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
2040479c:	4601                	li	a2,0
2040479e:	fec42583          	lw	a1,-20(s0)
204047a2:	fcc42503          	lw	a0,-52(s0)
204047a6:	3165                	jal	2040444e <__metal_plic0_set_threshold>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
204047a8:	fdc42783          	lw	a5,-36(s0)
204047ac:	439c                	lw	a5,0(a5)
204047ae:	4fdc                	lw	a5,28(a5)
204047b0:	fe442683          	lw	a3,-28(s0)
204047b4:	4601                	li	a2,0
204047b6:	fd842583          	lw	a1,-40(s0)
204047ba:	fdc42503          	lw	a0,-36(s0)
204047be:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
204047c0:	fdc42783          	lw	a5,-36(s0)
204047c4:	439c                	lw	a5,0(a5)
204047c6:	4fd8                	lw	a4,28(a5)
204047c8:	fe442683          	lw	a3,-28(s0)
204047cc:	204047b7          	lui	a5,0x20404
204047d0:	61e78613          	addi	a2,a5,1566 # 2040461e <__metal_plic0_handler>
204047d4:	fd842583          	lw	a1,-40(s0)
204047d8:	fdc42503          	lw	a0,-36(s0)
204047dc:	9702                	jalr	a4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
204047de:	fdc42783          	lw	a5,-36(s0)
204047e2:	439c                	lw	a5,0(a5)
204047e4:	53dc                	lw	a5,36(a5)
204047e6:	fd842583          	lw	a1,-40(s0)
204047ea:	fdc42503          	lw	a0,-36(s0)
204047ee:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
204047f0:	fec42783          	lw	a5,-20(s0)
204047f4:	0785                	addi	a5,a5,1
204047f6:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
204047fa:	fec42783          	lw	a5,-20(s0)
204047fe:	eef054e3          	blez	a5,204046e6 <__metal_driver_riscv_plic0_init+0x24>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
20404802:	fe442783          	lw	a5,-28(s0)
20404806:	4705                	li	a4,1
20404808:	c3d8                	sw	a4,4(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
2040480a:	0001                	nop
2040480c:	50f2                	lw	ra,60(sp)
2040480e:	5462                	lw	s0,56(sp)
20404810:	6121                	addi	sp,sp,64
20404812:	8082                	ret

20404814 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
20404814:	7179                	addi	sp,sp,-48
20404816:	d606                	sw	ra,44(sp)
20404818:	d422                	sw	s0,40(sp)
2040481a:	1800                	addi	s0,sp,48
2040481c:	fca42e23          	sw	a0,-36(s0)
20404820:	fcb42c23          	sw	a1,-40(s0)
20404824:	fcc42a23          	sw	a2,-44(s0)
20404828:	fcd42823          	sw	a3,-48(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2040482c:	fdc42783          	lw	a5,-36(s0)
20404830:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20404834:	fdc42503          	lw	a0,-36(s0)
20404838:	addff0ef          	jal	ra,20404314 <__metal_driver_sifive_plic0_num_interrupts>
2040483c:	872a                	mv	a4,a0
2040483e:	fd842783          	lw	a5,-40(s0)
20404842:	00e7c463          	blt	a5,a4,2040484a <__metal_driver_riscv_plic0_register+0x36>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20404846:	57fd                	li	a5,-1
20404848:	a051                	j	204048cc <__metal_driver_riscv_plic0_register+0xb8>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
2040484a:	fd442783          	lw	a5,-44(s0)
2040484e:	cf9d                	beqz	a5,2040488c <__metal_driver_riscv_plic0_register+0x78>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20404850:	4609                	li	a2,2
20404852:	fd842583          	lw	a1,-40(s0)
20404856:	fdc42503          	lw	a0,-36(s0)
2040485a:	c75ff0ef          	jal	ra,204044ce <__metal_driver_riscv_plic0_set_priority>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
2040485e:	fec42703          	lw	a4,-20(s0)
20404862:	fd842783          	lw	a5,-40(s0)
20404866:	078a                	slli	a5,a5,0x2
20404868:	97ba                	add	a5,a5,a4
2040486a:	fd442703          	lw	a4,-44(s0)
2040486e:	c798                	sw	a4,8(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20404870:	fec42683          	lw	a3,-20(s0)
20404874:	fd842703          	lw	a4,-40(s0)
20404878:	87ba                	mv	a5,a4
2040487a:	0786                	slli	a5,a5,0x1
2040487c:	97ba                	add	a5,a5,a4
2040487e:	078e                	slli	a5,a5,0x3
20404880:	97b6                	add	a5,a5,a3
20404882:	fd042703          	lw	a4,-48(s0)
20404886:	08e7a423          	sw	a4,136(a5)
2040488a:	a081                	j	204048ca <__metal_driver_riscv_plic0_register+0xb6>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
2040488c:	4605                	li	a2,1
2040488e:	fd842583          	lw	a1,-40(s0)
20404892:	fdc42503          	lw	a0,-36(s0)
20404896:	c39ff0ef          	jal	ra,204044ce <__metal_driver_riscv_plic0_set_priority>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
2040489a:	fec42703          	lw	a4,-20(s0)
2040489e:	fd842783          	lw	a5,-40(s0)
204048a2:	078a                	slli	a5,a5,0x2
204048a4:	97ba                	add	a5,a5,a4
204048a6:	20404737          	lui	a4,0x20404
204048aa:	60670713          	addi	a4,a4,1542 # 20404606 <__metal_plic0_default_handler>
204048ae:	c798                	sw	a4,8(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
204048b0:	fec42683          	lw	a3,-20(s0)
204048b4:	fd842703          	lw	a4,-40(s0)
204048b8:	87ba                	mv	a5,a4
204048ba:	0786                	slli	a5,a5,0x1
204048bc:	97ba                	add	a5,a5,a4
204048be:	078e                	slli	a5,a5,0x3
204048c0:	97b6                	add	a5,a5,a3
204048c2:	fd042703          	lw	a4,-48(s0)
204048c6:	08e7a223          	sw	a4,132(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
204048ca:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:185
}
204048cc:	853e                	mv	a0,a5
204048ce:	50b2                	lw	ra,44(sp)
204048d0:	5422                	lw	s0,40(sp)
204048d2:	6145                	addi	sp,sp,48
204048d4:	8082                	ret

204048d6 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
204048d6:	7179                	addi	sp,sp,-48
204048d8:	d606                	sw	ra,44(sp)
204048da:	d422                	sw	s0,40(sp)
204048dc:	1800                	addi	s0,sp,48
204048de:	fca42e23          	sw	a0,-36(s0)
204048e2:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204048e6:	fdc42783          	lw	a5,-36(s0)
204048ea:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204048ee:	fdc42503          	lw	a0,-36(s0)
204048f2:	a23ff0ef          	jal	ra,20404314 <__metal_driver_sifive_plic0_num_interrupts>
204048f6:	872a                	mv	a4,a0
204048f8:	fd842783          	lw	a5,-40(s0)
204048fc:	00e7c463          	blt	a5,a4,20404904 <__metal_driver_riscv_plic0_enable+0x2e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
20404900:	57fd                	li	a5,-1
20404902:	a829                	j	2040491c <__metal_driver_riscv_plic0_enable+0x46>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20404904:	880fe0ef          	jal	ra,20402984 <__metal_myhart_id>
20404908:	87aa                	mv	a5,a0
2040490a:	4685                	li	a3,1
2040490c:	fd842603          	lw	a2,-40(s0)
20404910:	85be                	mv	a1,a5
20404912:	fec42503          	lw	a0,-20(s0)
20404916:	c4fff0ef          	jal	ra,20404564 <__metal_plic0_enable>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
2040491a:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:197
}
2040491c:	853e                	mv	a0,a5
2040491e:	50b2                	lw	ra,44(sp)
20404920:	5422                	lw	s0,40(sp)
20404922:	6145                	addi	sp,sp,48
20404924:	8082                	ret

20404926 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20404926:	7179                	addi	sp,sp,-48
20404928:	d606                	sw	ra,44(sp)
2040492a:	d422                	sw	s0,40(sp)
2040492c:	1800                	addi	s0,sp,48
2040492e:	fca42e23          	sw	a0,-36(s0)
20404932:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404936:	fdc42783          	lw	a5,-36(s0)
2040493a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040493e:	fdc42503          	lw	a0,-36(s0)
20404942:	9d3ff0ef          	jal	ra,20404314 <__metal_driver_sifive_plic0_num_interrupts>
20404946:	872a                	mv	a4,a0
20404948:	fd842783          	lw	a5,-40(s0)
2040494c:	00e7c463          	blt	a5,a4,20404954 <__metal_driver_riscv_plic0_disable+0x2e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20404950:	57fd                	li	a5,-1
20404952:	a829                	j	2040496c <__metal_driver_riscv_plic0_disable+0x46>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20404954:	830fe0ef          	jal	ra,20402984 <__metal_myhart_id>
20404958:	87aa                	mv	a5,a0
2040495a:	4681                	li	a3,0
2040495c:	fd842603          	lw	a2,-40(s0)
20404960:	85be                	mv	a1,a5
20404962:	fec42503          	lw	a0,-20(s0)
20404966:	bffff0ef          	jal	ra,20404564 <__metal_plic0_enable>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
2040496a:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:208
}
2040496c:	853e                	mv	a0,a5
2040496e:	50b2                	lw	ra,44(sp)
20404970:	5422                	lw	s0,40(sp)
20404972:	6145                	addi	sp,sp,48
20404974:	8082                	ret

20404976 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20404976:	1101                	addi	sp,sp,-32
20404978:	ce06                	sw	ra,28(sp)
2040497a:	cc22                	sw	s0,24(sp)
2040497c:	1000                	addi	s0,sp,32
2040497e:	fea42623          	sw	a0,-20(s0)
20404982:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20404986:	ffffd0ef          	jal	ra,20402984 <__metal_myhart_id>
2040498a:	87aa                	mv	a5,a0
2040498c:	fe842603          	lw	a2,-24(s0)
20404990:	85be                	mv	a1,a5
20404992:	fec42503          	lw	a0,-20(s0)
20404996:	ab9ff0ef          	jal	ra,2040444e <__metal_plic0_set_threshold>
2040499a:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
2040499c:	853e                	mv	a0,a5
2040499e:	40f2                	lw	ra,28(sp)
204049a0:	4462                	lw	s0,24(sp)
204049a2:	6105                	addi	sp,sp,32
204049a4:	8082                	ret

204049a6 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
204049a6:	1101                	addi	sp,sp,-32
204049a8:	ce06                	sw	ra,28(sp)
204049aa:	cc22                	sw	s0,24(sp)
204049ac:	1000                	addi	s0,sp,32
204049ae:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
204049b2:	fd3fd0ef          	jal	ra,20402984 <__metal_myhart_id>
204049b6:	87aa                	mv	a5,a0
204049b8:	85be                	mv	a1,a5
204049ba:	fec42503          	lw	a0,-20(s0)
204049be:	ad7ff0ef          	jal	ra,20404494 <__metal_plic0_get_threshold>
204049c2:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:219
}
204049c4:	853e                	mv	a0,a5
204049c6:	40f2                	lw	ra,28(sp)
204049c8:	4462                	lw	s0,24(sp)
204049ca:	6105                	addi	sp,sp,32
204049cc:	8082                	ret

204049ce <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
204049ce:	7179                	addi	sp,sp,-48
204049d0:	d606                	sw	ra,44(sp)
204049d2:	d422                	sw	s0,40(sp)
204049d4:	1800                	addi	s0,sp,48
204049d6:	fca42e23          	sw	a0,-36(s0)
204049da:	fcb42c23          	sw	a1,-40(s0)
204049de:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
204049e2:	fe042223          	sw	zero,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204049e6:	fdc42783          	lw	a5,-36(s0)
204049ea:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204049ee:	fdc42503          	lw	a0,-36(s0)
204049f2:	923ff0ef          	jal	ra,20404314 <__metal_driver_sifive_plic0_num_interrupts>
204049f6:	872a                	mv	a4,a0
204049f8:	fd442783          	lw	a5,-44(s0)
204049fc:	00e7c863          	blt	a5,a4,20404a0c <__metal_driver_riscv_plic0_affinity_enable+0x3e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
20404a00:	57fd                	li	a5,-1
20404a02:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20404a06:	fe442783          	lw	a5,-28(s0)
20404a0a:	a899                	j	20404a60 <__metal_driver_riscv_plic0_affinity_enable+0x92>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20404a0c:	fe042623          	sw	zero,-20(s0)
20404a10:	a099                	j	20404a56 <__metal_driver_riscv_plic0_affinity_enable+0x88>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
20404a12:	fec42783          	lw	a5,-20(s0)
20404a16:	c795                	beqz	a5,20404a42 <__metal_driver_riscv_plic0_affinity_enable+0x74>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20404a18:	4685                	li	a3,1
20404a1a:	fd442603          	lw	a2,-44(s0)
20404a1e:	fec42583          	lw	a1,-20(s0)
20404a22:	fe842503          	lw	a0,-24(s0)
20404a26:	b3fff0ef          	jal	ra,20404564 <__metal_plic0_enable>
20404a2a:	87aa                	mv	a5,a0
20404a2c:	0017f713          	andi	a4,a5,1
20404a30:	fec42783          	lw	a5,-20(s0)
20404a34:	00f71733          	sll	a4,a4,a5
20404a38:	fe442783          	lw	a5,-28(s0)
20404a3c:	8fd9                	or	a5,a5,a4
20404a3e:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20404a42:	fec42783          	lw	a5,-20(s0)
20404a46:	0785                	addi	a5,a5,1
20404a48:	fef42623          	sw	a5,-20(s0)
20404a4c:	fd842783          	lw	a5,-40(s0)
20404a50:	8385                	srli	a5,a5,0x1
20404a52:	fcf42c23          	sw	a5,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20404a56:	fd842783          	lw	a5,-40(s0)
20404a5a:	ffc5                	bnez	a5,20404a12 <__metal_driver_riscv_plic0_affinity_enable+0x44>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20404a5c:	fe442783          	lw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
20404a60:	853e                	mv	a0,a5
20404a62:	50b2                	lw	ra,44(sp)
20404a64:	5422                	lw	s0,40(sp)
20404a66:	6145                	addi	sp,sp,48
20404a68:	8082                	ret

20404a6a <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20404a6a:	7179                	addi	sp,sp,-48
20404a6c:	d606                	sw	ra,44(sp)
20404a6e:	d422                	sw	s0,40(sp)
20404a70:	1800                	addi	s0,sp,48
20404a72:	fca42e23          	sw	a0,-36(s0)
20404a76:	fcb42c23          	sw	a1,-40(s0)
20404a7a:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
20404a7e:	fe042223          	sw	zero,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404a82:	fdc42783          	lw	a5,-36(s0)
20404a86:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20404a8a:	fdc42503          	lw	a0,-36(s0)
20404a8e:	887ff0ef          	jal	ra,20404314 <__metal_driver_sifive_plic0_num_interrupts>
20404a92:	872a                	mv	a4,a0
20404a94:	fd442783          	lw	a5,-44(s0)
20404a98:	00e7c863          	blt	a5,a4,20404aa8 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20404a9c:	57fd                	li	a5,-1
20404a9e:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
20404aa2:	fe442783          	lw	a5,-28(s0)
20404aa6:	a899                	j	20404afc <__metal_driver_riscv_plic0_affinity_disable+0x92>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20404aa8:	fe042623          	sw	zero,-20(s0)
20404aac:	a099                	j	20404af2 <__metal_driver_riscv_plic0_affinity_disable+0x88>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
20404aae:	fec42783          	lw	a5,-20(s0)
20404ab2:	c795                	beqz	a5,20404ade <__metal_driver_riscv_plic0_affinity_disable+0x74>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20404ab4:	4681                	li	a3,0
20404ab6:	fd442603          	lw	a2,-44(s0)
20404aba:	fec42583          	lw	a1,-20(s0)
20404abe:	fe842503          	lw	a0,-24(s0)
20404ac2:	aa3ff0ef          	jal	ra,20404564 <__metal_plic0_enable>
20404ac6:	87aa                	mv	a5,a0
20404ac8:	0017f713          	andi	a4,a5,1
20404acc:	fec42783          	lw	a5,-20(s0)
20404ad0:	00f71733          	sll	a4,a4,a5
20404ad4:	fe442783          	lw	a5,-28(s0)
20404ad8:	8fd9                	or	a5,a5,a4
20404ada:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20404ade:	fec42783          	lw	a5,-20(s0)
20404ae2:	0785                	addi	a5,a5,1
20404ae4:	fef42623          	sw	a5,-20(s0)
20404ae8:	fd842783          	lw	a5,-40(s0)
20404aec:	8385                	srli	a5,a5,0x1
20404aee:	fcf42c23          	sw	a5,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
20404af2:	fd842783          	lw	a5,-40(s0)
20404af6:	ffc5                	bnez	a5,20404aae <__metal_driver_riscv_plic0_affinity_disable+0x44>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20404af8:	fe442783          	lw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20404afc:	853e                	mv	a0,a5
20404afe:	50b2                	lw	ra,44(sp)
20404b00:	5422                	lw	s0,40(sp)
20404b02:	6145                	addi	sp,sp,48
20404b04:	8082                	ret

20404b06 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20404b06:	7179                	addi	sp,sp,-48
20404b08:	d606                	sw	ra,44(sp)
20404b0a:	d422                	sw	s0,40(sp)
20404b0c:	1800                	addi	s0,sp,48
20404b0e:	fca42e23          	sw	a0,-36(s0)
20404b12:	fcb42c23          	sw	a1,-40(s0)
20404b16:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20404b1a:	fe042423          	sw	zero,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
20404b1e:	fe042623          	sw	zero,-20(s0)
20404b22:	a091                	j	20404b66 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
20404b24:	fec42783          	lw	a5,-20(s0)
20404b28:	c78d                	beqz	a5,20404b52 <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20404b2a:	fd442603          	lw	a2,-44(s0)
20404b2e:	fec42583          	lw	a1,-20(s0)
20404b32:	fdc42503          	lw	a0,-36(s0)
20404b36:	919ff0ef          	jal	ra,2040444e <__metal_plic0_set_threshold>
20404b3a:	87aa                	mv	a5,a0
20404b3c:	0017f713          	andi	a4,a5,1
20404b40:	fec42783          	lw	a5,-20(s0)
20404b44:	00f71733          	sll	a4,a4,a5
20404b48:	fe842783          	lw	a5,-24(s0)
20404b4c:	8fd9                	or	a5,a5,a4
20404b4e:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20404b52:	fec42783          	lw	a5,-20(s0)
20404b56:	0785                	addi	a5,a5,1
20404b58:	fef42623          	sw	a5,-20(s0)
20404b5c:	fd842783          	lw	a5,-40(s0)
20404b60:	8385                	srli	a5,a5,0x1
20404b62:	fcf42c23          	sw	a5,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20404b66:	fd842783          	lw	a5,-40(s0)
20404b6a:	ffcd                	bnez	a5,20404b24 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20404b6c:	fe842783          	lw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:281
}
20404b70:	853e                	mv	a0,a5
20404b72:	50b2                	lw	ra,44(sp)
20404b74:	5422                	lw	s0,40(sp)
20404b76:	6145                	addi	sp,sp,48
20404b78:	8082                	ret

20404b7a <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20404b7a:	1101                	addi	sp,sp,-32
20404b7c:	ce06                	sw	ra,28(sp)
20404b7e:	cc22                	sw	s0,24(sp)
20404b80:	1000                	addi	s0,sp,32
20404b82:	fea42623          	sw	a0,-20(s0)
20404b86:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20404b8a:	fe842583          	lw	a1,-24(s0)
20404b8e:	fec42503          	lw	a0,-20(s0)
20404b92:	903ff0ef          	jal	ra,20404494 <__metal_plic0_get_threshold>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20404b96:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/riscv_plic0.c:287
}
20404b98:	853e                	mv	a0,a5
20404b9a:	40f2                	lw	ra,28(sp)
20404b9c:	4462                	lw	s0,24(sp)
20404b9e:	6105                	addi	sp,sp,32
20404ba0:	8082                	ret

20404ba2 <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1037



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20404ba2:	1101                	addi	sp,sp,-32
20404ba4:	ce22                	sw	s0,28(sp)
20404ba6:	1000                	addi	s0,sp,32
20404ba8:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1038
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20404bac:	800007b7          	lui	a5,0x80000
20404bb0:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffebfc>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1039
}
20404bb4:	853e                	mv	a0,a5
20404bb6:	4472                	lw	s0,28(sp)
20404bb8:	6105                	addi	sp,sp,32
20404bba:	8082                	ret

20404bbc <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1042

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20404bbc:	1101                	addi	sp,sp,-32
20404bbe:	ce22                	sw	s0,28(sp)
20404bc0:	1000                	addi	s0,sp,32
20404bc2:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1043
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20404bc6:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1044
}
20404bca:	853e                	mv	a0,a5
20404bcc:	4472                	lw	s0,28(sp)
20404bce:	6105                	addi	sp,sp,32
20404bd0:	8082                	ret

20404bd2 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1052
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20404bd2:	1101                	addi	sp,sp,-32
20404bd4:	ce22                	sw	s0,28(sp)
20404bd6:	1000                	addi	s0,sp,32
20404bd8:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1053
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20404bdc:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1054
}
20404bde:	853e                	mv	a0,a5
20404be0:	4472                	lw	s0,28(sp)
20404be2:	6105                	addi	sp,sp,32
20404be4:	8082                	ret

20404be6 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1169
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20404be6:	1141                	addi	sp,sp,-16
20404be8:	c622                	sw	s0,12(sp)
20404bea:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20404bec:	204017b7          	lui	a5,0x20401
20404bf0:	f3c78793          	addi	a5,a5,-196 # 20400f3c <__metal_driver_vtable_sifive_fe310_g000_prci>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1171
}
20404bf4:	853e                	mv	a0,a5
20404bf6:	4432                	lw	s0,12(sp)
20404bf8:	0141                	addi	sp,sp,16
20404bfa:	8082                	ret

20404bfc <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20404bfc:	7139                	addi	sp,sp,-64
20404bfe:	de06                	sw	ra,60(sp)
20404c00:	dc22                	sw	s0,56(sp)
20404c02:	0080                	addi	s0,sp,64
20404c04:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20404c08:	fcc42503          	lw	a0,-52(s0)
20404c0c:	3f59                	jal	20404ba2 <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20404c0e:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20404c12:	fcc42503          	lw	a0,-52(s0)
20404c16:	3f75                	jal	20404bd2 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20404c18:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20404c1c:	fcc42503          	lw	a0,-52(s0)
20404c20:	3f71                	jal	20404bbc <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20404c22:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20404c26:	37c1                	jal	20404be6 <__metal_driver_sifive_fe310_g000_prci_vtable>
20404c28:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20404c2c:	fe042783          	lw	a5,-32(s0)
20404c30:	439c                	lw	a5,0(a5)
20404c32:	fe842583          	lw	a1,-24(s0)
20404c36:	fe442503          	lw	a0,-28(s0)
20404c3a:	9782                	jalr	a5
20404c3c:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20404c40:	fdc42703          	lw	a4,-36(s0)
20404c44:	400007b7          	lui	a5,0x40000
20404c48:	8ff9                	and	a5,a5,a4
20404c4a:	e399                	bnez	a5,20404c50 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20404c4c:	57fd                	li	a5,-1
20404c4e:	a025                	j	20404c76 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20404c50:	fdc42783          	lw	a5,-36(s0)
20404c54:	0007c463          	bltz	a5,20404c5c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
20404c58:	57fd                	li	a5,-1
20404c5a:	a831                	j	20404c76 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20404c5c:	fec42503          	lw	a0,-20(s0)
20404c60:	0e3010ef          	jal	ra,20406542 <metal_clock_get_rate_hz>
20404c64:	87aa                	mv	a5,a0
20404c66:	873e                	mv	a4,a5
20404c68:	fdc42783          	lw	a5,-36(s0)
20404c6c:	03f7f793          	andi	a5,a5,63
20404c70:	0785                	addi	a5,a5,1
20404c72:	02f757b3          	divu	a5,a4,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20404c76:	853e                	mv	a0,a5
20404c78:	50f2                	lw	ra,60(sp)
20404c7a:	5462                	lw	s0,56(sp)
20404c7c:	6121                	addi	sp,sp,64
20404c7e:	8082                	ret

20404c80 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20404c80:	1101                	addi	sp,sp,-32
20404c82:	ce06                	sw	ra,28(sp)
20404c84:	cc22                	sw	s0,24(sp)
20404c86:	1000                	addi	s0,sp,32
20404c88:	fea42623          	sw	a0,-20(s0)
20404c8c:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20404c90:	fec42503          	lw	a0,-20(s0)
20404c94:	37a5                	jal	20404bfc <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20404c96:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20404c98:	853e                	mv	a0,a5
20404c9a:	40f2                	lw	ra,28(sp)
20404c9c:	4462                	lw	s0,24(sp)
20404c9e:	6105                	addi	sp,sp,32
20404ca0:	8082                	ret

20404ca2 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1060
{
20404ca2:	1101                	addi	sp,sp,-32
20404ca4:	ce22                	sw	s0,28(sp)
20404ca6:	1000                	addi	s0,sp,32
20404ca8:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1061
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20404cac:	800007b7          	lui	a5,0x80000
20404cb0:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffebf0>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1062
}
20404cb4:	853e                	mv	a0,a5
20404cb6:	4472                	lw	s0,28(sp)
20404cb8:	6105                	addi	sp,sp,32
20404cba:	8082                	ret

20404cbc <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1065
{
20404cbc:	1101                	addi	sp,sp,-32
20404cbe:	ce22                	sw	s0,28(sp)
20404cc0:	1000                	addi	s0,sp,32
20404cc2:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1066
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20404cc6:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1067
}
20404cca:	853e                	mv	a0,a5
20404ccc:	4472                	lw	s0,28(sp)
20404cce:	6105                	addi	sp,sp,32
20404cd0:	8082                	ret

20404cd2 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1070
{
20404cd2:	1101                	addi	sp,sp,-32
20404cd4:	ce22                	sw	s0,28(sp)
20404cd6:	1000                	addi	s0,sp,32
20404cd8:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1071
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20404cdc:	4791                	li	a5,4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1072
}
20404cde:	853e                	mv	a0,a5
20404ce0:	4472                	lw	s0,28(sp)
20404ce2:	6105                	addi	sp,sp,32
20404ce4:	8082                	ret

20404ce6 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1169
{
20404ce6:	1141                	addi	sp,sp,-16
20404ce8:	c622                	sw	s0,12(sp)
20404cea:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20404cec:	204017b7          	lui	a5,0x20401
20404cf0:	f3c78793          	addi	a5,a5,-196 # 20400f3c <__metal_driver_vtable_sifive_fe310_g000_prci>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1171
}
20404cf4:	853e                	mv	a0,a5
20404cf6:	4432                	lw	s0,12(sp)
20404cf8:	0141                	addi	sp,sp,16
20404cfa:	8082                	ret

20404cfc <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20404cfc:	7139                	addi	sp,sp,-64
20404cfe:	de06                	sw	ra,60(sp)
20404d00:	dc22                	sw	s0,56(sp)
20404d02:	0080                	addi	s0,sp,64
20404d04:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20404d08:	fcc42503          	lw	a0,-52(s0)
20404d0c:	3f59                	jal	20404ca2 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20404d0e:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20404d12:	fcc42503          	lw	a0,-52(s0)
20404d16:	3f75                	jal	20404cd2 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20404d18:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20404d1c:	fcc42503          	lw	a0,-52(s0)
20404d20:	3f71                	jal	20404cbc <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20404d22:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20404d26:	37c1                	jal	20404ce6 <__metal_driver_sifive_fe310_g000_prci_vtable>
20404d28:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20404d2c:	fe042783          	lw	a5,-32(s0)
20404d30:	439c                	lw	a5,0(a5)
20404d32:	fe842583          	lw	a1,-24(s0)
20404d36:	fe442503          	lw	a0,-28(s0)
20404d3a:	9782                	jalr	a5
20404d3c:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20404d40:	fdc42703          	lw	a4,-36(s0)
20404d44:	400007b7          	lui	a5,0x40000
20404d48:	8ff9                	and	a5,a5,a4
20404d4a:	e399                	bnez	a5,20404d50 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20404d4c:	57fd                	li	a5,-1
20404d4e:	a821                	j	20404d66 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20404d50:	fdc42783          	lw	a5,-36(s0)
20404d54:	0007c463          	bltz	a5,20404d5c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
20404d58:	57fd                	li	a5,-1
20404d5a:	a031                	j	20404d66 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20404d5c:	fec42503          	lw	a0,-20(s0)
20404d60:	7e2010ef          	jal	ra,20406542 <metal_clock_get_rate_hz>
20404d64:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
20404d66:	853e                	mv	a0,a5
20404d68:	50f2                	lw	ra,60(sp)
20404d6a:	5462                	lw	s0,56(sp)
20404d6c:	6121                	addi	sp,sp,64
20404d6e:	8082                	ret

20404d70 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20404d70:	1101                	addi	sp,sp,-32
20404d72:	ce06                	sw	ra,28(sp)
20404d74:	cc22                	sw	s0,24(sp)
20404d76:	1000                	addi	s0,sp,32
20404d78:	fea42623          	sw	a0,-20(s0)
20404d7c:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20404d80:	fec42503          	lw	a0,-20(s0)
20404d84:	3fa5                	jal	20404cfc <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20404d86:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20404d88:	853e                	mv	a0,a5
20404d8a:	40f2                	lw	ra,28(sp)
20404d8c:	4462                	lw	s0,24(sp)
20404d8e:	6105                	addi	sp,sp,32
20404d90:	8082                	ret

20404d92 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1121
{
20404d92:	1101                	addi	sp,sp,-32
20404d94:	ce22                	sw	s0,28(sp)
20404d96:	1000                	addi	s0,sp,32
20404d98:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1122
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20404d9c:	800007b7          	lui	a5,0x80000
20404da0:	77878793          	addi	a5,a5,1912 # 80000778 <metal_segment_heap_target_end+0xfffff308>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1123
}
20404da4:	853e                	mv	a0,a5
20404da6:	4472                	lw	s0,28(sp)
20404da8:	6105                	addi	sp,sp,32
20404daa:	8082                	ret

20404dac <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1126
{
20404dac:	1101                	addi	sp,sp,-32
20404dae:	ce22                	sw	s0,28(sp)
20404db0:	1000                	addi	s0,sp,32
20404db2:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1127
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20404db6:	800007b7          	lui	a5,0x80000
20404dba:	78478793          	addi	a5,a5,1924 # 80000784 <metal_segment_heap_target_end+0xfffff314>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1128
}
20404dbe:	853e                	mv	a0,a5
20404dc0:	4472                	lw	s0,28(sp)
20404dc2:	6105                	addi	sp,sp,32
20404dc4:	8082                	ret

20404dc6 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1131
{
20404dc6:	1101                	addi	sp,sp,-32
20404dc8:	ce22                	sw	s0,28(sp)
20404dca:	1000                	addi	s0,sp,32
20404dcc:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1132
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20404dd0:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1133
}
20404dd4:	853e                	mv	a0,a5
20404dd6:	4472                	lw	s0,28(sp)
20404dd8:	6105                	addi	sp,sp,32
20404dda:	8082                	ret

20404ddc <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1136
{
20404ddc:	1101                	addi	sp,sp,-32
20404dde:	ce22                	sw	s0,28(sp)
20404de0:	1000                	addi	s0,sp,32
20404de2:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1137
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20404de6:	47b1                	li	a5,12
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1138
}
20404de8:	853e                	mv	a0,a5
20404dea:	4472                	lw	s0,28(sp)
20404dec:	6105                	addi	sp,sp,32
20404dee:	8082                	ret

20404df0 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1141
{
20404df0:	1141                	addi	sp,sp,-16
20404df2:	c622                	sw	s0,12(sp)
20404df4:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1142
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20404df6:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1143
}
20404dfa:	853e                	mv	a0,a5
20404dfc:	4432                	lw	s0,12(sp)
20404dfe:	0141                	addi	sp,sp,16
20404e00:	8082                	ret

20404e02 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1146
{
20404e02:	1141                	addi	sp,sp,-16
20404e04:	c622                	sw	s0,12(sp)
20404e06:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1147
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20404e08:	47a1                	li	a5,8
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1148
}
20404e0a:	853e                	mv	a0,a5
20404e0c:	4432                	lw	s0,12(sp)
20404e0e:	0141                	addi	sp,sp,16
20404e10:	8082                	ret

20404e12 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1151
{
20404e12:	1141                	addi	sp,sp,-16
20404e14:	c622                	sw	s0,12(sp)
20404e16:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1152
		return 16000000;
20404e18:	00f427b7          	lui	a5,0xf42
20404e1c:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1153
}
20404e20:	853e                	mv	a0,a5
20404e22:	4432                	lw	s0,12(sp)
20404e24:	0141                	addi	sp,sp,16
20404e26:	8082                	ret

20404e28 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1159
{
20404e28:	1141                	addi	sp,sp,-16
20404e2a:	c622                	sw	s0,12(sp)
20404e2c:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20404e2e:	100087b7          	lui	a5,0x10008
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1161
}
20404e32:	853e                	mv	a0,a5
20404e34:	4432                	lw	s0,12(sp)
20404e36:	0141                	addi	sp,sp,16
20404e38:	8082                	ret

20404e3a <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1169
{
20404e3a:	1141                	addi	sp,sp,-16
20404e3c:	c622                	sw	s0,12(sp)
20404e3e:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20404e40:	204017b7          	lui	a5,0x20401
20404e44:	f3c78793          	addi	a5,a5,-196 # 20400f3c <__metal_driver_vtable_sifive_fe310_g000_prci>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1171
}
20404e48:	853e                	mv	a0,a5
20404e4a:	4432                	lw	s0,12(sp)
20404e4c:	0141                	addi	sp,sp,16
20404e4e:	8082                	ret

20404e50 <get_pll_config_freq>:
get_pll_config_freq():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20404e50:	1101                	addi	sp,sp,-32
20404e52:	ce22                	sw	s0,28(sp)
20404e54:	1000                	addi	s0,sp,32
20404e56:	fea42623          	sw	a0,-20(s0)
20404e5a:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
20404e5e:	fe842783          	lw	a5,-24(s0)
20404e62:	479c                	lw	a5,8(a5)
20404e64:	fec42703          	lw	a4,-20(s0)
20404e68:	00f76963          	bltu	a4,a5,20404e7a <get_pll_config_freq+0x2a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20404e6c:	fe842783          	lw	a5,-24(s0)
20404e70:	47dc                	lw	a5,12(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20404e72:	fec42703          	lw	a4,-20(s0)
20404e76:	00e7f463          	bgeu	a5,a4,20404e7e <get_pll_config_freq+0x2e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20404e7a:	57fd                	li	a5,-1
20404e7c:	a829                	j	20404e96 <get_pll_config_freq+0x46>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20404e7e:	fe842783          	lw	a5,-24(s0)
20404e82:	4398                	lw	a4,0(a5)
20404e84:	fec42783          	lw	a5,-20(s0)
20404e88:	02f70733          	mul	a4,a4,a5
20404e8c:	fe842783          	lw	a5,-24(s0)
20404e90:	43dc                	lw	a5,4(a5)
20404e92:	02f757b3          	divu	a5,a4,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20404e96:	853e                	mv	a0,a5
20404e98:	4472                	lw	s0,28(sp)
20404e9a:	6105                	addi	sp,sp,32
20404e9c:	8082                	ret

20404e9e <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20404e9e:	7139                	addi	sp,sp,-64
20404ea0:	de06                	sw	ra,60(sp)
20404ea2:	dc22                	sw	s0,56(sp)
20404ea4:	0080                	addi	s0,sp,64
20404ea6:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20404eaa:	fcc42783          	lw	a5,-52(s0)
20404eae:	853e                	mv	a0,a5
20404eb0:	3df5                	jal	20404dac <__metal_driver_sifive_fe310_g000_pll_pllref>
20404eb2:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20404eb6:	3fb1                	jal	20404e12 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20404eb8:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20404ebc:	3799                	jal	20404e02 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20404ebe:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20404ec2:	379d                	jal	20404e28 <__metal_driver_sifive_fe310_g000_prci_base>
20404ec4:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20404ec8:	fe042703          	lw	a4,-32(s0)
20404ecc:	fe442783          	lw	a5,-28(s0)
20404ed0:	97ba                	add	a5,a5,a4
20404ed2:	fcf42e23          	sw	a5,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20404ed6:	fcc42783          	lw	a5,-52(s0)
20404eda:	43dc                	lw	a5,4(a5)
20404edc:	853e                	mv	a0,a5
20404ede:	5ce010ef          	jal	ra,204064ac <_metal_clock_call_all_callbacks>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20404ee2:	fdc42783          	lw	a5,-36(s0)
20404ee6:	4398                	lw	a4,0(a5)
20404ee8:	67c1                	lui	a5,0x10
20404eea:	8ff9                	and	a5,a5,a4
20404eec:	cb91                	beqz	a5,20404f00 <__metal_driver_sifive_fe310_g000_pll_init+0x62>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20404eee:	fdc42783          	lw	a5,-36(s0)
20404ef2:	4398                	lw	a4,0(a5)
20404ef4:	77c1                	lui	a5,0xffff0
20404ef6:	17fd                	addi	a5,a5,-1
20404ef8:	8f7d                	and	a4,a4,a5
20404efa:	fdc42783          	lw	a5,-36(s0)
20404efe:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20404f00:	fec42783          	lw	a5,-20(s0)
20404f04:	cb91                	beqz	a5,20404f18 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20404f06:	fdc42783          	lw	a5,-36(s0)
20404f0a:	4398                	lw	a4,0(a5)
20404f0c:	000207b7          	lui	a5,0x20
20404f10:	8f5d                	or	a4,a4,a5
20404f12:	fdc42783          	lw	a5,-36(s0)
20404f16:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20404f18:	fcc42783          	lw	a5,-52(s0)
20404f1c:	439c                	lw	a5,0(a5)
20404f1e:	43d8                	lw	a4,4(a5)
20404f20:	fcc42783          	lw	a5,-52(s0)
20404f24:	fe842583          	lw	a1,-24(s0)
20404f28:	853e                	mv	a0,a5
20404f2a:	9702                	jalr	a4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20404f2c:	fcc42783          	lw	a5,-52(s0)
20404f30:	479c                	lw	a5,8(a5)
20404f32:	853e                	mv	a0,a5
20404f34:	578010ef          	jal	ra,204064ac <_metal_clock_call_all_callbacks>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20404f38:	0001                	nop
20404f3a:	50f2                	lw	ra,60(sp)
20404f3c:	5462                	lw	s0,56(sp)
20404f3e:	6121                	addi	sp,sp,64
20404f40:	8082                	ret

20404f42 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20404f42:	711d                	addi	sp,sp,-96
20404f44:	ce86                	sw	ra,92(sp)
20404f46:	cca2                	sw	s0,88(sp)
20404f48:	1080                	addi	s0,sp,96
20404f4a:	faa42623          	sw	a0,-84(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20404f4e:	fac42503          	lw	a0,-84(s0)
20404f52:	3da9                	jal	20404dac <__metal_driver_sifive_fe310_g000_pll_pllref>
20404f54:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20404f58:	fac42503          	lw	a0,-84(s0)
20404f5c:	3d1d                	jal	20404d92 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20404f5e:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20404f62:	fac42503          	lw	a0,-84(s0)
20404f66:	3d71                	jal	20404e02 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20404f68:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20404f6c:	fac42503          	lw	a0,-84(s0)
20404f70:	3541                	jal	20404df0 <__metal_driver_sifive_fe310_g000_pll_config_base>
20404f72:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20404f76:	fac42503          	lw	a0,-84(s0)
20404f7a:	358d                	jal	20404ddc <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20404f7c:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20404f80:	fac42503          	lw	a0,-84(s0)
20404f84:	3589                	jal	20404dc6 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20404f86:	fca42c23          	sw	a0,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20404f8a:	3d45                	jal	20404e3a <__metal_driver_sifive_fe310_g000_prci_vtable>
20404f8c:	fca42a23          	sw	a0,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
20404f90:	fd442783          	lw	a5,-44(s0)
20404f94:	439c                	lw	a5,0(a5)
20404f96:	fe442583          	lw	a1,-28(s0)
20404f9a:	fe042503          	lw	a0,-32(s0)
20404f9e:	9782                	jalr	a5
20404fa0:	fca42823          	sw	a0,-48(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20404fa4:	fd442783          	lw	a5,-44(s0)
20404fa8:	439c                	lw	a5,0(a5)
20404faa:	fdc42583          	lw	a1,-36(s0)
20404fae:	fd842503          	lw	a0,-40(s0)
20404fb2:	9782                	jalr	a5
20404fb4:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20404fb8:	fd042703          	lw	a4,-48(s0)
20404fbc:	67c1                	lui	a5,0x10
20404fbe:	8f7d                	and	a4,a4,a5
20404fc0:	67c1                	lui	a5,0x10
20404fc2:	00f77863          	bgeu	a4,a5,20404fd2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20404fc6:	fe842503          	lw	a0,-24(s0)
20404fca:	578010ef          	jal	ra,20406542 <metal_clock_get_rate_hz>
20404fce:	87aa                	mv	a5,a0
20404fd0:	a8e1                	j	204050a8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20404fd2:	fd042703          	lw	a4,-48(s0)
20404fd6:	000207b7          	lui	a5,0x20
20404fda:	8f7d                	and	a4,a4,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20404fdc:	000207b7          	lui	a5,0x20
20404fe0:	00f76563          	bltu	a4,a5,20404fea <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20404fe4:	fec42783          	lw	a5,-20(s0)
20404fe8:	a019                	j	20404fee <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20404fea:	fe842783          	lw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20404fee:	853e                	mv	a0,a5
20404ff0:	552010ef          	jal	ra,20406542 <metal_clock_get_rate_hz>
20404ff4:	fca42423          	sw	a0,-56(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20404ff8:	fd042703          	lw	a4,-48(s0)
20404ffc:	000407b7          	lui	a5,0x40
20405000:	8f7d                	and	a4,a4,a5
20405002:	000407b7          	lui	a5,0x40
20405006:	00f76563          	bltu	a4,a5,20405010 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
2040500a:	fc842783          	lw	a5,-56(s0)
2040500e:	a869                	j	204050a8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20405010:	fd042783          	lw	a5,-48(s0)
20405014:	8b9d                	andi	a5,a5,7
20405016:	0785                	addi	a5,a5,1
20405018:	fcf42223          	sw	a5,-60(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
2040501c:	fd042783          	lw	a5,-48(s0)
20405020:	3f07f793          	andi	a5,a5,1008
20405024:	8391                	srli	a5,a5,0x4
20405026:	0785                	addi	a5,a5,1
20405028:	0786                	slli	a5,a5,0x1
2040502a:	fcf42023          	sw	a5,-64(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
2040502e:	fd042703          	lw	a4,-48(s0)
20405032:	6785                	lui	a5,0x1
20405034:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405038:	8f7d                	and	a4,a4,a5
2040503a:	3ff00793          	li	a5,1023
2040503e:	00e7e463          	bltu	a5,a4,20405046 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20405042:	57fd                	li	a5,-1
20405044:	a095                	j	204050a8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20405046:	fd042703          	lw	a4,-48(s0)
2040504a:	6785                	lui	a5,0x1
2040504c:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405050:	8ff9                	and	a5,a5,a4
20405052:	83a9                	srli	a5,a5,0xa
20405054:	4705                	li	a4,1
20405056:	00f717b3          	sll	a5,a4,a5
2040505a:	faf42e23          	sw	a5,-68(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
2040505e:	fc842703          	lw	a4,-56(s0)
20405062:	fc442783          	lw	a5,-60(s0)
20405066:	02f74733          	div	a4,a4,a5
2040506a:	fc042783          	lw	a5,-64(s0)
2040506e:	02f70733          	mul	a4,a4,a5
20405072:	fbc42783          	lw	a5,-68(s0)
20405076:	02f747b3          	div	a5,a4,a5
2040507a:	faf42c23          	sw	a5,-72(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
2040507e:	fcc42783          	lw	a5,-52(s0)
20405082:	1007f713          	andi	a4,a5,256
20405086:	0ff00793          	li	a5,255
2040508a:	00e7f563          	bgeu	a5,a4,20405094 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
2040508e:	fb842783          	lw	a5,-72(s0)
20405092:	a819                	j	204050a8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20405094:	fb842703          	lw	a4,-72(s0)
20405098:	fcc42783          	lw	a5,-52(s0)
2040509c:	03f7f793          	andi	a5,a5,63
204050a0:	0785                	addi	a5,a5,1
204050a2:	0786                	slli	a5,a5,0x1
204050a4:	02f757b3          	divu	a5,a4,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
204050a8:	853e                	mv	a0,a5
204050aa:	40f6                	lw	ra,92(sp)
204050ac:	4466                	lw	s0,88(sp)
204050ae:	6125                	addi	sp,sp,96
204050b0:	8082                	ret

204050b2 <find_closest_config>:
find_closest_config():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
204050b2:	7139                	addi	sp,sp,-64
204050b4:	de06                	sw	ra,60(sp)
204050b6:	dc22                	sw	s0,56(sp)
204050b8:	0080                	addi	s0,sp,64
204050ba:	fca42623          	sw	a0,-52(s0)
204050be:	fcb42423          	sw	a1,-56(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
204050c2:	57fd                	li	a5,-1
204050c4:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
204050c8:	800007b7          	lui	a5,0x80000
204050cc:	fff7c793          	not	a5,a5
204050d0:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
204050d4:	04300793          	li	a5,67
204050d8:	fef42223          	sw	a5,-28(s0)
204050dc:	a0b5                	j	20405148 <find_closest_config+0x96>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
204050de:	fcc42683          	lw	a3,-52(s0)
204050e2:	fe442783          	lw	a5,-28(s0)
204050e6:	00579713          	slli	a4,a5,0x5
204050ea:	204007b7          	lui	a5,0x20400
204050ee:	5e078793          	addi	a5,a5,1504 # 204005e0 <pll_configs>
204050f2:	97ba                	add	a5,a5,a4
204050f4:	85be                	mv	a1,a5
204050f6:	8536                	mv	a0,a3
204050f8:	d59ff0ef          	jal	ra,20404e50 <get_pll_config_freq>
204050fc:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
20405100:	fe042703          	lw	a4,-32(s0)
20405104:	57fd                	li	a5,-1
20405106:	02f70c63          	beq	a4,a5,2040513e <find_closest_config+0x8c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
2040510a:	fe042703          	lw	a4,-32(s0)
2040510e:	fc842783          	lw	a5,-56(s0)
20405112:	8f1d                	sub	a4,a4,a5
20405114:	41f75793          	srai	a5,a4,0x1f
20405118:	8f3d                	xor	a4,a4,a5
2040511a:	40f707b3          	sub	a5,a4,a5
2040511e:	fcf42e23          	sw	a5,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
20405122:	fdc42703          	lw	a4,-36(s0)
20405126:	fe842783          	lw	a5,-24(s0)
2040512a:	00f75a63          	bge	a4,a5,2040513e <find_closest_config+0x8c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
2040512e:	fe442783          	lw	a5,-28(s0)
20405132:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
20405136:	fdc42783          	lw	a5,-36(s0)
2040513a:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
2040513e:	fe442783          	lw	a5,-28(s0)
20405142:	17fd                	addi	a5,a5,-1
20405144:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20405148:	fe442783          	lw	a5,-28(s0)
2040514c:	f807d9e3          	bgez	a5,204050de <find_closest_config+0x2c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
20405150:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
20405154:	853e                	mv	a0,a5
20405156:	50f2                	lw	ra,60(sp)
20405158:	5462                	lw	s0,56(sp)
2040515a:	6121                	addi	sp,sp,64
2040515c:	8082                	ret

2040515e <configure_pll>:
configure_pll():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
2040515e:	7179                	addi	sp,sp,-48
20405160:	d606                	sw	ra,44(sp)
20405162:	d422                	sw	s0,40(sp)
20405164:	1800                	addi	s0,sp,48
20405166:	fca42e23          	sw	a0,-36(s0)
2040516a:	fcb42c23          	sw	a1,-40(s0)
2040516e:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
20405172:	fdc42783          	lw	a5,-36(s0)
20405176:	439c                	lw	a5,0(a5)
20405178:	ff87f713          	andi	a4,a5,-8
2040517c:	fdc42783          	lw	a5,-36(s0)
20405180:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20405182:	fdc42783          	lw	a5,-36(s0)
20405186:	4398                	lw	a4,0(a5)
20405188:	fd442783          	lw	a5,-44(s0)
2040518c:	4b9c                	lw	a5,16(a5)
2040518e:	8b9d                	andi	a5,a5,7
20405190:	8f5d                	or	a4,a4,a5
20405192:	fdc42783          	lw	a5,-36(s0)
20405196:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20405198:	fdc42783          	lw	a5,-36(s0)
2040519c:	439c                	lw	a5,0(a5)
2040519e:	c0f7f713          	andi	a4,a5,-1009
204051a2:	fdc42783          	lw	a5,-36(s0)
204051a6:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
204051a8:	fdc42783          	lw	a5,-36(s0)
204051ac:	4398                	lw	a4,0(a5)
204051ae:	fd442783          	lw	a5,-44(s0)
204051b2:	4bdc                	lw	a5,20(a5)
204051b4:	0792                	slli	a5,a5,0x4
204051b6:	3f07f793          	andi	a5,a5,1008
204051ba:	8f5d                	or	a4,a4,a5
204051bc:	fdc42783          	lw	a5,-36(s0)
204051c0:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
204051c2:	fdc42783          	lw	a5,-36(s0)
204051c6:	4398                	lw	a4,0(a5)
204051c8:	77fd                	lui	a5,0xfffff
204051ca:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdf8f>
204051ce:	8f7d                	and	a4,a4,a5
204051d0:	fdc42783          	lw	a5,-36(s0)
204051d4:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
204051d6:	fdc42783          	lw	a5,-36(s0)
204051da:	4398                	lw	a4,0(a5)
204051dc:	fd442783          	lw	a5,-44(s0)
204051e0:	4f9c                	lw	a5,24(a5)
204051e2:	00a79693          	slli	a3,a5,0xa
204051e6:	6785                	lui	a5,0x1
204051e8:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
204051ec:	8ff5                	and	a5,a5,a3
204051ee:	8f5d                	or	a4,a4,a5
204051f0:	fdc42783          	lw	a5,-36(s0)
204051f4:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
204051f6:	fd442783          	lw	a5,-44(s0)
204051fa:	4fdc                	lw	a5,28(a5)
204051fc:	0207db63          	bgez	a5,20405232 <configure_pll+0xd4>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20405200:	fd842783          	lw	a5,-40(s0)
20405204:	439c                	lw	a5,0(a5)
20405206:	1007e713          	ori	a4,a5,256
2040520a:	fd842783          	lw	a5,-40(s0)
2040520e:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20405210:	fd842783          	lw	a5,-40(s0)
20405214:	439c                	lw	a5,0(a5)
20405216:	fc07f713          	andi	a4,a5,-64
2040521a:	fd842783          	lw	a5,-40(s0)
2040521e:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20405220:	fd842783          	lw	a5,-40(s0)
20405224:	439c                	lw	a5,0(a5)
20405226:	0017e713          	ori	a4,a5,1
2040522a:	fd842783          	lw	a5,-40(s0)
2040522e:	c398                	sw	a4,0(a5)
20405230:	a82d                	j	2040526a <configure_pll+0x10c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20405232:	fd842783          	lw	a5,-40(s0)
20405236:	439c                	lw	a5,0(a5)
20405238:	eff7f713          	andi	a4,a5,-257
2040523c:	fd842783          	lw	a5,-40(s0)
20405240:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20405242:	fd842783          	lw	a5,-40(s0)
20405246:	439c                	lw	a5,0(a5)
20405248:	fc07f713          	andi	a4,a5,-64
2040524c:	fd842783          	lw	a5,-40(s0)
20405250:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20405252:	fd842783          	lw	a5,-40(s0)
20405256:	4398                	lw	a4,0(a5)
20405258:	fd442783          	lw	a5,-44(s0)
2040525c:	4fdc                	lw	a5,28(a5)
2040525e:	03f7f793          	andi	a5,a5,63
20405262:	8f5d                	or	a4,a4,a5
20405264:	fd842783          	lw	a5,-40(s0)
20405268:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
2040526a:	fdc42783          	lw	a5,-36(s0)
2040526e:	4398                	lw	a4,0(a5)
20405270:	fffc07b7          	lui	a5,0xfffc0
20405274:	17fd                	addi	a5,a5,-1
20405276:	8f7d                	and	a4,a4,a5
20405278:	fdc42783          	lw	a5,-36(s0)
2040527c:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
2040527e:	fe040793          	addi	a5,s0,-32
20405282:	863e                	mv	a2,a5
20405284:	4585                	li	a1,1
20405286:	800007b7          	lui	a5,0x80000
2040528a:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
2040528e:	c84fd0ef          	jal	ra,20402712 <__metal_driver_riscv_clint0_command_request>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
20405292:	fe042603          	lw	a2,-32(s0)
20405296:	fe442683          	lw	a3,-28(s0)
2040529a:	4511                	li	a0,4
2040529c:	4581                	li	a1,0
2040529e:	00a60733          	add	a4,a2,a0
204052a2:	883a                	mv	a6,a4
204052a4:	00c83833          	sltu	a6,a6,a2
204052a8:	00b687b3          	add	a5,a3,a1
204052ac:	00f806b3          	add	a3,a6,a5
204052b0:	87b6                	mv	a5,a3
204052b2:	fee42423          	sw	a4,-24(s0)
204052b6:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
204052ba:	a819                	j	204052d0 <configure_pll+0x172>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
204052bc:	fe040793          	addi	a5,s0,-32
204052c0:	863e                	mv	a2,a5
204052c2:	4585                	li	a1,1
204052c4:	800007b7          	lui	a5,0x80000
204052c8:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
204052cc:	c46fd0ef          	jal	ra,20402712 <__metal_driver_riscv_clint0_command_request>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
204052d0:	fe042703          	lw	a4,-32(s0)
204052d4:	fe442783          	lw	a5,-28(s0)
204052d8:	fec42683          	lw	a3,-20(s0)
204052dc:	863e                	mv	a2,a5
204052de:	00c6ec63          	bltu	a3,a2,204052f6 <configure_pll+0x198>
204052e2:	fec42683          	lw	a3,-20(s0)
204052e6:	863e                	mv	a2,a5
204052e8:	fcc69ae3          	bne	a3,a2,204052bc <configure_pll+0x15e>
204052ec:	fe842683          	lw	a3,-24(s0)
204052f0:	87ba                	mv	a5,a4
204052f2:	fcf6f5e3          	bgeu	a3,a5,204052bc <configure_pll+0x15e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
204052f6:	0001                	nop
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
204052f8:	fdc42783          	lw	a5,-36(s0)
204052fc:	439c                	lw	a5,0(a5)
204052fe:	fe07dde3          	bgez	a5,204052f8 <configure_pll+0x19a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
20405302:	0001                	nop
20405304:	0001                	nop
20405306:	50b2                	lw	ra,44(sp)
20405308:	5422                	lw	s0,40(sp)
2040530a:	6145                	addi	sp,sp,48
2040530c:	8082                	ret

2040530e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
2040530e:	715d                	addi	sp,sp,-80
20405310:	c686                	sw	ra,76(sp)
20405312:	c4a2                	sw	s0,72(sp)
20405314:	0880                	addi	s0,sp,80
20405316:	faa42e23          	sw	a0,-68(s0)
2040531a:	fab42c23          	sw	a1,-72(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
2040531e:	fbc42503          	lw	a0,-68(s0)
20405322:	a8bff0ef          	jal	ra,20404dac <__metal_driver_sifive_fe310_g000_pll_pllref>
20405326:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
2040532a:	fbc42503          	lw	a0,-68(s0)
2040532e:	a65ff0ef          	jal	ra,20404d92 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20405332:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20405336:	fbc42503          	lw	a0,-68(s0)
2040533a:	ac9ff0ef          	jal	ra,20404e02 <__metal_driver_sifive_fe310_g000_pll_config_offset>
2040533e:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20405342:	fbc42503          	lw	a0,-68(s0)
20405346:	a97ff0ef          	jal	ra,20404ddc <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2040534a:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
2040534e:	adbff0ef          	jal	ra,20404e28 <__metal_driver_sifive_fe310_g000_prci_base>
20405352:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20405356:	fdc42703          	lw	a4,-36(s0)
2040535a:	fe442783          	lw	a5,-28(s0)
2040535e:	97ba                	add	a5,a5,a4
20405360:	fcf42c23          	sw	a5,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
20405364:	fdc42703          	lw	a4,-36(s0)
20405368:	fe042783          	lw	a5,-32(s0)
2040536c:	97ba                	add	a5,a5,a4
2040536e:	fcf42a23          	sw	a5,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20405372:	fd842783          	lw	a5,-40(s0)
20405376:	4398                	lw	a4,0(a5)
20405378:	67c1                	lui	a5,0x10
2040537a:	8ff9                	and	a5,a5,a4
2040537c:	cb91                	beqz	a5,20405390 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2040537e:	fd842783          	lw	a5,-40(s0)
20405382:	4398                	lw	a4,0(a5)
20405384:	77c1                	lui	a5,0xffff0
20405386:	17fd                	addi	a5,a5,-1
20405388:	8f7d                	and	a4,a4,a5
2040538a:	fd842783          	lw	a5,-40(s0)
2040538e:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20405390:	fd842783          	lw	a5,-40(s0)
20405394:	4398                	lw	a4,0(a5)
20405396:	000207b7          	lui	a5,0x20
2040539a:	8ff9                	and	a5,a5,a4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
2040539c:	c781                	beqz	a5,204053a4 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
2040539e:	fec42783          	lw	a5,-20(s0)
204053a2:	a019                	j	204053a8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
204053a4:	fe842783          	lw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
204053a8:	853e                	mv	a0,a5
204053aa:	198010ef          	jal	ra,20406542 <metal_clock_get_rate_hz>
204053ae:	fca42823          	sw	a0,-48(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
204053b2:	fd042703          	lw	a4,-48(s0)
204053b6:	87ba                	mv	a5,a4
204053b8:	0786                	slli	a5,a5,0x1
204053ba:	97ba                	add	a5,a5,a4
204053bc:	41f7d713          	srai	a4,a5,0x1f
204053c0:	8b0d                	andi	a4,a4,3
204053c2:	97ba                	add	a5,a5,a4
204053c4:	8789                	srai	a5,a5,0x2
204053c6:	873e                	mv	a4,a5
204053c8:	fb842783          	lw	a5,-72(s0)
204053cc:	02e7cb63          	blt	a5,a4,20405402 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
204053d0:	fd042703          	lw	a4,-48(s0)
204053d4:	87ba                	mv	a5,a4
204053d6:	078a                	slli	a5,a5,0x2
204053d8:	97ba                	add	a5,a5,a4
204053da:	41f7d713          	srai	a4,a5,0x1f
204053de:	8b0d                	andi	a4,a4,3
204053e0:	97ba                	add	a5,a5,a4
204053e2:	8789                	srai	a5,a5,0x2
204053e4:	873e                	mv	a4,a5
204053e6:	fb842783          	lw	a5,-72(s0)
204053ea:	00f74c63          	blt	a4,a5,20405402 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
204053ee:	fd842783          	lw	a5,-40(s0)
204053f2:	4398                	lw	a4,0(a5)
204053f4:	000407b7          	lui	a5,0x40
204053f8:	8f5d                	or	a4,a4,a5
204053fa:	fd842783          	lw	a5,-40(s0)
204053fe:	c398                	sw	a4,0(a5)
20405400:	a881                	j	20405450 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
20405402:	fb842583          	lw	a1,-72(s0)
20405406:	fd042503          	lw	a0,-48(s0)
2040540a:	ca9ff0ef          	jal	ra,204050b2 <find_closest_config>
2040540e:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
20405412:	fcc42703          	lw	a4,-52(s0)
20405416:	57fd                	li	a5,-1
20405418:	02f70363          	beq	a4,a5,2040543e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
2040541c:	fcc42783          	lw	a5,-52(s0)
20405420:	00579713          	slli	a4,a5,0x5
20405424:	204007b7          	lui	a5,0x20400
20405428:	5e078793          	addi	a5,a5,1504 # 204005e0 <pll_configs>
2040542c:	97ba                	add	a5,a5,a4
2040542e:	863e                	mv	a2,a5
20405430:	fd442583          	lw	a1,-44(s0)
20405434:	fd842503          	lw	a0,-40(s0)
20405438:	d27ff0ef          	jal	ra,2040515e <configure_pll>
2040543c:	a811                	j	20405450 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
2040543e:	fd842783          	lw	a5,-40(s0)
20405442:	4398                	lw	a4,0(a5)
20405444:	000407b7          	lui	a5,0x40
20405448:	8f5d                	or	a4,a4,a5
2040544a:	fd842783          	lw	a5,-40(s0)
2040544e:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20405450:	fd842783          	lw	a5,-40(s0)
20405454:	4398                	lw	a4,0(a5)
20405456:	67c1                	lui	a5,0x10
20405458:	8f5d                	or	a4,a4,a5
2040545a:	fd842783          	lw	a5,-40(s0)
2040545e:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20405460:	fbc42503          	lw	a0,-68(s0)
20405464:	adfff0ef          	jal	ra,20404f42 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20405468:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
2040546a:	853e                	mv	a0,a5
2040546c:	40b6                	lw	ra,76(sp)
2040546e:	4426                	lw	s0,72(sp)
20405470:	6161                	addi	sp,sp,80
20405472:	8082                	ret

20405474 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1159
{
20405474:	1141                	addi	sp,sp,-16
20405476:	c622                	sw	s0,12(sp)
20405478:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
2040547a:	100087b7          	lui	a5,0x10008
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:1161
}
2040547e:	853e                	mv	a0,a5
20405480:	4432                	lw	s0,12(sp)
20405482:	0141                	addi	sp,sp,16
20405484:	8082                	ret

20405486 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20405486:	7179                	addi	sp,sp,-48
20405488:	d606                	sw	ra,44(sp)
2040548a:	d422                	sw	s0,40(sp)
2040548c:	1800                	addi	s0,sp,48
2040548e:	fca42e23          	sw	a0,-36(s0)
20405492:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20405496:	3ff9                	jal	20405474 <__metal_driver_sifive_fe310_g000_prci_base>
20405498:	87aa                	mv	a5,a0
2040549a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
2040549e:	fd842703          	lw	a4,-40(s0)
204054a2:	fec42783          	lw	a5,-20(s0)
204054a6:	97ba                	add	a5,a5,a4
204054a8:	439c                	lw	a5,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
204054aa:	853e                	mv	a0,a5
204054ac:	50b2                	lw	ra,44(sp)
204054ae:	5422                	lw	s0,40(sp)
204054b0:	6145                	addi	sp,sp,48
204054b2:	8082                	ret

204054b4 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
204054b4:	7179                	addi	sp,sp,-48
204054b6:	d606                	sw	ra,44(sp)
204054b8:	d422                	sw	s0,40(sp)
204054ba:	1800                	addi	s0,sp,48
204054bc:	fca42e23          	sw	a0,-36(s0)
204054c0:	fcb42c23          	sw	a1,-40(s0)
204054c4:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
204054c8:	3775                	jal	20405474 <__metal_driver_sifive_fe310_g000_prci_base>
204054ca:	87aa                	mv	a5,a0
204054cc:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
204054d0:	fd842703          	lw	a4,-40(s0)
204054d4:	fec42783          	lw	a5,-20(s0)
204054d8:	97ba                	add	a5,a5,a4
204054da:	873e                	mv	a4,a5
204054dc:	fd442783          	lw	a5,-44(s0)
204054e0:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
204054e2:	853e                	mv	a0,a5
204054e4:	50b2                	lw	ra,44(sp)
204054e6:	5422                	lw	s0,40(sp)
204054e8:	6145                	addi	sp,sp,48
204054ea:	8082                	ret

204054ec <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:474
{
204054ec:	1101                	addi	sp,sp,-32
204054ee:	ce22                	sw	s0,28(sp)
204054f0:	1000                	addi	s0,sp,32
204054f2:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:475
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
204054f6:	fec42703          	lw	a4,-20(s0)
204054fa:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204054fe:	00f71563          	bne	a4,a5,20405508 <__metal_driver_sifive_gpio0_base+0x1c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:476
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20405502:	100127b7          	lui	a5,0x10012
20405506:	a011                	j	2040550a <__metal_driver_sifive_gpio0_base+0x1e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:479
		return 0;
20405508:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:481
}
2040550a:	853e                	mv	a0,a5
2040550c:	4472                	lw	s0,28(sp)
2040550e:	6105                	addi	sp,sp,32
20405510:	8082                	ret

20405512 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:504
{
20405512:	1101                	addi	sp,sp,-32
20405514:	ce22                	sw	s0,28(sp)
20405516:	1000                	addi	s0,sp,32
20405518:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:505
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
2040551c:	fec42703          	lw	a4,-20(s0)
20405520:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405524:	00f71763          	bne	a4,a5,20405532 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:506
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20405528:	800007b7          	lui	a5,0x80000
2040552c:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffefe8>
20405530:	a011                	j	20405534 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:509
		return 0;
20405532:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:511
}
20405534:	853e                	mv	a0,a5
20405536:	4472                	lw	s0,28(sp)
20405538:	6105                	addi	sp,sp,32
2040553a:	8082                	ret

2040553c <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:514
{
2040553c:	1101                	addi	sp,sp,-32
2040553e:	ce22                	sw	s0,28(sp)
20405540:	1000                	addi	s0,sp,32
20405542:	fea42623          	sw	a0,-20(s0)
20405546:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:515
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
2040554a:	fec42703          	lw	a4,-20(s0)
2040554e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405552:	00f71763          	bne	a4,a5,20405560 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:515 (discriminator 1)
20405556:	fe842783          	lw	a5,-24(s0)
2040555a:	e399                	bnez	a5,20405560 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:516
		return 7;
2040555c:	479d                	li	a5,7
2040555e:	a269                	j	204056e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:518
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20405560:	fec42703          	lw	a4,-20(s0)
20405564:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405568:	00f71963          	bne	a4,a5,2040557a <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:518 (discriminator 1)
2040556c:	fe842703          	lw	a4,-24(s0)
20405570:	4785                	li	a5,1
20405572:	00f71463          	bne	a4,a5,2040557a <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:519
		return 8;
20405576:	47a1                	li	a5,8
20405578:	aa85                	j	204056e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:521
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
2040557a:	fec42703          	lw	a4,-20(s0)
2040557e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405582:	00f71963          	bne	a4,a5,20405594 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:521 (discriminator 1)
20405586:	fe842703          	lw	a4,-24(s0)
2040558a:	4789                	li	a5,2
2040558c:	00f71463          	bne	a4,a5,20405594 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:522
		return 9;
20405590:	47a5                	li	a5,9
20405592:	aa99                	j	204056e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:524
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20405594:	fec42703          	lw	a4,-20(s0)
20405598:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040559c:	00f71963          	bne	a4,a5,204055ae <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:524 (discriminator 1)
204055a0:	fe842703          	lw	a4,-24(s0)
204055a4:	478d                	li	a5,3
204055a6:	00f71463          	bne	a4,a5,204055ae <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:525
		return 10;
204055aa:	47a9                	li	a5,10
204055ac:	aa35                	j	204056e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:527
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
204055ae:	fec42703          	lw	a4,-20(s0)
204055b2:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204055b6:	00f71963          	bne	a4,a5,204055c8 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:527 (discriminator 1)
204055ba:	fe842703          	lw	a4,-24(s0)
204055be:	4791                	li	a5,4
204055c0:	00f71463          	bne	a4,a5,204055c8 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:528
		return 11;
204055c4:	47ad                	li	a5,11
204055c6:	a20d                	j	204056e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:530
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
204055c8:	fec42703          	lw	a4,-20(s0)
204055cc:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204055d0:	00f71963          	bne	a4,a5,204055e2 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:530 (discriminator 1)
204055d4:	fe842703          	lw	a4,-24(s0)
204055d8:	4795                	li	a5,5
204055da:	00f71463          	bne	a4,a5,204055e2 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:531
		return 12;
204055de:	47b1                	li	a5,12
204055e0:	a221                	j	204056e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:533
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
204055e2:	fec42703          	lw	a4,-20(s0)
204055e6:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204055ea:	00f71963          	bne	a4,a5,204055fc <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:533 (discriminator 1)
204055ee:	fe842703          	lw	a4,-24(s0)
204055f2:	4799                	li	a5,6
204055f4:	00f71463          	bne	a4,a5,204055fc <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:534
		return 13;
204055f8:	47b5                	li	a5,13
204055fa:	a0fd                	j	204056e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:536
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
204055fc:	fec42703          	lw	a4,-20(s0)
20405600:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405604:	00f71963          	bne	a4,a5,20405616 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:536 (discriminator 1)
20405608:	fe842703          	lw	a4,-24(s0)
2040560c:	479d                	li	a5,7
2040560e:	00f71463          	bne	a4,a5,20405616 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:537
		return 14;
20405612:	47b9                	li	a5,14
20405614:	a8d1                	j	204056e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:539
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
20405616:	fec42703          	lw	a4,-20(s0)
2040561a:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040561e:	00f71963          	bne	a4,a5,20405630 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:539 (discriminator 1)
20405622:	fe842703          	lw	a4,-24(s0)
20405626:	47a1                	li	a5,8
20405628:	00f71463          	bne	a4,a5,20405630 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:540
		return 15;
2040562c:	47bd                	li	a5,15
2040562e:	a86d                	j	204056e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:542
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20405630:	fec42703          	lw	a4,-20(s0)
20405634:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405638:	00f71963          	bne	a4,a5,2040564a <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:542 (discriminator 1)
2040563c:	fe842703          	lw	a4,-24(s0)
20405640:	47a5                	li	a5,9
20405642:	00f71463          	bne	a4,a5,2040564a <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:543
		return 16;
20405646:	47c1                	li	a5,16
20405648:	a045                	j	204056e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:545
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
2040564a:	fec42703          	lw	a4,-20(s0)
2040564e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405652:	00f71963          	bne	a4,a5,20405664 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:545 (discriminator 1)
20405656:	fe842703          	lw	a4,-24(s0)
2040565a:	47a9                	li	a5,10
2040565c:	00f71463          	bne	a4,a5,20405664 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:546
		return 17;
20405660:	47c5                	li	a5,17
20405662:	a059                	j	204056e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:548
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20405664:	fec42703          	lw	a4,-20(s0)
20405668:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040566c:	00f71963          	bne	a4,a5,2040567e <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:548 (discriminator 1)
20405670:	fe842703          	lw	a4,-24(s0)
20405674:	47ad                	li	a5,11
20405676:	00f71463          	bne	a4,a5,2040567e <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:549
		return 18;
2040567a:	47c9                	li	a5,18
2040567c:	a0b5                	j	204056e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:551
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
2040567e:	fec42703          	lw	a4,-20(s0)
20405682:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405686:	00f71963          	bne	a4,a5,20405698 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:551 (discriminator 1)
2040568a:	fe842703          	lw	a4,-24(s0)
2040568e:	47b1                	li	a5,12
20405690:	00f71463          	bne	a4,a5,20405698 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:552
		return 19;
20405694:	47cd                	li	a5,19
20405696:	a889                	j	204056e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:554
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20405698:	fec42703          	lw	a4,-20(s0)
2040569c:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204056a0:	00f71963          	bne	a4,a5,204056b2 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:554 (discriminator 1)
204056a4:	fe842703          	lw	a4,-24(s0)
204056a8:	47b5                	li	a5,13
204056aa:	00f71463          	bne	a4,a5,204056b2 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:555
		return 20;
204056ae:	47d1                	li	a5,20
204056b0:	a825                	j	204056e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:557
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
204056b2:	fec42703          	lw	a4,-20(s0)
204056b6:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204056ba:	00f71963          	bne	a4,a5,204056cc <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:557 (discriminator 1)
204056be:	fe842703          	lw	a4,-24(s0)
204056c2:	47b9                	li	a5,14
204056c4:	00f71463          	bne	a4,a5,204056cc <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:558
		return 21;
204056c8:	47d5                	li	a5,21
204056ca:	a839                	j	204056e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:560
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
204056cc:	fec42703          	lw	a4,-20(s0)
204056d0:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204056d4:	00f71963          	bne	a4,a5,204056e6 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:560 (discriminator 1)
204056d8:	fe842703          	lw	a4,-24(s0)
204056dc:	47bd                	li	a5,15
204056de:	00f71463          	bne	a4,a5,204056e6 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:561
		return 22;
204056e2:	47d9                	li	a5,22
204056e4:	a011                	j	204056e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:564
		return 0;
204056e6:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:566
}
204056e8:	853e                	mv	a0,a5
204056ea:	4472                	lw	s0,28(sp)
204056ec:	6105                	addi	sp,sp,32
204056ee:	8082                	ret

204056f0 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
204056f0:	7179                	addi	sp,sp,-48
204056f2:	d606                	sw	ra,44(sp)
204056f4:	d422                	sw	s0,40(sp)
204056f6:	1800                	addi	s0,sp,48
204056f8:	fca42e23          	sw	a0,-36(s0)
204056fc:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405700:	fdc42503          	lw	a0,-36(s0)
20405704:	de9ff0ef          	jal	ra,204054ec <__metal_driver_sifive_gpio0_base>
20405708:	87aa                	mv	a5,a0
2040570a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
2040570e:	fec42783          	lw	a5,-20(s0)
20405712:	0791                	addi	a5,a5,4
20405714:	4398                	lw	a4,0(a5)
20405716:	fd842783          	lw	a5,-40(s0)
2040571a:	fec42683          	lw	a3,-20(s0)
2040571e:	0691                	addi	a3,a3,4
20405720:	8fd9                	or	a5,a5,a4
20405722:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
20405724:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:20
}
20405726:	853e                	mv	a0,a5
20405728:	50b2                	lw	ra,44(sp)
2040572a:	5422                	lw	s0,40(sp)
2040572c:	6145                	addi	sp,sp,48
2040572e:	8082                	ret

20405730 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20405730:	7179                	addi	sp,sp,-48
20405732:	d606                	sw	ra,44(sp)
20405734:	d422                	sw	s0,40(sp)
20405736:	1800                	addi	s0,sp,48
20405738:	fca42e23          	sw	a0,-36(s0)
2040573c:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405740:	fdc42503          	lw	a0,-36(s0)
20405744:	da9ff0ef          	jal	ra,204054ec <__metal_driver_sifive_gpio0_base>
20405748:	87aa                	mv	a5,a0
2040574a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
2040574e:	fec42783          	lw	a5,-20(s0)
20405752:	0791                	addi	a5,a5,4
20405754:	439c                	lw	a5,0(a5)
20405756:	fd842703          	lw	a4,-40(s0)
2040575a:	fff74713          	not	a4,a4
2040575e:	86ba                	mv	a3,a4
20405760:	fec42703          	lw	a4,-20(s0)
20405764:	0711                	addi	a4,a4,4
20405766:	8ff5                	and	a5,a5,a3
20405768:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
2040576a:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:30
}
2040576c:	853e                	mv	a0,a5
2040576e:	50b2                	lw	ra,44(sp)
20405770:	5422                	lw	s0,40(sp)
20405772:	6145                	addi	sp,sp,48
20405774:	8082                	ret

20405776 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20405776:	7179                	addi	sp,sp,-48
20405778:	d606                	sw	ra,44(sp)
2040577a:	d422                	sw	s0,40(sp)
2040577c:	1800                	addi	s0,sp,48
2040577e:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405782:	fdc42503          	lw	a0,-36(s0)
20405786:	d67ff0ef          	jal	ra,204054ec <__metal_driver_sifive_gpio0_base>
2040578a:	87aa                	mv	a5,a0
2040578c:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20405790:	fec42783          	lw	a5,-20(s0)
20405794:	439c                	lw	a5,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20405796:	853e                	mv	a0,a5
20405798:	50b2                	lw	ra,44(sp)
2040579a:	5422                	lw	s0,40(sp)
2040579c:	6145                	addi	sp,sp,48
2040579e:	8082                	ret

204057a0 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
204057a0:	7179                	addi	sp,sp,-48
204057a2:	d606                	sw	ra,44(sp)
204057a4:	d422                	sw	s0,40(sp)
204057a6:	1800                	addi	s0,sp,48
204057a8:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204057ac:	fdc42503          	lw	a0,-36(s0)
204057b0:	d3dff0ef          	jal	ra,204054ec <__metal_driver_sifive_gpio0_base>
204057b4:	87aa                	mv	a5,a0
204057b6:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
204057ba:	fec42783          	lw	a5,-20(s0)
204057be:	07b1                	addi	a5,a5,12
204057c0:	439c                	lw	a5,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
204057c2:	853e                	mv	a0,a5
204057c4:	50b2                	lw	ra,44(sp)
204057c6:	5422                	lw	s0,40(sp)
204057c8:	6145                	addi	sp,sp,48
204057ca:	8082                	ret

204057cc <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
204057cc:	7179                	addi	sp,sp,-48
204057ce:	d606                	sw	ra,44(sp)
204057d0:	d422                	sw	s0,40(sp)
204057d2:	1800                	addi	s0,sp,48
204057d4:	fca42e23          	sw	a0,-36(s0)
204057d8:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204057dc:	fdc42503          	lw	a0,-36(s0)
204057e0:	d0dff0ef          	jal	ra,204054ec <__metal_driver_sifive_gpio0_base>
204057e4:	87aa                	mv	a5,a0
204057e6:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
204057ea:	fec42783          	lw	a5,-20(s0)
204057ee:	07a1                	addi	a5,a5,8
204057f0:	439c                	lw	a5,0(a5)
204057f2:	fd842703          	lw	a4,-40(s0)
204057f6:	fff74713          	not	a4,a4
204057fa:	86ba                	mv	a3,a4
204057fc:	fec42703          	lw	a4,-20(s0)
20405800:	0721                	addi	a4,a4,8
20405802:	8ff5                	and	a5,a5,a3
20405804:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20405806:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20405808:	853e                	mv	a0,a5
2040580a:	50b2                	lw	ra,44(sp)
2040580c:	5422                	lw	s0,40(sp)
2040580e:	6145                	addi	sp,sp,48
20405810:	8082                	ret

20405812 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
20405812:	7179                	addi	sp,sp,-48
20405814:	d606                	sw	ra,44(sp)
20405816:	d422                	sw	s0,40(sp)
20405818:	1800                	addi	s0,sp,48
2040581a:	fca42e23          	sw	a0,-36(s0)
2040581e:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405822:	fdc42503          	lw	a0,-36(s0)
20405826:	cc7ff0ef          	jal	ra,204054ec <__metal_driver_sifive_gpio0_base>
2040582a:	87aa                	mv	a5,a0
2040582c:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20405830:	fec42783          	lw	a5,-20(s0)
20405834:	07a1                	addi	a5,a5,8
20405836:	4398                	lw	a4,0(a5)
20405838:	fd842783          	lw	a5,-40(s0)
2040583c:	fec42683          	lw	a3,-20(s0)
20405840:	06a1                	addi	a3,a3,8
20405842:	8fd9                	or	a5,a5,a4
20405844:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
20405846:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:64
}
20405848:	853e                	mv	a0,a5
2040584a:	50b2                	lw	ra,44(sp)
2040584c:	5422                	lw	s0,40(sp)
2040584e:	6145                	addi	sp,sp,48
20405850:	8082                	ret

20405852 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
20405852:	7179                	addi	sp,sp,-48
20405854:	d606                	sw	ra,44(sp)
20405856:	d422                	sw	s0,40(sp)
20405858:	1800                	addi	s0,sp,48
2040585a:	fca42e23          	sw	a0,-36(s0)
2040585e:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405862:	fdc42503          	lw	a0,-36(s0)
20405866:	c87ff0ef          	jal	ra,204054ec <__metal_driver_sifive_gpio0_base>
2040586a:	87aa                	mv	a5,a0
2040586c:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20405870:	fec42783          	lw	a5,-20(s0)
20405874:	07b1                	addi	a5,a5,12
20405876:	4398                	lw	a4,0(a5)
20405878:	fd842783          	lw	a5,-40(s0)
2040587c:	fec42683          	lw	a3,-20(s0)
20405880:	06b1                	addi	a3,a3,12
20405882:	8fd9                	or	a5,a5,a4
20405884:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20405886:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20405888:	853e                	mv	a0,a5
2040588a:	50b2                	lw	ra,44(sp)
2040588c:	5422                	lw	s0,40(sp)
2040588e:	6145                	addi	sp,sp,48
20405890:	8082                	ret

20405892 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
20405892:	7179                	addi	sp,sp,-48
20405894:	d606                	sw	ra,44(sp)
20405896:	d422                	sw	s0,40(sp)
20405898:	1800                	addi	s0,sp,48
2040589a:	fca42e23          	sw	a0,-36(s0)
2040589e:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204058a2:	fdc42503          	lw	a0,-36(s0)
204058a6:	c47ff0ef          	jal	ra,204054ec <__metal_driver_sifive_gpio0_base>
204058aa:	87aa                	mv	a5,a0
204058ac:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
204058b0:	fec42783          	lw	a5,-20(s0)
204058b4:	07b1                	addi	a5,a5,12
204058b6:	439c                	lw	a5,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
204058b8:	fd842703          	lw	a4,-40(s0)
204058bc:	fff74713          	not	a4,a4
204058c0:	86ba                	mv	a3,a4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
204058c2:	fec42703          	lw	a4,-20(s0)
204058c6:	0731                	addi	a4,a4,12
204058c8:	8ff5                	and	a5,a5,a3
204058ca:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
204058cc:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:84
}
204058ce:	853e                	mv	a0,a5
204058d0:	50b2                	lw	ra,44(sp)
204058d2:	5422                	lw	s0,40(sp)
204058d4:	6145                	addi	sp,sp,48
204058d6:	8082                	ret

204058d8 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
204058d8:	7179                	addi	sp,sp,-48
204058da:	d606                	sw	ra,44(sp)
204058dc:	d422                	sw	s0,40(sp)
204058de:	1800                	addi	s0,sp,48
204058e0:	fca42e23          	sw	a0,-36(s0)
204058e4:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204058e8:	fdc42503          	lw	a0,-36(s0)
204058ec:	c01ff0ef          	jal	ra,204054ec <__metal_driver_sifive_gpio0_base>
204058f0:	87aa                	mv	a5,a0
204058f2:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
204058f6:	fec42783          	lw	a5,-20(s0)
204058fa:	07b1                	addi	a5,a5,12
204058fc:	4398                	lw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
204058fe:	fd842783          	lw	a5,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20405902:	fec42683          	lw	a3,-20(s0)
20405906:	06b1                	addi	a3,a3,12
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20405908:	8fb9                	xor	a5,a5,a4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
2040590a:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
2040590c:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:96
}
2040590e:	853e                	mv	a0,a5
20405910:	50b2                	lw	ra,44(sp)
20405912:	5422                	lw	s0,40(sp)
20405914:	6145                	addi	sp,sp,48
20405916:	8082                	ret

20405918 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20405918:	7179                	addi	sp,sp,-48
2040591a:	d606                	sw	ra,44(sp)
2040591c:	d422                	sw	s0,40(sp)
2040591e:	1800                	addi	s0,sp,48
20405920:	fca42e23          	sw	a0,-36(s0)
20405924:	fcb42c23          	sw	a1,-40(s0)
20405928:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040592c:	fdc42503          	lw	a0,-36(s0)
20405930:	bbdff0ef          	jal	ra,204054ec <__metal_driver_sifive_gpio0_base>
20405934:	87aa                	mv	a5,a0
20405936:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
2040593a:	fec42783          	lw	a5,-20(s0)
2040593e:	03c78793          	addi	a5,a5,60
20405942:	4398                	lw	a4,0(a5)
20405944:	fd842783          	lw	a5,-40(s0)
20405948:	fec42683          	lw	a3,-20(s0)
2040594c:	03c68693          	addi	a3,a3,60
20405950:	8fd9                	or	a5,a5,a4
20405952:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
20405954:	fec42783          	lw	a5,-20(s0)
20405958:	03878793          	addi	a5,a5,56
2040595c:	4398                	lw	a4,0(a5)
2040595e:	fd442783          	lw	a5,-44(s0)
20405962:	fec42683          	lw	a3,-20(s0)
20405966:	03868693          	addi	a3,a3,56
2040596a:	8fd9                	or	a5,a5,a4
2040596c:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
2040596e:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20405970:	853e                	mv	a0,a5
20405972:	50b2                	lw	ra,44(sp)
20405974:	5422                	lw	s0,40(sp)
20405976:	6145                	addi	sp,sp,48
20405978:	8082                	ret

2040597a <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
2040597a:	7179                	addi	sp,sp,-48
2040597c:	d606                	sw	ra,44(sp)
2040597e:	d422                	sw	s0,40(sp)
20405980:	1800                	addi	s0,sp,48
20405982:	fca42e23          	sw	a0,-36(s0)
20405986:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040598a:	fdc42503          	lw	a0,-36(s0)
2040598e:	b5fff0ef          	jal	ra,204054ec <__metal_driver_sifive_gpio0_base>
20405992:	87aa                	mv	a5,a0
20405994:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20405998:	fec42783          	lw	a5,-20(s0)
2040599c:	03878793          	addi	a5,a5,56
204059a0:	439c                	lw	a5,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
204059a2:	fd842703          	lw	a4,-40(s0)
204059a6:	fff74713          	not	a4,a4
204059aa:	86ba                	mv	a3,a4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
204059ac:	fec42703          	lw	a4,-20(s0)
204059b0:	03870713          	addi	a4,a4,56
204059b4:	8ff5                	and	a5,a5,a3
204059b6:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
204059b8:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:118
}
204059ba:	853e                	mv	a0,a5
204059bc:	50b2                	lw	ra,44(sp)
204059be:	5422                	lw	s0,40(sp)
204059c0:	6145                	addi	sp,sp,48
204059c2:	8082                	ret

204059c4 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
204059c4:	7179                	addi	sp,sp,-48
204059c6:	d606                	sw	ra,44(sp)
204059c8:	d422                	sw	s0,40(sp)
204059ca:	1800                	addi	s0,sp,48
204059cc:	fca42e23          	sw	a0,-36(s0)
204059d0:	fcb42c23          	sw	a1,-40(s0)
204059d4:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204059d8:	fdc42503          	lw	a0,-36(s0)
204059dc:	b11ff0ef          	jal	ra,204054ec <__metal_driver_sifive_gpio0_base>
204059e0:	87aa                	mv	a5,a0
204059e2:	fef42623          	sw	a5,-20(s0)
204059e6:	fd442703          	lw	a4,-44(s0)
204059ea:	479d                	li	a5,7
204059ec:	1ce7e963          	bltu	a5,a4,20405bbe <__metal_driver_sifive_gpio0_config_int+0x1fa>
204059f0:	fd442783          	lw	a5,-44(s0)
204059f4:	00279713          	slli	a4,a5,0x2
204059f8:	204017b7          	lui	a5,0x20401
204059fc:	e6c78793          	addi	a5,a5,-404 # 20400e6c <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20405a00:	97ba                	add	a5,a5,a4
20405a02:	439c                	lw	a5,0(a5)
20405a04:	8782                	jr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:127

    switch (intr_type) {
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20405a06:	fec42783          	lw	a5,-20(s0)
20405a0a:	07e1                	addi	a5,a5,24
20405a0c:	439c                	lw	a5,0(a5)
20405a0e:	fd842703          	lw	a4,-40(s0)
20405a12:	fff74713          	not	a4,a4
20405a16:	86ba                	mv	a3,a4
20405a18:	fec42703          	lw	a4,-20(s0)
20405a1c:	0761                	addi	a4,a4,24
20405a1e:	8ff5                	and	a5,a5,a3
20405a20:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
20405a22:	fec42783          	lw	a5,-20(s0)
20405a26:	02078793          	addi	a5,a5,32
20405a2a:	439c                	lw	a5,0(a5)
20405a2c:	fd842703          	lw	a4,-40(s0)
20405a30:	fff74713          	not	a4,a4
20405a34:	86ba                	mv	a3,a4
20405a36:	fec42703          	lw	a4,-20(s0)
20405a3a:	02070713          	addi	a4,a4,32
20405a3e:	8ff5                	and	a5,a5,a3
20405a40:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
20405a42:	fec42783          	lw	a5,-20(s0)
20405a46:	02878793          	addi	a5,a5,40
20405a4a:	439c                	lw	a5,0(a5)
20405a4c:	fd842703          	lw	a4,-40(s0)
20405a50:	fff74713          	not	a4,a4
20405a54:	86ba                	mv	a3,a4
20405a56:	fec42703          	lw	a4,-20(s0)
20405a5a:	02870713          	addi	a4,a4,40
20405a5e:	8ff5                	and	a5,a5,a3
20405a60:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
20405a62:	fec42783          	lw	a5,-20(s0)
20405a66:	03078793          	addi	a5,a5,48
20405a6a:	439c                	lw	a5,0(a5)
20405a6c:	fd842703          	lw	a4,-40(s0)
20405a70:	fff74713          	not	a4,a4
20405a74:	86ba                	mv	a3,a4
20405a76:	fec42703          	lw	a4,-20(s0)
20405a7a:	03070713          	addi	a4,a4,48
20405a7e:	8ff5                	and	a5,a5,a3
20405a80:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20405a82:	aa35                	j	20405bbe <__metal_driver_sifive_gpio0_config_int+0x1fa>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20405a84:	fec42783          	lw	a5,-20(s0)
20405a88:	07e1                	addi	a5,a5,24
20405a8a:	4398                	lw	a4,0(a5)
20405a8c:	fd842783          	lw	a5,-40(s0)
20405a90:	fec42683          	lw	a3,-20(s0)
20405a94:	06e1                	addi	a3,a3,24
20405a96:	8fd9                	or	a5,a5,a4
20405a98:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20405a9a:	a215                	j	20405bbe <__metal_driver_sifive_gpio0_config_int+0x1fa>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20405a9c:	fec42783          	lw	a5,-20(s0)
20405aa0:	02078793          	addi	a5,a5,32
20405aa4:	4398                	lw	a4,0(a5)
20405aa6:	fd842783          	lw	a5,-40(s0)
20405aaa:	fec42683          	lw	a3,-20(s0)
20405aae:	02068693          	addi	a3,a3,32
20405ab2:	8fd9                	or	a5,a5,a4
20405ab4:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
20405ab6:	a221                	j	20405bbe <__metal_driver_sifive_gpio0_config_int+0x1fa>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20405ab8:	fec42783          	lw	a5,-20(s0)
20405abc:	07e1                	addi	a5,a5,24
20405abe:	4398                	lw	a4,0(a5)
20405ac0:	fd842783          	lw	a5,-40(s0)
20405ac4:	fec42683          	lw	a3,-20(s0)
20405ac8:	06e1                	addi	a3,a3,24
20405aca:	8fd9                	or	a5,a5,a4
20405acc:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20405ace:	fec42783          	lw	a5,-20(s0)
20405ad2:	02078793          	addi	a5,a5,32
20405ad6:	4398                	lw	a4,0(a5)
20405ad8:	fd842783          	lw	a5,-40(s0)
20405adc:	fec42683          	lw	a3,-20(s0)
20405ae0:	02068693          	addi	a3,a3,32
20405ae4:	8fd9                	or	a5,a5,a4
20405ae6:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20405ae8:	a8d9                	j	20405bbe <__metal_driver_sifive_gpio0_config_int+0x1fa>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20405aea:	fec42783          	lw	a5,-20(s0)
20405aee:	02878793          	addi	a5,a5,40
20405af2:	4398                	lw	a4,0(a5)
20405af4:	fd842783          	lw	a5,-40(s0)
20405af8:	fec42683          	lw	a3,-20(s0)
20405afc:	02868693          	addi	a3,a3,40
20405b00:	8fd9                	or	a5,a5,a4
20405b02:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20405b04:	a86d                	j	20405bbe <__metal_driver_sifive_gpio0_config_int+0x1fa>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20405b06:	fec42783          	lw	a5,-20(s0)
20405b0a:	03078793          	addi	a5,a5,48
20405b0e:	4398                	lw	a4,0(a5)
20405b10:	fd842783          	lw	a5,-40(s0)
20405b14:	fec42683          	lw	a3,-20(s0)
20405b18:	03068693          	addi	a3,a3,48
20405b1c:	8fd9                	or	a5,a5,a4
20405b1e:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
20405b20:	a879                	j	20405bbe <__metal_driver_sifive_gpio0_config_int+0x1fa>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20405b22:	fec42783          	lw	a5,-20(s0)
20405b26:	02878793          	addi	a5,a5,40
20405b2a:	4398                	lw	a4,0(a5)
20405b2c:	fd842783          	lw	a5,-40(s0)
20405b30:	fec42683          	lw	a3,-20(s0)
20405b34:	02868693          	addi	a3,a3,40
20405b38:	8fd9                	or	a5,a5,a4
20405b3a:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20405b3c:	fec42783          	lw	a5,-20(s0)
20405b40:	03078793          	addi	a5,a5,48
20405b44:	4398                	lw	a4,0(a5)
20405b46:	fd842783          	lw	a5,-40(s0)
20405b4a:	fec42683          	lw	a3,-20(s0)
20405b4e:	03068693          	addi	a3,a3,48
20405b52:	8fd9                	or	a5,a5,a4
20405b54:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
20405b56:	a0a5                	j	20405bbe <__metal_driver_sifive_gpio0_config_int+0x1fa>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20405b58:	fec42783          	lw	a5,-20(s0)
20405b5c:	07e1                	addi	a5,a5,24
20405b5e:	4398                	lw	a4,0(a5)
20405b60:	fd842783          	lw	a5,-40(s0)
20405b64:	fec42683          	lw	a3,-20(s0)
20405b68:	06e1                	addi	a3,a3,24
20405b6a:	8fd9                	or	a5,a5,a4
20405b6c:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20405b6e:	fec42783          	lw	a5,-20(s0)
20405b72:	02078793          	addi	a5,a5,32
20405b76:	4398                	lw	a4,0(a5)
20405b78:	fd842783          	lw	a5,-40(s0)
20405b7c:	fec42683          	lw	a3,-20(s0)
20405b80:	02068693          	addi	a3,a3,32
20405b84:	8fd9                	or	a5,a5,a4
20405b86:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20405b88:	fec42783          	lw	a5,-20(s0)
20405b8c:	02878793          	addi	a5,a5,40
20405b90:	4398                	lw	a4,0(a5)
20405b92:	fd842783          	lw	a5,-40(s0)
20405b96:	fec42683          	lw	a3,-20(s0)
20405b9a:	02868693          	addi	a3,a3,40
20405b9e:	8fd9                	or	a5,a5,a4
20405ba0:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20405ba2:	fec42783          	lw	a5,-20(s0)
20405ba6:	03078793          	addi	a5,a5,48
20405baa:	4398                	lw	a4,0(a5)
20405bac:	fd842783          	lw	a5,-40(s0)
20405bb0:	fec42683          	lw	a3,-20(s0)
20405bb4:	03068693          	addi	a3,a3,48
20405bb8:	8fd9                	or	a5,a5,a4
20405bba:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
20405bbc:	0001                	nop
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
20405bbe:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:175
}
20405bc0:	853e                	mv	a0,a5
20405bc2:	50b2                	lw	ra,44(sp)
20405bc4:	5422                	lw	s0,40(sp)
20405bc6:	6145                	addi	sp,sp,48
20405bc8:	8082                	ret

20405bca <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
20405bca:	7179                	addi	sp,sp,-48
20405bcc:	d606                	sw	ra,44(sp)
20405bce:	d422                	sw	s0,40(sp)
20405bd0:	1800                	addi	s0,sp,48
20405bd2:	fca42e23          	sw	a0,-36(s0)
20405bd6:	fcb42c23          	sw	a1,-40(s0)
20405bda:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405bde:	fdc42503          	lw	a0,-36(s0)
20405be2:	90bff0ef          	jal	ra,204054ec <__metal_driver_sifive_gpio0_base>
20405be6:	87aa                	mv	a5,a0
20405be8:	fef42623          	sw	a5,-20(s0)
20405bec:	fd442703          	lw	a4,-44(s0)
20405bf0:	479d                	li	a5,7
20405bf2:	14e7ea63          	bltu	a5,a4,20405d46 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20405bf6:	fd442783          	lw	a5,-44(s0)
20405bfa:	00279713          	slli	a4,a5,0x2
20405bfe:	204017b7          	lui	a5,0x20401
20405c02:	e8c78793          	addi	a5,a5,-372 # 20400e8c <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20405c06:	97ba                	add	a5,a5,a4
20405c08:	439c                	lw	a5,0(a5)
20405c0a:	8782                	jr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:184

    switch (intr_type) {
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20405c0c:	fec42783          	lw	a5,-20(s0)
20405c10:	07f1                	addi	a5,a5,28
20405c12:	4398                	lw	a4,0(a5)
20405c14:	fd842783          	lw	a5,-40(s0)
20405c18:	fec42683          	lw	a3,-20(s0)
20405c1c:	06f1                	addi	a3,a3,28
20405c1e:	8fd9                	or	a5,a5,a4
20405c20:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
20405c22:	a215                	j	20405d46 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20405c24:	fec42783          	lw	a5,-20(s0)
20405c28:	02478793          	addi	a5,a5,36
20405c2c:	4398                	lw	a4,0(a5)
20405c2e:	fd842783          	lw	a5,-40(s0)
20405c32:	fec42683          	lw	a3,-20(s0)
20405c36:	02468693          	addi	a3,a3,36
20405c3a:	8fd9                	or	a5,a5,a4
20405c3c:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
20405c3e:	a221                	j	20405d46 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20405c40:	fec42783          	lw	a5,-20(s0)
20405c44:	07f1                	addi	a5,a5,28
20405c46:	4398                	lw	a4,0(a5)
20405c48:	fd842783          	lw	a5,-40(s0)
20405c4c:	fec42683          	lw	a3,-20(s0)
20405c50:	06f1                	addi	a3,a3,28
20405c52:	8fd9                	or	a5,a5,a4
20405c54:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20405c56:	fec42783          	lw	a5,-20(s0)
20405c5a:	02478793          	addi	a5,a5,36
20405c5e:	4398                	lw	a4,0(a5)
20405c60:	fd842783          	lw	a5,-40(s0)
20405c64:	fec42683          	lw	a3,-20(s0)
20405c68:	02468693          	addi	a3,a3,36
20405c6c:	8fd9                	or	a5,a5,a4
20405c6e:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
20405c70:	a8d9                	j	20405d46 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20405c72:	fec42783          	lw	a5,-20(s0)
20405c76:	02c78793          	addi	a5,a5,44
20405c7a:	4398                	lw	a4,0(a5)
20405c7c:	fd842783          	lw	a5,-40(s0)
20405c80:	fec42683          	lw	a3,-20(s0)
20405c84:	02c68693          	addi	a3,a3,44
20405c88:	8fd9                	or	a5,a5,a4
20405c8a:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
20405c8c:	a86d                	j	20405d46 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20405c8e:	fec42783          	lw	a5,-20(s0)
20405c92:	03478793          	addi	a5,a5,52
20405c96:	4398                	lw	a4,0(a5)
20405c98:	fd842783          	lw	a5,-40(s0)
20405c9c:	fec42683          	lw	a3,-20(s0)
20405ca0:	03468693          	addi	a3,a3,52
20405ca4:	8fd9                	or	a5,a5,a4
20405ca6:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20405ca8:	a879                	j	20405d46 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20405caa:	fec42783          	lw	a5,-20(s0)
20405cae:	02c78793          	addi	a5,a5,44
20405cb2:	4398                	lw	a4,0(a5)
20405cb4:	fd842783          	lw	a5,-40(s0)
20405cb8:	fec42683          	lw	a3,-20(s0)
20405cbc:	02c68693          	addi	a3,a3,44
20405cc0:	8fd9                	or	a5,a5,a4
20405cc2:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20405cc4:	fec42783          	lw	a5,-20(s0)
20405cc8:	03478793          	addi	a5,a5,52
20405ccc:	4398                	lw	a4,0(a5)
20405cce:	fd842783          	lw	a5,-40(s0)
20405cd2:	fec42683          	lw	a3,-20(s0)
20405cd6:	03468693          	addi	a3,a3,52
20405cda:	8fd9                	or	a5,a5,a4
20405cdc:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
20405cde:	a0a5                	j	20405d46 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20405ce0:	fec42783          	lw	a5,-20(s0)
20405ce4:	07f1                	addi	a5,a5,28
20405ce6:	4398                	lw	a4,0(a5)
20405ce8:	fd842783          	lw	a5,-40(s0)
20405cec:	fec42683          	lw	a3,-20(s0)
20405cf0:	06f1                	addi	a3,a3,28
20405cf2:	8fd9                	or	a5,a5,a4
20405cf4:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20405cf6:	fec42783          	lw	a5,-20(s0)
20405cfa:	02478793          	addi	a5,a5,36
20405cfe:	4398                	lw	a4,0(a5)
20405d00:	fd842783          	lw	a5,-40(s0)
20405d04:	fec42683          	lw	a3,-20(s0)
20405d08:	02468693          	addi	a3,a3,36
20405d0c:	8fd9                	or	a5,a5,a4
20405d0e:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20405d10:	fec42783          	lw	a5,-20(s0)
20405d14:	02c78793          	addi	a5,a5,44
20405d18:	4398                	lw	a4,0(a5)
20405d1a:	fd842783          	lw	a5,-40(s0)
20405d1e:	fec42683          	lw	a3,-20(s0)
20405d22:	02c68693          	addi	a3,a3,44
20405d26:	8fd9                	or	a5,a5,a4
20405d28:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20405d2a:	fec42783          	lw	a5,-20(s0)
20405d2e:	03478793          	addi	a5,a5,52
20405d32:	4398                	lw	a4,0(a5)
20405d34:	fd842783          	lw	a5,-40(s0)
20405d38:	fec42683          	lw	a3,-20(s0)
20405d3c:	03468693          	addi	a3,a3,52
20405d40:	8fd9                	or	a5,a5,a4
20405d42:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
20405d44:	0001                	nop
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
20405d46:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:222
}
20405d48:	853e                	mv	a0,a5
20405d4a:	50b2                	lw	ra,44(sp)
20405d4c:	5422                	lw	s0,40(sp)
20405d4e:	6145                	addi	sp,sp,48
20405d50:	8082                	ret

20405d52 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
20405d52:	1101                	addi	sp,sp,-32
20405d54:	ce06                	sw	ra,28(sp)
20405d56:	cc22                	sw	s0,24(sp)
20405d58:	1000                	addi	s0,sp,32
20405d5a:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20405d5e:	fec42503          	lw	a0,-20(s0)
20405d62:	fb0ff0ef          	jal	ra,20405512 <__metal_driver_sifive_gpio0_interrupt_parent>
20405d66:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:227
}
20405d68:	853e                	mv	a0,a5
20405d6a:	40f2                	lw	ra,28(sp)
20405d6c:	4462                	lw	s0,24(sp)
20405d6e:	6105                	addi	sp,sp,32
20405d70:	8082                	ret

20405d72 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20405d72:	7179                	addi	sp,sp,-48
20405d74:	d606                	sw	ra,44(sp)
20405d76:	d422                	sw	s0,40(sp)
20405d78:	1800                	addi	s0,sp,48
20405d7a:	fca42e23          	sw	a0,-36(s0)
20405d7e:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20405d82:	fd842583          	lw	a1,-40(s0)
20405d86:	fdc42503          	lw	a0,-36(s0)
20405d8a:	fb2ff0ef          	jal	ra,2040553c <__metal_driver_sifive_gpio0_interrupt_lines>
20405d8e:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20405d92:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20405d96:	853e                	mv	a0,a5
20405d98:	50b2                	lw	ra,44(sp)
20405d9a:	5422                	lw	s0,40(sp)
20405d9c:	6145                	addi	sp,sp,48
20405d9e:	8082                	ret

20405da0 <__metal_driver_sifive_test0_base>:
__metal_driver_sifive_test0_base():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:863
{
20405da0:	1101                	addi	sp,sp,-32
20405da2:	ce22                	sw	s0,28(sp)
20405da4:	1000                	addi	s0,sp,32
20405da6:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:864
	if ((uintptr_t)sd == (uintptr_t)&__metal_dt_test_100000) {
20405daa:	fec42703          	lw	a4,-20(s0)
20405dae:	82018793          	addi	a5,gp,-2016 # 800007c0 <__metal_dt_test_100000>
20405db2:	00f71563          	bne	a4,a5,20405dbc <__metal_driver_sifive_test0_base+0x1c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:865
		return METAL_SIFIVE_TEST0_100000_BASE_ADDRESS;
20405db6:	001007b7          	lui	a5,0x100
20405dba:	a011                	j	20405dbe <__metal_driver_sifive_test0_base+0x1e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:868
		return 0;
20405dbc:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:870
}
20405dbe:	853e                	mv	a0,a5
20405dc0:	4472                	lw	s0,28(sp)
20405dc2:	6105                	addi	sp,sp,32
20405dc4:	8082                	ret

20405dc6 <__metal_driver_sifive_test0_exit>:
__metal_driver_sifive_test0_exit():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_test0.c:18
#include <metal/io.h>

void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) {
20405dc6:	7179                	addi	sp,sp,-48
20405dc8:	d606                	sw	ra,44(sp)
20405dca:	d422                	sw	s0,40(sp)
20405dcc:	1800                	addi	s0,sp,48
20405dce:	fca42e23          	sw	a0,-36(s0)
20405dd2:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_test0.c:19
    long base = __metal_driver_sifive_test0_base(sd);
20405dd6:	fdc42503          	lw	a0,-36(s0)
20405dda:	37d9                	jal	20405da0 <__metal_driver_sifive_test0_base>
20405ddc:	87aa                	mv	a5,a0
20405dde:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_test0.c:20
    uint32_t out = (code << 16) + (code == 0 ? 0x5555 : 0x3333);
20405de2:	fd842783          	lw	a5,-40(s0)
20405de6:	01079713          	slli	a4,a5,0x10
20405dea:	fd842783          	lw	a5,-40(s0)
20405dee:	e789                	bnez	a5,20405df8 <__metal_driver_sifive_test0_exit+0x32>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 1)
20405df0:	6795                	lui	a5,0x5
20405df2:	55578793          	addi	a5,a5,1365 # 5555 <__heap_size+0x4d55>
20405df6:	a021                	j	20405dfe <__metal_driver_sifive_test0_exit+0x38>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 2)
20405df8:	678d                	lui	a5,0x3
20405dfa:	33378793          	addi	a5,a5,819 # 3333 <__heap_size+0x2b33>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 4)
20405dfe:	97ba                	add	a5,a5,a4
20405e00:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_test0.c:22 (discriminator 1)
    while (1) {
        __METAL_ACCESS_ONCE((
20405e04:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_test0.c:23 (discriminator 1)
            __metal_io_u32 *)(base + METAL_SIFIVE_TEST0_FINISHER_OFFSET)) = out;
20405e08:	fe842703          	lw	a4,-24(s0)
20405e0c:	c398                	sw	a4,0(a5)
20405e0e:	bfdd                	j	20405e04 <__metal_driver_sifive_test0_exit+0x3e>

20405e10 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:888
{
20405e10:	1101                	addi	sp,sp,-32
20405e12:	ce22                	sw	s0,28(sp)
20405e14:	1000                	addi	s0,sp,32
20405e16:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:889
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20405e1a:	fec42703          	lw	a4,-20(s0)
20405e1e:	800007b7          	lui	a5,0x80000
20405e22:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20405e26:	00f71563          	bne	a4,a5,20405e30 <__metal_driver_sifive_uart0_control_base+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:890
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20405e2a:	100137b7          	lui	a5,0x10013
20405e2e:	a011                	j	20405e32 <__metal_driver_sifive_uart0_control_base+0x22>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:893
		return 0;
20405e30:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:895
}
20405e32:	853e                	mv	a0,a5
20405e34:	4472                	lw	s0,28(sp)
20405e36:	6105                	addi	sp,sp,32
20405e38:	8082                	ret

20405e3a <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:918
{
20405e3a:	1101                	addi	sp,sp,-32
20405e3c:	ce22                	sw	s0,28(sp)
20405e3e:	1000                	addi	s0,sp,32
20405e40:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:919
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20405e44:	fec42703          	lw	a4,-20(s0)
20405e48:	800007b7          	lui	a5,0x80000
20405e4c:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20405e50:	00f71763          	bne	a4,a5,20405e5e <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:920
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20405e54:	800007b7          	lui	a5,0x80000
20405e58:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffefe8>
20405e5c:	a011                	j	20405e60 <__metal_driver_sifive_uart0_interrupt_parent+0x26>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:923
		return 0;
20405e5e:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:925
}
20405e60:	853e                	mv	a0,a5
20405e62:	4472                	lw	s0,28(sp)
20405e64:	6105                	addi	sp,sp,32
20405e66:	8082                	ret

20405e68 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:928
{
20405e68:	1101                	addi	sp,sp,-32
20405e6a:	ce22                	sw	s0,28(sp)
20405e6c:	1000                	addi	s0,sp,32
20405e6e:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:929
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20405e72:	fec42703          	lw	a4,-20(s0)
20405e76:	800007b7          	lui	a5,0x80000
20405e7a:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20405e7e:	00f71463          	bne	a4,a5,20405e86 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:930
		return 5;
20405e82:	4795                	li	a5,5
20405e84:	a011                	j	20405e88 <__metal_driver_sifive_uart0_interrupt_line+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:933
		return 0;
20405e86:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:935
}
20405e88:	853e                	mv	a0,a5
20405e8a:	4472                	lw	s0,28(sp)
20405e8c:	6105                	addi	sp,sp,32
20405e8e:	8082                	ret

20405e90 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:938
{
20405e90:	1101                	addi	sp,sp,-32
20405e92:	ce22                	sw	s0,28(sp)
20405e94:	1000                	addi	s0,sp,32
20405e96:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:939
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20405e9a:	fec42703          	lw	a4,-20(s0)
20405e9e:	800007b7          	lui	a5,0x80000
20405ea2:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20405ea6:	00f71763          	bne	a4,a5,20405eb4 <__metal_driver_sifive_uart0_clock+0x24>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:940
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20405eaa:	800007b7          	lui	a5,0x80000
20405eae:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff320>
20405eb2:	a011                	j	20405eb6 <__metal_driver_sifive_uart0_clock+0x26>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:943
		return 0;
20405eb4:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:945
}
20405eb6:	853e                	mv	a0,a5
20405eb8:	4472                	lw	s0,28(sp)
20405eba:	6105                	addi	sp,sp,32
20405ebc:	8082                	ret

20405ebe <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:948
{
20405ebe:	1101                	addi	sp,sp,-32
20405ec0:	ce22                	sw	s0,28(sp)
20405ec2:	1000                	addi	s0,sp,32
20405ec4:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:949
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20405ec8:	fec42703          	lw	a4,-20(s0)
20405ecc:	800007b7          	lui	a5,0x80000
20405ed0:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20405ed4:	00f71563          	bne	a4,a5,20405ede <__metal_driver_sifive_uart0_pinmux+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:950
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20405ed8:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405edc:	a011                	j	20405ee0 <__metal_driver_sifive_uart0_pinmux+0x22>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:953
		return 0;
20405ede:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:955
}
20405ee0:	853e                	mv	a0,a5
20405ee2:	4472                	lw	s0,28(sp)
20405ee4:	6105                	addi	sp,sp,32
20405ee6:	8082                	ret

20405ee8 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:958
{
20405ee8:	1101                	addi	sp,sp,-32
20405eea:	ce22                	sw	s0,28(sp)
20405eec:	1000                	addi	s0,sp,32
20405eee:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:959
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20405ef2:	fec42703          	lw	a4,-20(s0)
20405ef6:	800007b7          	lui	a5,0x80000
20405efa:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20405efe:	00f71463          	bne	a4,a5,20405f06 <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:960
		return 0;
20405f02:	4781                	li	a5,0
20405f04:	a011                	j	20405f08 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:963
		return 0;
20405f06:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:965
}
20405f08:	853e                	mv	a0,a5
20405f0a:	4472                	lw	s0,28(sp)
20405f0c:	6105                	addi	sp,sp,32
20405f0e:	8082                	ret

20405f10 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:968
{
20405f10:	1101                	addi	sp,sp,-32
20405f12:	ce22                	sw	s0,28(sp)
20405f14:	1000                	addi	s0,sp,32
20405f16:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:969
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20405f1a:	fec42703          	lw	a4,-20(s0)
20405f1e:	800007b7          	lui	a5,0x80000
20405f22:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20405f26:	00f71563          	bne	a4,a5,20405f30 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:970
		return 196608;
20405f2a:	000307b7          	lui	a5,0x30
20405f2e:	a011                	j	20405f32 <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:973
		return 0;
20405f30:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:975
}
20405f32:	853e                	mv	a0,a5
20405f34:	4472                	lw	s0,28(sp)
20405f36:	6105                	addi	sp,sp,32
20405f38:	8082                	ret

20405f3a <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20405f3a:	1101                	addi	sp,sp,-32
20405f3c:	ce06                	sw	ra,28(sp)
20405f3e:	cc22                	sw	s0,24(sp)
20405f40:	1000                	addi	s0,sp,32
20405f42:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20405f46:	fec42503          	lw	a0,-20(s0)
20405f4a:	3dc5                	jal	20405e3a <__metal_driver_sifive_uart0_interrupt_parent>
20405f4c:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:39
}
20405f4e:	853e                	mv	a0,a5
20405f50:	40f2                	lw	ra,28(sp)
20405f52:	4462                	lw	s0,24(sp)
20405f54:	6105                	addi	sp,sp,32
20405f56:	8082                	ret

20405f58 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
20405f58:	1101                	addi	sp,sp,-32
20405f5a:	ce06                	sw	ra,28(sp)
20405f5c:	cc22                	sw	s0,24(sp)
20405f5e:	1000                	addi	s0,sp,32
20405f60:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20405f64:	fec42503          	lw	a0,-20(s0)
20405f68:	3701                	jal	20405e68 <__metal_driver_sifive_uart0_interrupt_line>
20405f6a:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:43
}
20405f6c:	853e                	mv	a0,a5
20405f6e:	40f2                	lw	ra,28(sp)
20405f70:	4462                	lw	s0,24(sp)
20405f72:	6105                	addi	sp,sp,32
20405f74:	8082                	ret

20405f76 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
20405f76:	7179                	addi	sp,sp,-48
20405f78:	d606                	sw	ra,44(sp)
20405f7a:	d422                	sw	s0,40(sp)
20405f7c:	1800                	addi	s0,sp,48
20405f7e:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20405f82:	fdc42503          	lw	a0,-36(s0)
20405f86:	3569                	jal	20405e10 <__metal_driver_sifive_uart0_control_base>
20405f88:	87aa                	mv	a5,a0
20405f8a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20405f8e:	fec42783          	lw	a5,-20(s0)
20405f92:	07c1                	addi	a5,a5,16
20405f94:	439c                	lw	a5,0(a5)
20405f96:	fec42703          	lw	a4,-20(s0)
20405f9a:	0741                	addi	a4,a4,16
20405f9c:	0017e793          	ori	a5,a5,1
20405fa0:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
20405fa2:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:50
}
20405fa4:	853e                	mv	a0,a5
20405fa6:	50b2                	lw	ra,44(sp)
20405fa8:	5422                	lw	s0,40(sp)
20405faa:	6145                	addi	sp,sp,48
20405fac:	8082                	ret

20405fae <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20405fae:	7179                	addi	sp,sp,-48
20405fb0:	d606                	sw	ra,44(sp)
20405fb2:	d422                	sw	s0,40(sp)
20405fb4:	1800                	addi	s0,sp,48
20405fb6:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20405fba:	fdc42503          	lw	a0,-36(s0)
20405fbe:	3d89                	jal	20405e10 <__metal_driver_sifive_uart0_control_base>
20405fc0:	87aa                	mv	a5,a0
20405fc2:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20405fc6:	fec42783          	lw	a5,-20(s0)
20405fca:	07c1                	addi	a5,a5,16
20405fcc:	439c                	lw	a5,0(a5)
20405fce:	fec42703          	lw	a4,-20(s0)
20405fd2:	0741                	addi	a4,a4,16
20405fd4:	9bf9                	andi	a5,a5,-2
20405fd6:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20405fd8:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:57
}
20405fda:	853e                	mv	a0,a5
20405fdc:	50b2                	lw	ra,44(sp)
20405fde:	5422                	lw	s0,40(sp)
20405fe0:	6145                	addi	sp,sp,48
20405fe2:	8082                	ret

20405fe4 <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20405fe4:	7179                	addi	sp,sp,-48
20405fe6:	d606                	sw	ra,44(sp)
20405fe8:	d422                	sw	s0,40(sp)
20405fea:	1800                	addi	s0,sp,48
20405fec:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20405ff0:	fdc42503          	lw	a0,-36(s0)
20405ff4:	e1dff0ef          	jal	ra,20405e10 <__metal_driver_sifive_uart0_control_base>
20405ff8:	87aa                	mv	a5,a0
20405ffa:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20405ffe:	fec42783          	lw	a5,-20(s0)
20406002:	07c1                	addi	a5,a5,16
20406004:	439c                	lw	a5,0(a5)
20406006:	fec42703          	lw	a4,-20(s0)
2040600a:	0741                	addi	a4,a4,16
2040600c:	0027e793          	ori	a5,a5,2
20406010:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
20406012:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:64
}
20406014:	853e                	mv	a0,a5
20406016:	50b2                	lw	ra,44(sp)
20406018:	5422                	lw	s0,40(sp)
2040601a:	6145                	addi	sp,sp,48
2040601c:	8082                	ret

2040601e <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
2040601e:	7179                	addi	sp,sp,-48
20406020:	d606                	sw	ra,44(sp)
20406022:	d422                	sw	s0,40(sp)
20406024:	1800                	addi	s0,sp,48
20406026:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040602a:	fdc42503          	lw	a0,-36(s0)
2040602e:	de3ff0ef          	jal	ra,20405e10 <__metal_driver_sifive_uart0_control_base>
20406032:	87aa                	mv	a5,a0
20406034:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20406038:	fec42783          	lw	a5,-20(s0)
2040603c:	07c1                	addi	a5,a5,16
2040603e:	439c                	lw	a5,0(a5)
20406040:	fec42703          	lw	a4,-20(s0)
20406044:	0741                	addi	a4,a4,16
20406046:	9bf5                	andi	a5,a5,-3
20406048:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
2040604a:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:71
}
2040604c:	853e                	mv	a0,a5
2040604e:	50b2                	lw	ra,44(sp)
20406050:	5422                	lw	s0,40(sp)
20406052:	6145                	addi	sp,sp,48
20406054:	8082                	ret

20406056 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
20406056:	7179                	addi	sp,sp,-48
20406058:	d606                	sw	ra,44(sp)
2040605a:	d422                	sw	s0,40(sp)
2040605c:	1800                	addi	s0,sp,48
2040605e:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406062:	fdc42503          	lw	a0,-36(s0)
20406066:	dabff0ef          	jal	ra,20405e10 <__metal_driver_sifive_uart0_control_base>
2040606a:	87aa                	mv	a5,a0
2040606c:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20406070:	fec42783          	lw	a5,-20(s0)
20406074:	439c                	lw	a5,0(a5)
20406076:	83fd                	srli	a5,a5,0x1f
20406078:	0ff7f793          	zext.b	a5,a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:77
}
2040607c:	853e                	mv	a0,a5
2040607e:	50b2                	lw	ra,44(sp)
20406080:	5422                	lw	s0,40(sp)
20406082:	6145                	addi	sp,sp,48
20406084:	8082                	ret

20406086 <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20406086:	7179                	addi	sp,sp,-48
20406088:	d606                	sw	ra,44(sp)
2040608a:	d422                	sw	s0,40(sp)
2040608c:	1800                	addi	s0,sp,48
2040608e:	fca42e23          	sw	a0,-36(s0)
20406092:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406096:	fdc42503          	lw	a0,-36(s0)
2040609a:	d77ff0ef          	jal	ra,20405e10 <__metal_driver_sifive_uart0_control_base>
2040609e:	87aa                	mv	a5,a0
204060a0:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
204060a4:	fec42783          	lw	a5,-20(s0)
204060a8:	07a1                	addi	a5,a5,8
204060aa:	4398                	lw	a4,0(a5)
204060ac:	fd842783          	lw	a5,-40(s0)
204060b0:	01079693          	slli	a3,a5,0x10
204060b4:	000707b7          	lui	a5,0x70
204060b8:	8ff5                	and	a5,a5,a3
204060ba:	fec42683          	lw	a3,-20(s0)
204060be:	06a1                	addi	a3,a3,8
204060c0:	8fd9                	or	a5,a5,a4
204060c2:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
204060c4:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:85
}
204060c6:	853e                	mv	a0,a5
204060c8:	50b2                	lw	ra,44(sp)
204060ca:	5422                	lw	s0,40(sp)
204060cc:	6145                	addi	sp,sp,48
204060ce:	8082                	ret

204060d0 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
204060d0:	7179                	addi	sp,sp,-48
204060d2:	d606                	sw	ra,44(sp)
204060d4:	d422                	sw	s0,40(sp)
204060d6:	1800                	addi	s0,sp,48
204060d8:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204060dc:	fdc42503          	lw	a0,-36(s0)
204060e0:	d31ff0ef          	jal	ra,20405e10 <__metal_driver_sifive_uart0_control_base>
204060e4:	87aa                	mv	a5,a0
204060e6:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
204060ea:	fec42783          	lw	a5,-20(s0)
204060ee:	07a1                	addi	a5,a5,8
204060f0:	439c                	lw	a5,0(a5)
204060f2:	83c1                	srli	a5,a5,0x10
204060f4:	8b9d                	andi	a5,a5,7
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:91
}
204060f6:	853e                	mv	a0,a5
204060f8:	50b2                	lw	ra,44(sp)
204060fa:	5422                	lw	s0,40(sp)
204060fc:	6145                	addi	sp,sp,48
204060fe:	8082                	ret

20406100 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20406100:	7179                	addi	sp,sp,-48
20406102:	d606                	sw	ra,44(sp)
20406104:	d422                	sw	s0,40(sp)
20406106:	1800                	addi	s0,sp,48
20406108:	fca42e23          	sw	a0,-36(s0)
2040610c:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406110:	fdc42503          	lw	a0,-36(s0)
20406114:	cfdff0ef          	jal	ra,20405e10 <__metal_driver_sifive_uart0_control_base>
20406118:	87aa                	mv	a5,a0
2040611a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
2040611e:	fec42783          	lw	a5,-20(s0)
20406122:	07b1                	addi	a5,a5,12
20406124:	4398                	lw	a4,0(a5)
20406126:	fd842783          	lw	a5,-40(s0)
2040612a:	01079693          	slli	a3,a5,0x10
2040612e:	000707b7          	lui	a5,0x70
20406132:	8ff5                	and	a5,a5,a3
20406134:	fec42683          	lw	a3,-20(s0)
20406138:	06b1                	addi	a3,a3,12
2040613a:	8fd9                	or	a5,a5,a4
2040613c:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
2040613e:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:99
}
20406140:	853e                	mv	a0,a5
20406142:	50b2                	lw	ra,44(sp)
20406144:	5422                	lw	s0,40(sp)
20406146:	6145                	addi	sp,sp,48
20406148:	8082                	ret

2040614a <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
2040614a:	7179                	addi	sp,sp,-48
2040614c:	d606                	sw	ra,44(sp)
2040614e:	d422                	sw	s0,40(sp)
20406150:	1800                	addi	s0,sp,48
20406152:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406156:	fdc42503          	lw	a0,-36(s0)
2040615a:	cb7ff0ef          	jal	ra,20405e10 <__metal_driver_sifive_uart0_control_base>
2040615e:	87aa                	mv	a5,a0
20406160:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
20406164:	fec42783          	lw	a5,-20(s0)
20406168:	07b1                	addi	a5,a5,12
2040616a:	439c                	lw	a5,0(a5)
2040616c:	83c1                	srli	a5,a5,0x10
2040616e:	8b9d                	andi	a5,a5,7
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:105
}
20406170:	853e                	mv	a0,a5
20406172:	50b2                	lw	ra,44(sp)
20406174:	5422                	lw	s0,40(sp)
20406176:	6145                	addi	sp,sp,48
20406178:	8082                	ret

2040617a <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
2040617a:	7179                	addi	sp,sp,-48
2040617c:	d606                	sw	ra,44(sp)
2040617e:	d422                	sw	s0,40(sp)
20406180:	1800                	addi	s0,sp,48
20406182:	fca42e23          	sw	a0,-36(s0)
20406186:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040618a:	fdc42503          	lw	a0,-36(s0)
2040618e:	c83ff0ef          	jal	ra,20405e10 <__metal_driver_sifive_uart0_control_base>
20406192:	87aa                	mv	a5,a0
20406194:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
20406198:	0001                	nop
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
2040619a:	fdc42503          	lw	a0,-36(s0)
2040619e:	3d65                	jal	20406056 <__metal_driver_sifive_uart0_txready>
204061a0:	87aa                	mv	a5,a0
204061a2:	ffe5                	bnez	a5,2040619a <__metal_driver_sifive_uart0_putc+0x20>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
204061a4:	fec42783          	lw	a5,-20(s0)
204061a8:	fd842703          	lw	a4,-40(s0)
204061ac:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
204061ae:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:115
}
204061b0:	853e                	mv	a0,a5
204061b2:	50b2                	lw	ra,44(sp)
204061b4:	5422                	lw	s0,40(sp)
204061b6:	6145                	addi	sp,sp,48
204061b8:	8082                	ret

204061ba <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
204061ba:	7179                	addi	sp,sp,-48
204061bc:	d606                	sw	ra,44(sp)
204061be:	d422                	sw	s0,40(sp)
204061c0:	1800                	addi	s0,sp,48
204061c2:	fca42e23          	sw	a0,-36(s0)
204061c6:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204061ca:	fdc42503          	lw	a0,-36(s0)
204061ce:	c43ff0ef          	jal	ra,20405e10 <__metal_driver_sifive_uart0_control_base>
204061d2:	87aa                	mv	a5,a0
204061d4:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
204061d8:	fec42783          	lw	a5,-20(s0)
204061dc:	0791                	addi	a5,a5,4
204061de:	439c                	lw	a5,0(a5)
204061e0:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
204061e4:	fe842783          	lw	a5,-24(s0)
204061e8:	0007d763          	bgez	a5,204061f6 <__metal_driver_sifive_uart0_getc+0x3c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
204061ec:	fd842783          	lw	a5,-40(s0)
204061f0:	577d                	li	a4,-1
204061f2:	c398                	sw	a4,0(a5)
204061f4:	a801                	j	20406204 <__metal_driver_sifive_uart0_getc+0x4a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
204061f6:	fe842783          	lw	a5,-24(s0)
204061fa:	0ff7f713          	zext.b	a4,a5
204061fe:	fd842783          	lw	a5,-40(s0)
20406202:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
20406204:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:129
}
20406206:	853e                	mv	a0,a5
20406208:	50b2                	lw	ra,44(sp)
2040620a:	5422                	lw	s0,40(sp)
2040620c:	6145                	addi	sp,sp,48
2040620e:	8082                	ret

20406210 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
20406210:	7179                	addi	sp,sp,-48
20406212:	d622                	sw	s0,44(sp)
20406214:	1800                	addi	s0,sp,48
20406216:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2040621a:	fdc42783          	lw	a5,-36(s0)
2040621e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
20406222:	fec42783          	lw	a5,-20(s0)
20406226:	43dc                	lw	a5,4(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:134
}
20406228:	853e                	mv	a0,a5
2040622a:	5432                	lw	s0,44(sp)
2040622c:	6145                	addi	sp,sp,48
2040622e:	8082                	ret

20406230 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
20406230:	7179                	addi	sp,sp,-48
20406232:	d606                	sw	ra,44(sp)
20406234:	d422                	sw	s0,40(sp)
20406236:	1800                	addi	s0,sp,48
20406238:	fca42e23          	sw	a0,-36(s0)
2040623c:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20406240:	fdc42783          	lw	a5,-36(s0)
20406244:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20406248:	fdc42503          	lw	a0,-36(s0)
2040624c:	bc5ff0ef          	jal	ra,20405e10 <__metal_driver_sifive_uart0_control_base>
20406250:	87aa                	mv	a5,a0
20406252:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20406256:	fdc42503          	lw	a0,-36(s0)
2040625a:	c37ff0ef          	jal	ra,20405e90 <__metal_driver_sifive_uart0_clock>
2040625e:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
20406262:	fd842703          	lw	a4,-40(s0)
20406266:	fec42783          	lw	a5,-20(s0)
2040626a:	c3d8                	sw	a4,4(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
2040626c:	fe442783          	lw	a5,-28(s0)
20406270:	cbb1                	beqz	a5,204062c4 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
20406272:	fe442783          	lw	a5,-28(s0)
20406276:	439c                	lw	a5,0(a5)
20406278:	439c                	lw	a5,0(a5)
2040627a:	fe442503          	lw	a0,-28(s0)
2040627e:	9782                	jalr	a5
20406280:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
20406284:	fe042703          	lw	a4,-32(s0)
20406288:	fd842783          	lw	a5,-40(s0)
2040628c:	02f747b3          	div	a5,a4,a5
20406290:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
20406294:	fe842783          	lw	a5,-24(s0)
20406298:	07e1                	addi	a5,a5,24
2040629a:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
2040629c:	fe842783          	lw	a5,-24(s0)
204062a0:	07a1                	addi	a5,a5,8
204062a2:	439c                	lw	a5,0(a5)
204062a4:	fe842703          	lw	a4,-24(s0)
204062a8:	0721                	addi	a4,a4,8
204062aa:	0017e793          	ori	a5,a5,1
204062ae:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
204062b0:	fe842783          	lw	a5,-24(s0)
204062b4:	07b1                	addi	a5,a5,12
204062b6:	439c                	lw	a5,0(a5)
204062b8:	fe842703          	lw	a4,-24(s0)
204062bc:	0731                	addi	a4,a4,12
204062be:	0017e793          	ori	a5,a5,1
204062c2:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
204062c4:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:151
}
204062c6:	853e                	mv	a0,a5
204062c8:	50b2                	lw	ra,44(sp)
204062ca:	5422                	lw	s0,40(sp)
204062cc:	6145                	addi	sp,sp,48
204062ce:	8082                	ret

204062d0 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
204062d0:	7139                	addi	sp,sp,-64
204062d2:	de06                	sw	ra,60(sp)
204062d4:	dc22                	sw	s0,56(sp)
204062d6:	0080                	addi	s0,sp,64
204062d8:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
204062dc:	fcc42783          	lw	a5,-52(s0)
204062e0:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
204062e4:	fcc42503          	lw	a0,-52(s0)
204062e8:	b29ff0ef          	jal	ra,20405e10 <__metal_driver_sifive_uart0_control_base>
204062ec:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
204062ee:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
204062f2:	fcc42503          	lw	a0,-52(s0)
204062f6:	b9bff0ef          	jal	ra,20405e90 <__metal_driver_sifive_uart0_clock>
204062fa:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
204062fe:	fe842783          	lw	a5,-24(s0)
20406302:	07a1                	addi	a5,a5,8
20406304:	4398                	lw	a4,0(a5)
20406306:	fe842783          	lw	a5,-24(s0)
2040630a:	07a1                	addi	a5,a5,8
2040630c:	86be                	mv	a3,a5
2040630e:	fff907b7          	lui	a5,0xfff90
20406312:	17fd                	addi	a5,a5,-1
20406314:	8ff9                	and	a5,a5,a4
20406316:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
20406318:	fe842783          	lw	a5,-24(s0)
2040631c:	07a1                	addi	a5,a5,8
2040631e:	4398                	lw	a4,0(a5)
20406320:	fe842783          	lw	a5,-24(s0)
20406324:	07a1                	addi	a5,a5,8
20406326:	86be                	mv	a3,a5
20406328:	67c1                	lui	a5,0x10
2040632a:	8fd9                	or	a5,a5,a4
2040632c:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
2040632e:	0001                	nop
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
20406330:	fe842783          	lw	a5,-24(s0)
20406334:	07d1                	addi	a5,a5,20
20406336:	439c                	lw	a5,0(a5)
20406338:	8b85                	andi	a5,a5,1
2040633a:	dbfd                	beqz	a5,20406330 <pre_rate_change_callback_func+0x60>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
2040633c:	fe842783          	lw	a5,-24(s0)
20406340:	07a1                	addi	a5,a5,8
20406342:	439c                	lw	a5,0(a5)
20406344:	8b89                	andi	a5,a5,2
20406346:	c399                	beqz	a5,2040634c <pre_rate_change_callback_func+0x7c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
20406348:	47a5                	li	a5,9
2040634a:	a011                	j	2040634e <pre_rate_change_callback_func+0x7e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
2040634c:	47a9                	li	a5,10
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
2040634e:	fef42023          	sw	a5,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
20406352:	fe442783          	lw	a5,-28(s0)
20406356:	439c                	lw	a5,0(a5)
20406358:	439c                	lw	a5,0(a5)
2040635a:	fe442503          	lw	a0,-28(s0)
2040635e:	9782                	jalr	a5
20406360:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
20406364:	fe042703          	lw	a4,-32(s0)
20406368:	fdc42783          	lw	a5,-36(s0)
2040636c:	02f707b3          	mul	a5,a4,a5
20406370:	873e                	mv	a4,a5
20406372:	fec42783          	lw	a5,-20(s0)
20406376:	43dc                	lw	a5,4(a5)
20406378:	02f757b3          	divu	a5,a4,a5
2040637c:	fcf42c23          	sw	a5,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
20406380:	fc042a23          	sw	zero,-44(s0)
20406384:	a039                	j	20406392 <pre_rate_change_callback_func+0xc2>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
20406386:	0001                	nop
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
20406388:	fd442783          	lw	a5,-44(s0)
2040638c:	0785                	addi	a5,a5,1
2040638e:	fcf42a23          	sw	a5,-44(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
20406392:	fd442783          	lw	a5,-44(s0)
20406396:	fd842703          	lw	a4,-40(s0)
2040639a:	fee7c6e3          	blt	a5,a4,20406386 <pre_rate_change_callback_func+0xb6>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:180
}
2040639e:	0001                	nop
204063a0:	0001                	nop
204063a2:	50f2                	lw	ra,60(sp)
204063a4:	5462                	lw	s0,56(sp)
204063a6:	6121                	addi	sp,sp,64
204063a8:	8082                	ret

204063aa <post_rate_change_callback_func>:
post_rate_change_callback_func():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
204063aa:	7179                	addi	sp,sp,-48
204063ac:	d606                	sw	ra,44(sp)
204063ae:	d422                	sw	s0,40(sp)
204063b0:	1800                	addi	s0,sp,48
204063b2:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
204063b6:	fdc42783          	lw	a5,-36(s0)
204063ba:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
204063be:	fec42703          	lw	a4,-20(s0)
204063c2:	fec42783          	lw	a5,-20(s0)
204063c6:	43dc                	lw	a5,4(a5)
204063c8:	85be                	mv	a1,a5
204063ca:	853a                	mv	a0,a4
204063cc:	d93fb0ef          	jal	ra,2040215e <metal_uart_set_baud_rate>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:185
}
204063d0:	0001                	nop
204063d2:	50b2                	lw	ra,44(sp)
204063d4:	5422                	lw	s0,40(sp)
204063d6:	6145                	addi	sp,sp,48
204063d8:	8082                	ret

204063da <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
204063da:	7139                	addi	sp,sp,-64
204063dc:	de06                	sw	ra,60(sp)
204063de:	dc22                	sw	s0,56(sp)
204063e0:	0080                	addi	s0,sp,64
204063e2:	fca42623          	sw	a0,-52(s0)
204063e6:	fcb42423          	sw	a1,-56(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
204063ea:	fcc42783          	lw	a5,-52(s0)
204063ee:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
204063f2:	fcc42503          	lw	a0,-52(s0)
204063f6:	a9bff0ef          	jal	ra,20405e90 <__metal_driver_sifive_uart0_clock>
204063fa:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
204063fe:	fcc42503          	lw	a0,-52(s0)
20406402:	abdff0ef          	jal	ra,20405ebe <__metal_driver_sifive_uart0_pinmux>
20406406:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
2040640a:	fe842783          	lw	a5,-24(s0)
2040640e:	c7b9                	beqz	a5,2040645c <__metal_driver_sifive_uart0_init+0x82>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
20406410:	fec42783          	lw	a5,-20(s0)
20406414:	20406737          	lui	a4,0x20406
20406418:	2d070713          	addi	a4,a4,720 # 204062d0 <pre_rate_change_callback_func>
2040641c:	c798                	sw	a4,8(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
2040641e:	fec42783          	lw	a5,-20(s0)
20406422:	fcc42703          	lw	a4,-52(s0)
20406426:	c7d8                	sw	a4,12(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
20406428:	fec42783          	lw	a5,-20(s0)
2040642c:	07a1                	addi	a5,a5,8
2040642e:	85be                	mv	a1,a5
20406430:	fe842503          	lw	a0,-24(s0)
20406434:	2ab5                	jal	204065b0 <metal_clock_register_pre_rate_change_callback>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
20406436:	fec42783          	lw	a5,-20(s0)
2040643a:	20406737          	lui	a4,0x20406
2040643e:	3aa70713          	addi	a4,a4,938 # 204063aa <post_rate_change_callback_func>
20406442:	cbd8                	sw	a4,20(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
20406444:	fec42783          	lw	a5,-20(s0)
20406448:	fcc42703          	lw	a4,-52(s0)
2040644c:	cf98                	sw	a4,24(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
2040644e:	fec42783          	lw	a5,-20(s0)
20406452:	07d1                	addi	a5,a5,20
20406454:	85be                	mv	a1,a5
20406456:	fe842503          	lw	a0,-24(s0)
2040645a:	2259                	jal	204065e0 <metal_clock_register_post_rate_change_callback>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
2040645c:	fec42783          	lw	a5,-20(s0)
20406460:	fc842583          	lw	a1,-56(s0)
20406464:	853e                	mv	a0,a5
20406466:	cf9fb0ef          	jal	ra,2040215e <metal_uart_set_baud_rate>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
2040646a:	fe442783          	lw	a5,-28(s0)
2040646e:	cb95                	beqz	a5,204064a2 <__metal_driver_sifive_uart0_init+0xc8>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20406470:	fcc42503          	lw	a0,-52(s0)
20406474:	a75ff0ef          	jal	ra,20405ee8 <__metal_driver_sifive_uart0_pinmux_output_selector>
20406478:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
2040647a:	fef42023          	sw	a5,-32(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
2040647e:	fcc42503          	lw	a0,-52(s0)
20406482:	a8fff0ef          	jal	ra,20405f10 <__metal_driver_sifive_uart0_pinmux_source_selector>
20406486:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
20406488:	fcf42e23          	sw	a5,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
2040648c:	fe442783          	lw	a5,-28(s0)
20406490:	439c                	lw	a5,0(a5)
20406492:	53dc                	lw	a5,36(a5)
20406494:	fdc42603          	lw	a2,-36(s0)
20406498:	fe042583          	lw	a1,-32(s0)
2040649c:	fe442503          	lw	a0,-28(s0)
204064a0:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
204064a2:	0001                	nop
204064a4:	50f2                	lw	ra,60(sp)
204064a6:	5462                	lw	s0,56(sp)
204064a8:	6121                	addi	sp,sp,64
204064aa:	8082                	ret

204064ac <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
204064ac:	7179                	addi	sp,sp,-48
204064ae:	d606                	sw	ra,44(sp)
204064b0:	d422                	sw	s0,40(sp)
204064b2:	1800                	addi	s0,sp,48
204064b4:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
204064b8:	fdc42783          	lw	a5,-36(s0)
204064bc:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:52
    while (current) {
204064c0:	a831                	j	204064dc <_metal_clock_call_all_callbacks+0x30>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
204064c2:	fec42783          	lw	a5,-20(s0)
204064c6:	4398                	lw	a4,0(a5)
204064c8:	fec42783          	lw	a5,-20(s0)
204064cc:	43dc                	lw	a5,4(a5)
204064ce:	853e                	mv	a0,a5
204064d0:	9702                	jalr	a4
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:54
        current = current->_next;
204064d2:	fec42783          	lw	a5,-20(s0)
204064d6:	479c                	lw	a5,8(a5)
204064d8:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:52
    while (current) {
204064dc:	fec42783          	lw	a5,-20(s0)
204064e0:	f3ed                	bnez	a5,204064c2 <_metal_clock_call_all_callbacks+0x16>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:56
    }
}
204064e2:	0001                	nop
204064e4:	0001                	nop
204064e6:	50b2                	lw	ra,44(sp)
204064e8:	5422                	lw	s0,40(sp)
204064ea:	6145                	addi	sp,sp,48
204064ec:	8082                	ret

204064ee <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
204064ee:	7179                	addi	sp,sp,-48
204064f0:	d622                	sw	s0,44(sp)
204064f2:	1800                	addi	s0,sp,48
204064f4:	fca42e23          	sw	a0,-36(s0)
204064f8:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
204064fc:	fd842783          	lw	a5,-40(s0)
20406500:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:66

    if (!list) {
20406504:	fdc42783          	lw	a5,-36(s0)
20406508:	e781                	bnez	a5,20406510 <_metal_clock_append_to_callbacks+0x22>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:67
        return cb;
2040650a:	fd842783          	lw	a5,-40(s0)
2040650e:	a035                	j	2040653a <_metal_clock_append_to_callbacks+0x4c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
20406510:	fdc42783          	lw	a5,-36(s0)
20406514:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
20406518:	a031                	j	20406524 <_metal_clock_append_to_callbacks+0x36>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:73
        current = current->_next;
2040651a:	fec42783          	lw	a5,-20(s0)
2040651e:	479c                	lw	a5,8(a5)
20406520:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
20406524:	fec42783          	lw	a5,-20(s0)
20406528:	479c                	lw	a5,8(a5)
2040652a:	fbe5                	bnez	a5,2040651a <_metal_clock_append_to_callbacks+0x2c>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
2040652c:	fec42783          	lw	a5,-20(s0)
20406530:	fd842703          	lw	a4,-40(s0)
20406534:	c798                	sw	a4,8(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:78

    return list;
20406536:	fdc42783          	lw	a5,-36(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:79
}
2040653a:	853e                	mv	a0,a5
2040653c:	5432                	lw	s0,44(sp)
2040653e:	6145                	addi	sp,sp,48
20406540:	8082                	ret

20406542 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20406542:	1101                	addi	sp,sp,-32
20406544:	ce06                	sw	ra,28(sp)
20406546:	cc22                	sw	s0,24(sp)
20406548:	1000                	addi	s0,sp,32
2040654a:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
2040654e:	fec42783          	lw	a5,-20(s0)
20406552:	439c                	lw	a5,0(a5)
20406554:	439c                	lw	a5,0(a5)
20406556:	fec42503          	lw	a0,-20(s0)
2040655a:	9782                	jalr	a5
2040655c:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:112
}
2040655e:	853e                	mv	a0,a5
20406560:	40f2                	lw	ra,28(sp)
20406562:	4462                	lw	s0,24(sp)
20406564:	6105                	addi	sp,sp,32
20406566:	8082                	ret

20406568 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20406568:	7179                	addi	sp,sp,-48
2040656a:	d606                	sw	ra,44(sp)
2040656c:	d422                	sw	s0,40(sp)
2040656e:	1800                	addi	s0,sp,48
20406570:	fca42e23          	sw	a0,-36(s0)
20406574:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20406578:	fdc42783          	lw	a5,-36(s0)
2040657c:	43dc                	lw	a5,4(a5)
2040657e:	853e                	mv	a0,a5
20406580:	3735                	jal	204064ac <_metal_clock_call_all_callbacks>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20406582:	fdc42783          	lw	a5,-36(s0)
20406586:	439c                	lw	a5,0(a5)
20406588:	43dc                	lw	a5,4(a5)
2040658a:	fd842583          	lw	a1,-40(s0)
2040658e:	fdc42503          	lw	a0,-36(s0)
20406592:	9782                	jalr	a5
20406594:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20406598:	fdc42783          	lw	a5,-36(s0)
2040659c:	479c                	lw	a5,8(a5)
2040659e:	853e                	mv	a0,a5
204065a0:	3731                	jal	204064ac <_metal_clock_call_all_callbacks>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:135

    return out;
204065a2:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:136
}
204065a6:	853e                	mv	a0,a5
204065a8:	50b2                	lw	ra,44(sp)
204065aa:	5422                	lw	s0,40(sp)
204065ac:	6145                	addi	sp,sp,48
204065ae:	8082                	ret

204065b0 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
204065b0:	1101                	addi	sp,sp,-32
204065b2:	ce06                	sw	ra,28(sp)
204065b4:	cc22                	sw	s0,24(sp)
204065b6:	1000                	addi	s0,sp,32
204065b8:	fea42623          	sw	a0,-20(s0)
204065bc:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
204065c0:	fec42783          	lw	a5,-20(s0)
204065c4:	43dc                	lw	a5,4(a5)
204065c6:	fe842583          	lw	a1,-24(s0)
204065ca:	853e                	mv	a0,a5
204065cc:	370d                	jal	204064ee <_metal_clock_append_to_callbacks>
204065ce:	872a                	mv	a4,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
204065d0:	fec42783          	lw	a5,-20(s0)
204065d4:	c3d8                	sw	a4,4(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:149
}
204065d6:	0001                	nop
204065d8:	40f2                	lw	ra,28(sp)
204065da:	4462                	lw	s0,24(sp)
204065dc:	6105                	addi	sp,sp,32
204065de:	8082                	ret

204065e0 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
204065e0:	1101                	addi	sp,sp,-32
204065e2:	ce06                	sw	ra,28(sp)
204065e4:	cc22                	sw	s0,24(sp)
204065e6:	1000                	addi	s0,sp,32
204065e8:	fea42623          	sw	a0,-20(s0)
204065ec:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
204065f0:	fec42783          	lw	a5,-20(s0)
204065f4:	479c                	lw	a5,8(a5)
204065f6:	fe842583          	lw	a1,-24(s0)
204065fa:	853e                	mv	a0,a5
204065fc:	3dcd                	jal	204064ee <_metal_clock_append_to_callbacks>
204065fe:	872a                	mv	a4,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
20406600:	fec42783          	lw	a5,-20(s0)
20406604:	c798                	sw	a4,8(a5)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/clock.h:162
}
20406606:	0001                	nop
20406608:	40f2                	lw	ra,28(sp)
2040660a:	4462                	lw	s0,24(sp)
2040660c:	6105                	addi	sp,sp,32
2040660e:	8082                	ret

20406610 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
20406610:	1101                	addi	sp,sp,-32
20406612:	ce06                	sw	ra,28(sp)
20406614:	cc22                	sw	s0,24(sp)
20406616:	1000                	addi	s0,sp,32
20406618:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
2040661c:	fec42783          	lw	a5,-20(s0)
20406620:	439c                	lw	a5,0(a5)
20406622:	57dc                	lw	a5,44(a5)
20406624:	fec42503          	lw	a0,-20(s0)
20406628:	9782                	jalr	a5
2040662a:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/cpu.h:226
}
2040662c:	853e                	mv	a0,a5
2040662e:	40f2                	lw	ra,28(sp)
20406630:	4462                	lw	s0,24(sp)
20406632:	6105                	addi	sp,sp,32
20406634:	8082                	ret

20406636 <metal_cpu_get>:
metal_cpu_get():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
20406636:	1101                	addi	sp,sp,-32
20406638:	ce22                	sw	s0,28(sp)
2040663a:	1000                	addi	s0,sp,32
2040663c:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
20406640:	fec42783          	lw	a5,-20(s0)
20406644:	eb99                	bnez	a5,2040665a <metal_cpu_get+0x24>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20406646:	800007b7          	lui	a5,0x80000
2040664a:	fec42703          	lw	a4,-20(s0)
2040664e:	070a                	slli	a4,a4,0x2
20406650:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20406654:	97ba                	add	a5,a5,a4
20406656:	439c                	lw	a5,0(a5)
20406658:	a011                	j	2040665c <metal_cpu_get+0x26>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/cpu.c:11
    }
    return NULL;
2040665a:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/cpu.c:12
}
2040665c:	853e                	mv	a0,a5
2040665e:	4472                	lw	s0,28(sp)
20406660:	6105                	addi	sp,sp,32
20406662:	8082                	ret

20406664 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
20406664:	1101                	addi	sp,sp,-32
20406666:	ce22                	sw	s0,28(sp)
20406668:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
2040666a:	f14027f3          	csrr	a5,mhartid
2040666e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/cpu.c:18
    return mhartid;
20406672:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/cpu.c:20
#endif
}
20406676:	853e                	mv	a0,a5
20406678:	4472                	lw	s0,28(sp)
2040667a:	6105                	addi	sp,sp,32
2040667c:	8082                	ret

2040667e <__metal_shutdown_exit>:
__metal_shutdown_exit():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/shutdown.h:26
};

__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) {
2040667e:	1101                	addi	sp,sp,-32
20406680:	ce06                	sw	ra,28(sp)
20406682:	cc22                	sw	s0,24(sp)
20406684:	1000                	addi	s0,sp,32
20406686:	fea42623          	sw	a0,-20(s0)
2040668a:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/metal/shutdown.h:27
    sd->vtable->exit(sd, code);
2040668e:	fec42783          	lw	a5,-20(s0)
20406692:	439c                	lw	a5,0(a5)
20406694:	439c                	lw	a5,0(a5)
20406696:	fe842583          	lw	a1,-24(s0)
2040669a:	fec42503          	lw	a0,-20(s0)
2040669e:	9782                	jalr	a5

204066a0 <metal_shutdown>:
metal_shutdown():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/shutdown.c:11

extern __inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                             int code);

#if defined(__METAL_DT_SHUTDOWN_HANDLE)
void metal_shutdown(int code) {
204066a0:	1101                	addi	sp,sp,-32
204066a2:	ce06                	sw	ra,28(sp)
204066a4:	cc22                	sw	s0,24(sp)
204066a6:	1000                	addi	s0,sp,32
204066a8:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/shutdown.c:12
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
204066ac:	fec42583          	lw	a1,-20(s0)
204066b0:	82018513          	addi	a0,gp,-2016 # 800007c0 <__metal_dt_test_100000>
204066b4:	37e9                	jal	2040667e <__metal_shutdown_exit>
	...

20406700 <__metal_vector_table>:
IRQ_0():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20406700:	bf2fc06f          	j	20402af2 <metal_interrupt_vector_handler>

20406704 <IRQ_1>:
IRQ_1():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20406704:	beefc06f          	j	20402af2 <metal_interrupt_vector_handler>

20406708 <IRQ_2>:
IRQ_2():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20406708:	beafc06f          	j	20402af2 <metal_interrupt_vector_handler>

2040670c <IRQ_3>:
IRQ_3():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2040670c:	c14fc06f          	j	20402b20 <metal_software_interrupt_vector_handler>

20406710 <IRQ_4>:
IRQ_4():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20406710:	be2fc06f          	j	20402af2 <metal_interrupt_vector_handler>

20406714 <IRQ_5>:
IRQ_5():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20406714:	bdefc06f          	j	20402af2 <metal_interrupt_vector_handler>

20406718 <IRQ_6>:
IRQ_6():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20406718:	bdafc06f          	j	20402af2 <metal_interrupt_vector_handler>

2040671c <IRQ_7>:
IRQ_7():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2040671c:	cfefc06f          	j	20402c1a <metal_timer_interrupt_vector_handler>

20406720 <IRQ_8>:
IRQ_8():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20406720:	bd2fc06f          	j	20402af2 <metal_interrupt_vector_handler>

20406724 <IRQ_9>:
IRQ_9():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20406724:	bcefc06f          	j	20402af2 <metal_interrupt_vector_handler>

20406728 <IRQ_10>:
IRQ_10():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20406728:	bcafc06f          	j	20402af2 <metal_interrupt_vector_handler>

2040672c <IRQ_11>:
IRQ_11():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
2040672c:	bc6fc06f          	j	20402af2 <metal_interrupt_vector_handler>

20406730 <IRQ_12>:
IRQ_12():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20406730:	bc2fc06f          	j	20402af2 <metal_interrupt_vector_handler>

20406734 <IRQ_13>:
IRQ_13():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20406734:	bbefc06f          	j	20402af2 <metal_interrupt_vector_handler>

20406738 <IRQ_14>:
IRQ_14():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20406738:	bbafc06f          	j	20402af2 <metal_interrupt_vector_handler>

2040673c <IRQ_15>:
IRQ_15():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
2040673c:	bb6fc06f          	j	20402af2 <metal_interrupt_vector_handler>

20406740 <IRQ_LC0>:
IRQ_LC0():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20406740:	839fc06f          	j	20402f78 <metal_lc0_interrupt_vector_handler>

20406744 <IRQ_LC1>:
IRQ_LC1():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20406744:	8cbfc06f          	j	2040300e <metal_lc1_interrupt_vector_handler>

20406748 <IRQ_LC2>:
IRQ_LC2():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20406748:	95dfc06f          	j	204030a4 <metal_lc2_interrupt_vector_handler>

2040674c <IRQ_LC3>:
IRQ_LC3():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
2040674c:	9effc06f          	j	2040313a <metal_lc3_interrupt_vector_handler>

20406750 <IRQ_LC4>:
IRQ_LC4():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20406750:	a81fc06f          	j	204031d0 <metal_lc4_interrupt_vector_handler>

20406754 <IRQ_LC5>:
IRQ_LC5():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20406754:	b13fc06f          	j	20403266 <metal_lc5_interrupt_vector_handler>

20406758 <IRQ_LC6>:
IRQ_LC6():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20406758:	ba5fc06f          	j	204032fc <metal_lc6_interrupt_vector_handler>

2040675c <IRQ_LC7>:
IRQ_LC7():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
2040675c:	c37fc06f          	j	20403392 <metal_lc7_interrupt_vector_handler>

20406760 <IRQ_LC8>:
IRQ_LC8():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20406760:	cc9fc06f          	j	20403428 <metal_lc8_interrupt_vector_handler>

20406764 <IRQ_LC9>:
IRQ_LC9():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20406764:	d5bfc06f          	j	204034be <metal_lc9_interrupt_vector_handler>

20406768 <IRQ_LC10>:
IRQ_LC10():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20406768:	dedfc06f          	j	20403554 <metal_lc10_interrupt_vector_handler>

2040676c <IRQ_LC11>:
IRQ_LC11():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
2040676c:	e7ffc06f          	j	204035ea <metal_lc11_interrupt_vector_handler>

20406770 <IRQ_LC12>:
IRQ_LC12():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20406770:	f11fc06f          	j	20403680 <metal_lc12_interrupt_vector_handler>

20406774 <IRQ_LC13>:
IRQ_LC13():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20406774:	fa3fc06f          	j	20403716 <metal_lc13_interrupt_vector_handler>

20406778 <IRQ_LC14>:
IRQ_LC14():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20406778:	834fd06f          	j	204037ac <metal_lc14_interrupt_vector_handler>

2040677c <IRQ_LC15>:
IRQ_LC15():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
2040677c:	8c6fd06f          	j	20403842 <metal_lc15_interrupt_vector_handler>

20406780 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:180
{
20406780:	1101                	addi	sp,sp,-32
20406782:	ce22                	sw	s0,28(sp)
20406784:	1000                	addi	s0,sp,32
20406786:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:181
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2040678a:	fec42703          	lw	a4,-20(s0)
2040678e:	800007b7          	lui	a5,0x80000
20406792:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffebf0>
20406796:	00f71763          	bne	a4,a5,204067a4 <__metal_driver_fixed_clock_rate+0x24>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:182
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2040679a:	00f427b7          	lui	a5,0xf42
2040679e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
204067a2:	a825                	j	204067da <__metal_driver_fixed_clock_rate+0x5a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:184
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
204067a4:	fec42703          	lw	a4,-20(s0)
204067a8:	800007b7          	lui	a5,0x80000
204067ac:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffebfc>
204067b0:	00f71763          	bne	a4,a5,204067be <__metal_driver_fixed_clock_rate+0x3e>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:185
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
204067b4:	044aa7b7          	lui	a5,0x44aa
204067b8:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
204067bc:	a839                	j	204067da <__metal_driver_fixed_clock_rate+0x5a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:187
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
204067be:	fec42703          	lw	a4,-20(s0)
204067c2:	800007b7          	lui	a5,0x80000
204067c6:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffec08>
204067ca:	00f71763          	bne	a4,a5,204067d8 <__metal_driver_fixed_clock_rate+0x58>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:188
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
204067ce:	01e857b7          	lui	a5,0x1e85
204067d2:	80078793          	addi	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84000>
204067d6:	a011                	j	204067da <__metal_driver_fixed_clock_rate+0x5a>
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:191
		return 0;
204067d8:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/bsp/build/debug/./metal/machine.h:193
}
204067da:	853e                	mv	a0,a5
204067dc:	4472                	lw	s0,28(sp)
204067de:	6105                	addi	sp,sp,32
204067e0:	8082                	ret

204067e2 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
204067e2:	1101                	addi	sp,sp,-32
204067e4:	ce06                	sw	ra,28(sp)
204067e6:	cc22                	sw	s0,24(sp)
204067e8:	1000                	addi	s0,sp,32
204067ea:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
204067ee:	fec42503          	lw	a0,-20(s0)
204067f2:	3779                	jal	20406780 <__metal_driver_fixed_clock_rate>
204067f4:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/fixed-clock.c:14
}
204067f6:	853e                	mv	a0,a5
204067f8:	40f2                	lw	ra,28(sp)
204067fa:	4462                	lw	s0,24(sp)
204067fc:	6105                	addi	sp,sp,32
204067fe:	8082                	ret

20406800 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20406800:	1101                	addi	sp,sp,-32
20406802:	ce06                	sw	ra,28(sp)
20406804:	cc22                	sw	s0,24(sp)
20406806:	1000                	addi	s0,sp,32
20406808:	fea42623          	sw	a0,-20(s0)
2040680c:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20406810:	fec42503          	lw	a0,-20(s0)
20406814:	37f9                	jal	204067e2 <__metal_driver_fixed_clock_get_rate_hz>
20406816:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/src/drivers/fixed-clock.c:19
}
20406818:	853e                	mv	a0,a5
2040681a:	40f2                	lw	ra,28(sp)
2040681c:	4462                	lw	s0,24(sp)
2040681e:	6105                	addi	sp,sp,32
20406820:	8082                	ret

20406822 <_exit>:
_exit():
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20406822:	1101                	addi	sp,sp,-32
20406824:	ce06                	sw	ra,28(sp)
20406826:	cc22                	sw	s0,24(sp)
20406828:	1000                	addi	s0,sp,32
2040682a:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/qemu_sifive_e31_empty/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
2040682e:	fec42503          	lw	a0,-20(s0)
20406832:	e6fff0ef          	jal	ra,204066a0 <metal_shutdown>
