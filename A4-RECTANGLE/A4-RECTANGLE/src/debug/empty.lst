
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/debug/empty.elf:     file format elf32-littleriscv
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/debug/empty.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20400000

Program Header:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x00000f60 memsz 0x00000f60 flags rwx
    LOAD off    0x00008000 vaddr 0x80000000 paddr 0x204067b8 align 2**12
         filesz 0x000007c8 memsz 0x000007c8 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x000007c8 vaddr 0x800007c8 paddr 0x800007c8 align 2**12
         filesz 0x00000000 memsz 0x00000ca8 flags rw-
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00001f80 vaddr 0x20400f80 paddr 0x20400f80 align 2**12
         filesz 0x00005836 memsz 0x00005836 flags r-x
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002dc  20400000  20400000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  204002e0  204002e0  000012e0  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  204002ec  204002ec  000012ec  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000bf8  20400368  20400368  00001368  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             00005836  20400f80  20400f80  00001f80  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             000007c8  80000000  204067b8  00008000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              000000a4  800007c8  800007c8  000087c8  2**3  ALLOC
  7 .stack            00000400  80000870  80000870  000087c8  2**4  ALLOC
  8 .heap             00000800  80000c70  80000c70  000087c8  2**3  ALLOC
  9 .debug_info       0001ee48  00000000  00000000  000087c8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     00002a31  00000000  00000000  00027610  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000b98  00000000  00000000  0002a048  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     00000988  00000000  00000000  0002abe0  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000a62c  00000000  00000000  0002b568  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        00004a60  00000000  00000000  00035b94  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000030  00000000  00000000  0003a5f4  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002f  00000000  00000000  0003a624  2**0  CONTENTS, READONLY
 17 .debug_frame      00002dd8  00000000  00000000  0003a654  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
204002e0 l    d  .init_array	00000000 .init_array
204002ec l    d  .ctors	00000000 .ctors
20400368 l    d  .rodata	00000000 .rodata
20400f80 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
800007c8 l    d  .bss	00000000 .bss
80000870 l    d  .stack	00000000 .stack
80000c70 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
204000c0 l     F .init	00000000 __metal_memory_scrub
2040012e l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400240 l       .init	00000000 _skip_init
204003e8 l       .rodata	00000000 argv
204003ec l       .rodata	00000000 envp
204003f0 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20404d1c l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20404d36 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20404d50 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20404d66 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20404d7a l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20404d8c l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20404d9c l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20404db2 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20404dc4 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
204005ec l     O .rodata	00000880 pll_configs
20404dda l     F .text	0000004e get_pll_config_freq
2040503c l     F .text	000000ac find_closest_config
204050e8 l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 findfp.c
2040148c l     F .text	00000068 std
00000000 l    df *ABS*	00000000 riscv_clint0.c
2040215c l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20402186 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
204021ae l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
204021ea l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
2040234a l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20402888 l     F .text	00000024 __metal_driver_cpu_hartid
204028ac l     F .text	0000002a __metal_driver_cpu_timebase
204028d6 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20402900 l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
2040426e l     F .text	0000002a __metal_driver_sifive_plic0_control_base
20404298 l     F .text	00000028 __metal_driver_sifive_plic0_num_interrupts
204042c0 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
204042e8 l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20404310 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
20404332 l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20405476 l     F .text	00000026 __metal_driver_sifive_gpio0_base
2040549c l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
204054c6 l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20405d9a l     F .text	0000002a __metal_driver_sifive_uart0_control_base
20405dc4 l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
20405df2 l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
20405e1a l     F .text	0000002e __metal_driver_sifive_uart0_clock
20405e48 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
20405e72 l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
20405e9a l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
20406260 l     F .text	000000da pre_rate_change_callback_func
2040633a l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20404b2c l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20404b46 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20404b5c l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20404b70 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20404c2c l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20404c46 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20404c5c l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20404c70 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
204053fe l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 sifive_test0.c
20405d2a l     F .text	00000026 __metal_driver_sifive_test0_base
00000000 l    df *ABS*	00000000 fixed-clock.c
20406700 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
800007a4 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
800007e0 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
800007d8 l     O .bss	00000004 init_done.1
800007dc l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
20406680 l       .text	00000000 IRQ_0
20406684 l       .text	00000000 IRQ_1
20406688 l       .text	00000000 IRQ_2
2040668c l       .text	00000000 IRQ_3
20406690 l       .text	00000000 IRQ_4
20406694 l       .text	00000000 IRQ_5
20406698 l       .text	00000000 IRQ_6
2040669c l       .text	00000000 IRQ_7
204066a0 l       .text	00000000 IRQ_8
204066a4 l       .text	00000000 IRQ_9
204066a8 l       .text	00000000 IRQ_10
204066ac l       .text	00000000 IRQ_11
204066b0 l       .text	00000000 IRQ_12
204066b4 l       .text	00000000 IRQ_13
204066b8 l       .text	00000000 IRQ_14
204066bc l       .text	00000000 IRQ_15
204066c0 l       .text	00000000 IRQ_LC0
204066c4 l       .text	00000000 IRQ_LC1
204066c8 l       .text	00000000 IRQ_LC2
204066cc l       .text	00000000 IRQ_LC3
204066d0 l       .text	00000000 IRQ_LC4
204066d4 l       .text	00000000 IRQ_LC5
204066d8 l       .text	00000000 IRQ_LC6
204066dc l       .text	00000000 IRQ_LC7
204066e0 l       .text	00000000 IRQ_LC8
204066e4 l       .text	00000000 IRQ_LC9
204066e8 l       .text	00000000 IRQ_LC10
204066ec l       .text	00000000 IRQ_LC11
204066f0 l       .text	00000000 IRQ_LC12
204066f4 l       .text	00000000 IRQ_LC13
204066f8 l       .text	00000000 IRQ_LC14
204066fc l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
204002ec l       .init_array	00000000 metal_constructors_end
204002f0 l       .init_array	00000000 __fini_array_end
204002f0 l       .init_array	00000000 metal_destructors_end
204002f0 l       .init_array	00000000 metal_destructors_start
204002f0 l       .init_array	00000000 __fini_array_start
204002e0 l       .init_array	00000000 __init_array_end
204002e0 l       .init_array	00000000 __preinit_array_end
204002e0 l       .init_array	00000000 __init_array_start
204002e0 l       .init_array	00000000 metal_constructors_start
204002e0 l       .init_array	00000000 __preinit_array_start
20400ef4 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
20401b42 g     F .text	0000002e _isatty_r
20403150  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20401032 g     F .text	000000da _puts_r
20401b70 g     F .text	00000032 _lseek_r
204064d2 g     F .text	00000026 metal_clock_get_rate_hz
204061c0 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20402526 g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20406014 g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
204030ba  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20403962 g     F .text	00000058 __metal_valid_interrupt_id
204002e8 g     O .init_array	00000004 _use_hfxosc_ptr
20403dde g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80000fa0 g       .data	00000000 __global_pointer$
204002ec g     F .ctors	00000024 metal_tty_init
2040647e g     F .text	00000054 _metal_clock_append_to_callbacks
2040438c g     F .text	00000046 __metal_plic0_complete_interrupt
20403ba6 g     F .text	000001e0 __metal_driver_riscv_cpu_controller_interrupt_register
20400fa0 g       .text	00000000 rectangle
204002e4 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
20401a76 g     F .text	00000036 __sseek
20401542 g     F .text	0000006a __sinit
20401118 g     F .text	000000c0 __swbuf_r
800007c8 g       .data	00000000 __tls_base
204014fe g     F .text	00000044 __sfmoreglue
20401ba4 g     F .text	00000002 __malloc_unlock
204065cc g     F .text	0000002e metal_cpu_get
80000758 g     O .data	00000020 __metal_dt_serial_10013000
20405904 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
204003fc g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
8000086c g       .bss	00000000 metal_segment_bss_target_end
2040221a g     F .text	0000009a __metal_clint0_mtime_get
204041e2 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
204060d8 g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
204056ba g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20405d50 g     F .text	0000004a __metal_driver_sifive_test0_exit
20401d8a g     F .text	0000000a __errno
80000000 g       .rodata	00000000 metal_segment_itim_target_start
20405fe4 g     F .text	00000030 __metal_driver_sifive_uart0_txready
20405f72 g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
20400142 g     F .init	0000000e __metal_synchronize_harts
800007c8 g       .data	00000000 metal_segment_bss_target_start
204022b4 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20401b12 g     F .text	00000030 _fstat_r
20405b54 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
800007d0 g     O .bss	00000004 errno
20404ecc g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20406542 g     F .text	00000032 metal_clock_register_pre_rate_change_callback
2040343e  w    F .text	00000096 metal_lc9_interrupt_vector_handler
204000cc  w    F .init	00000000 __metal_before_start
20402086  w    F .text	00000014 metal_init_run
20400588 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
20400544 g     O .rodata	00000044 __metal_driver_vtable_cpu
2040212e g     F .text	0000002e metal_uart_set_baud_rate
2040636a g     F .text	000000d2 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20403e6a g     F .text	00000070 __metal_driver_cpu_mcycle_get
20400e6c g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000c70 g       .heap	00000000 metal_segment_heap_target_start
204014f4 g     F .text	0000000a _cleanup_r
800007b4 g     O .data	00000008 __metal_dt_cpu_0
204033a8  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20405298 g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20404a90 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
2040110c g     F .text	0000000c puts
20403696  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20402a92 g     F .text	00000018 __metal_default_exception_handler
20401bfa g     F .text	00000026 _fstat
20402854 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20403dfa g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
20402924 g     F .text	00000030 __metal_driver_cpu_get
204004e0 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20402986 g     F .text	00000018 __metal_interrupt_global_disable
20404b04 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20403312  w    F .text	00000096 metal_lc7_interrupt_vector_handler
204034d4  w    F .text	00000096 metal_lc10_interrupt_vector_handler
204019ca g     F .text	0000002e _sbrk_r
204048b0 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20403a76 g     F .text	0000004e __metal_exception_register
20401f96 g     F .text	00000078 metal_init
20401ba6 g     F .text	00000032 _read_r
20403ffc g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
2040579c g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
20402b82 g     F .text	00000068 __metal_default_sw_handler
20406574 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
20405ec4 g     F .text	0000001e __metal_driver_sifive_uart0_interrupt_controller
20401c20 g     F .text	00000020 _isatty
20405862 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
20405f00 g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
20400f58 g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
20400f38 g     O .rodata	00000004 _global_impure_ptr
20402bea  w    F .text	00000092 metal_timer_interrupt_vector_handler
20401df4 g     F .text	0000005e __libc_init_array
204057dc g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
2040356a  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20404cfa g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20403d86 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20401c94 g     F .text	0000007e _sbrk
20405756 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
2040643c g     F .text	00000042 _metal_clock_call_all_callbacks
204002ba g     F .init	00000002 _init
204029e8 g     F .text	0000001a __metal_interrupt_timer_disable
2040594e g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
204040ba g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20400eb8 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20405f3a g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
204058a2 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20401dbe g     F .text	00000036 __libc_fini_array
80000790 g     O .data	0000000c __metal_dt_clock_4
20405cdc g     F .text	00000020 __metal_driver_gpio_interrupt_controller
2040200e g     F .text	00000078 metal_fini
20404044 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
2040424e g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20402a3a g     F .text	0000002c __metal_interrupt_local_enable
20402820 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
204020ae g     F .text	00000026 metal_tty_putc
2040458a g     F .text	00000018 __metal_plic0_default_handler
20401d12  w    F .text	0000006e write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20404900 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20402c7c g     F .text	00000016 __metal_default_beu_handler
20400388 g     O .rodata	00000020 __sf_fake_stderr
20402a1e g     F .text	0000001c __metal_interrupt_external_disable
20405ee2 g     F .text	0000001e __metal_driver_sifive_uart0_get_interrupt_id
20403e4e g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20403ac4 g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
2040419c g     F .text	00000046 __metal_driver_cpu_exception_register
2040299e g     F .text	00000018 __metal_interrupt_software_enable
20402f8e  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20401850 g     F .text	000000a2 _free_r
800007d4 g     O .bss	00000004 _global_atexit
20404452 g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
20403858 g     F .text	00000058 __metal_controller_interrupt_vector_mode
20401ece g     F .text	000000c8 __call_exitprocs
80000c70 g       .stack	00000000 _sp
204002e0 g     O .init_array	00000004 _metal_tty_init_ptr
20400150 g     F .init	00000000 _start
20404b86 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20401c40 g     F .text	0000002a _lseek
2040417c g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20404210 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20402a02 g     F .text	0000001c __metal_interrupt_external_enable
20401e52 g     F .text	0000007c __register_exitproc
20406108 g     F .text	00000042 __metal_driver_sifive_uart0_putc
20404646 g     F .text	00000158 __metal_driver_riscv_plic0_init
20404860 g     F .text	00000050 __metal_driver_riscv_plic0_enable
2040572a g     F .text	0000002c __metal_driver_sifive_gpio0_output
2040327c  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20402954 g     F .text	0000001a __metal_myhart_id
20405cfc g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20402af0  w    F .text	00000092 metal_software_interrupt_vector_handler
20403db2 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20401ae4 g     F .text	0000002e _close_r
204061a0 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
20402408 g     F .text	000000da __metal_driver_riscv_clint0_register
800007ac g     O .data	00000008 __metal_dt_clint_2000000
204011d8 g     F .text	0000010a __swsetup_r
204015ac g     F .text	0000009c __sfp
204064f8 g     F .text	0000004a metal_clock_set_rate_hz
204019f8 g     F .text	00000030 __sread
2040567a g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
204002bc  w    F .init	00000000 secondary_main
20402ac2  w    F .text	0000002e metal_interrupt_vector_handler
20401ba2 g     F .text	00000002 __malloc_lock
20405fac g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20401428 g     F .text	00000064 _fflush_r
20404418 g     F .text	0000003a __metal_plic0_get_threshold
20405410 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
204003a8 g     O .rodata	00000020 __sf_fake_stdin
204039ba g     F .text	000000bc __metal_local_interrupt_enable
204026e2 g     F .text	0000013e __metal_driver_riscv_clint0_command_request
204017a8 g     F .text	000000a8 memset
204031e6  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20400f80 g     F .text	00000020 main
800007c8 g       .data	00000000 metal_segment_data_target_end
2040608e g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
20400f3c g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
20404058 g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
2040411c g     F .text	00000060 __metal_driver_cpu_get_msip
20406636 g     F .text	00000016 metal_shutdown
80000000 g       .rodata	00000000 metal_segment_itim_target_end
2040422e g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20404350 g     F .text	0000003c __metal_plic0_claim_interrupt
2040605e g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
20401aac g     F .text	00000006 __sclose
20403600  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2040008a g     F .init	00000000 metal_mem_scrub
204018f2 g     F .text	000000d8 _malloc_r
2040250a g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
800007c4 g     O .data	00000004 __metal_dt_prci_10008000
20403eda g     F .text	00000046 __metal_driver_cpu_timebase_get
204049f4 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20400000 g       .init	00000000 _enter
204065fa g     F .text	0000001a metal_cpu_get_current_hartid
20404c86 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20406680 g       .text	00000000 __metal_vector_table
20400f60 g       *ABS*	00000000 metal_segment_itim_source_start
800007a8  w    O .data	00000004 __metal_cpu_table
80000088 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
204002ba g     F .init	00000002 _fini
80000000 g       .rodata	00000000 metal_segment_lim_target_start
204044b4 g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
2040033c g     F .ctors	0000002a use_hfxosc
2040296e g     F .text	00000018 __metal_interrupt_global_enable
20401d80 g     F .text	0000000a atexit
20401ab2 g     F .text	00000032 _write_r
204029ce g     F .text	0000001a __metal_interrupt_timer_enable
2040614a g     F .text	00000056 __metal_driver_sifive_uart0_getc
20402630 g     F .text	000000b2 __metal_driver_riscv_clint0_disable
800007a0 g     O .data	00000004 _impure_ptr
20403f86 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
204012e2 g     F .text	00000146 __sflush_r
20406614 g     F .text	00000022 __metal_shutdown_exit
20404930 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
20404e28 g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
2040543e g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20406762 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
2040257e g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20400f54 g     O .rodata	00000004 __metal_driver_vtable_sifive_test0
204067b8 g       *ABS*	00000000 metal_segment_data_source_start
20400134 g       .init	00000000 early_trap_vector
80001470 g       .heap	00000000 metal_segment_heap_target_end
204038b0 g     F .text	000000b2 __metal_controller_interrupt_vector
80000784 g     O .data	0000000c __metal_dt_clock_1
80000458 g     O .data	00000300 __metal_dt_interrupt_controller_c000000
204016b2 g     F .text	0000005a __swhatbuf_r
2040581c g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20402c92 g     F .text	00000066 __metal_default_timer_handler
20401d12 g     F .text	0000006e _write
204045a2 g     F .text	000000a4 __metal_plic0_handler
20403024  w    F .text	00000096 metal_lc2_interrupt_vector_handler
204037c2  w    F .text	00000096 metal_lc15_interrupt_vector_handler
204065a6 g     F .text	00000026 metal_cpu_interrupt_controller
800007c0 g     O .data	00000004 __metal_dt_test_100000
20401a28 g     F .text	0000004e __swrite
20401d94 g     F .text	0000002a exit
20401648 g     F .text	0000006a _fwalk_reent
20406780 g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
20400f60 g       *ABS*	00000000 metal_segment_lim_source_start
204003c8 g     O .rodata	00000020 __sf_fake_stdout
800007bc g     O .data	00000004 __metal_dt_gpio_10012000
20402aaa g     F .text	00000018 __metal_default_interrupt_handler
20402100 g     F .text	0000002e metal_uart_putc
20401c6a g     F .text	0000002a _read
2040209a  w    F .text	00000014 metal_fini_run
20405700 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20402d00 g     F .text	0000017e __metal_exception_handler
20402ef8  w    F .text	00000096 metal_lc0_interrupt_vector_handler
204067a2 g     F .text	00000014 _exit
20403f20 g     F .text	00000066 __metal_driver_cpu_mtime_get
2040170c g     F .text	0000009c __smakebuf_r
204024e2 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
800007cc g     O .bss	00000004 __malloc_sbrk_start
2040372c  w    F .text	00000096 metal_lc14_interrupt_vector_handler
20400f44 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
20402380 g     F .text	00000088 __metal_driver_riscv_clint0_init
800007c8 g     O .bss	00000004 __malloc_free_list
20400310 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20404016 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
204044e8 g     F .text	000000a2 __metal_plic0_enable
20400088  w      .init	00000000 __register_frame_info
20404c0a g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
2040402a g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20402a66 g     F .text	0000002c __metal_interrupt_local_disable
204029b6 g     F .text	00000018 __metal_interrupt_software_disable
204020d4 g     F .text	0000002c metal_uart_init
80000778 g     O .data	0000000c __metal_dt_clock_3
204043d2 g     F .text	00000046 __metal_plic0_set_threshold
20404958 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
20401bd8 g     F .text	00000022 _close
20400f4c g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
2040479e g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20400000 <_enter>:
_enter():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	fa018193          	addi	gp,gp,-96 # 80000fa0 <__global_pointer$>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20400008:	00000297          	auipc	t0,0x0
2040000c:	01828293          	addi	t0,t0,24 # 20400020 <_enter+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20400014:	00100293          	li	t0,1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:32
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400020:	00000297          	auipc	t0,0x0
20400024:	11428293          	addi	t0,t0,276 # 20400134 <early_trap_vector>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20400028:	30529073          	csrw	mtvec,t0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2040002c:	00000113          	li	sp,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20400030:	00011463          	bnez	sp,20400038 <_enter+0x38>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:56
    la sp, _sp
20400034:	cd018113          	addi	sp,gp,-816 # 80000c70 <_sp>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
20400038:	f1402573          	csrr	a0,mhartid
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:60
    li t0, 0
2040003c:	4281                	li	t0,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:61
    la t1, __stack_size
2040003e:	40000313          	li	t1,1024
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20400042:	ff017113          	andi	sp,sp,-16
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
20400046:	00a28563          	beq	t0,a0,20400050 <_enter+0x50>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:65
    add sp, sp, t1
2040004a:	911a                	add	sp,sp,t1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:66
    addi t0, t0, 1
2040004c:	0285                	addi	t0,t0,1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:67
    j 1b
2040004e:	bfd5                	j	20400042 <_enter+0x42>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20400050:	00000097          	auipc	ra,0x0
20400054:	07c08093          	addi	ra,ra,124 # 204000cc <__metal_before_start>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:77
    beqz ra, 1f
20400058:	00008363          	beqz	ra,2040005e <_enter+0x5e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:78
    jalr ra
2040005c:	9082                	jalr	ra
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
2040005e:	f1402573          	csrr	a0,mhartid
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:85
    li a1, 0
20400062:	4581                	li	a1,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:86
    li a2, 0
20400064:	4601                	li	a2,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:87
    call _start
20400066:	20ed                	jal	20400150 <_start>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20400068:	00000093          	li	ra,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:93
    beqz ra, 1f
2040006c:	00008363          	beqz	ra,20400072 <_enter+0x72>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:94
    jalr ra
20400070:	9082                	jalr	ra
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20400072:	00000297          	auipc	t0,0x0
20400076:	00c28293          	addi	t0,t0,12 # 2040007e <_enter+0x7e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:100
     csrw mtvec, t0
2040007a:	30529073          	csrw	mtvec,t0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
2040007e:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:103
     j 1b
20400082:	bff5                	j	2040007e <_enter+0x7e>
20400084:	0000                	unimp
	...

20400088 <__register_frame_info>:
__register_frame_info():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20400088:	8082                	ret

2040008a <metal_mem_scrub>:
metal_mem_scrub():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2040008a:	46a1                	li	a3,8
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
2040008c:	3006b373          	csrrc	t1,mstatus,a3
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20400090:	4291                	li	t0,4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20400092:	0055c563          	blt	a1,t0,2040009c <metal_mem_scrub+0x12>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
20400096:	00357613          	andi	a2,a0,3
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2040009a:	ca11                	beqz	a2,204000ae <metal_mem_scrub+0x24>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
2040009c:	00050023          	sb	zero,0(a0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
204000a0:	0505                	addi	a0,a0,1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
204000a2:	15fd                	addi	a1,a1,-1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
204000a4:	feb047e3          	bgtz	a1,20400092 <metal_mem_scrub+0x8>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
204000a8:	30031073          	csrw	mstatus,t1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:39
    ret
204000ac:	8082                	ret
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
204000ae:	00052023          	sw	zero,0(a0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
204000b2:	0511                	addi	a0,a0,4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
204000b4:	15f1                	addi	a1,a1,-4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
204000b6:	fcb04ee3          	bgtz	a1,20400092 <metal_mem_scrub+0x8>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
204000ba:	30031073          	csrw	mstatus,t1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:46
    ret
204000be:	8082                	ret

204000c0 <__metal_memory_scrub>:
__metal_memory_scrub():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
204000c0:	00032023          	sw	zero,0(t1)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
204000c4:	0311                	addi	t1,t1,4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
204000c6:	fe734de3          	blt	t1,t2,204000c0 <__metal_memory_scrub>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
204000ca:	8082                	ret

204000cc <__metal_before_start>:
__metal_before_start():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
204000cc:	8406                	mv	s0,ra
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
204000ce:	dfc00297          	auipc	t0,0xdfc00
204000d2:	f3228293          	addi	t0,t0,-206 # 0 <__metal_boot_hart>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
204000d6:	04028c63          	beqz	t0,2040012e <skip_scrub>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
204000da:	dfc00297          	auipc	t0,0xdfc00
204000de:	f2628293          	addi	t0,t0,-218 # 0 <__metal_boot_hart>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
204000e2:	f14027f3          	csrr	a5,mhartid
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
204000e6:	46a1                	li	a3,8
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
204000e8:	3006b073          	csrc	mstatus,a3
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
204000ec:	830a                	mv	t1,sp
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
204000ee:	dfc00397          	auipc	t2,0xdfc00
204000f2:	31238393          	addi	t2,t2,786 # 400 <__stack_size>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
204000f6:	938a                	add	t2,t2,sp
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
204000f8:	00730363          	beq	t1,t2,204000fe <__metal_before_start+0x32>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
204000fc:	37d1                	jal	204000c0 <__metal_memory_scrub>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
204000fe:	02579863          	bne	a5,t0,2040012e <skip_scrub>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
20400102:	5fc00317          	auipc	t1,0x5fc00
20400106:	efe30313          	addi	t1,t1,-258 # 80000000 <impure_data>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
2040010a:	5fc00397          	auipc	t2,0x5fc00
2040010e:	6be38393          	addi	t2,t2,1726 # 800007c8 <__malloc_free_list>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
20400112:	00730363          	beq	t1,t2,20400118 <__metal_before_start+0x4c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20400116:	376d                	jal	204000c0 <__metal_memory_scrub>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
20400118:	5fc00317          	auipc	t1,0x5fc00
2040011c:	ee830313          	addi	t1,t1,-280 # 80000000 <impure_data>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
20400120:	5fc00397          	auipc	t2,0x5fc00
20400124:	ee038393          	addi	t2,t2,-288 # 80000000 <impure_data>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
20400128:	00730363          	beq	t1,t2,2040012e <skip_scrub>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
2040012c:	3f51                	jal	204000c0 <__metal_memory_scrub>

2040012e <skip_scrub>:
skip_scrub():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
2040012e:	80a2                	mv	ra,s0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/scrub.S:130
    ret
20400130:	8082                	ret
	...

20400134 <early_trap_vector>:
early_trap_vector():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20400134:	342022f3          	csrr	t0,mcause
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/trap.S:65
    csrr t1, mepc
20400138:	34102373          	csrr	t1,mepc
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/trap.S:66
    csrr t2, mtval
2040013c:	343023f3          	csrr	t2,mtval
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/trap.S:67
    j early_trap_vector
20400140:	bfd5                	j	20400134 <early_trap_vector>

20400142 <__metal_synchronize_harts>:
__metal_synchronize_harts():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20400142:	1141                	addi	sp,sp,-16
20400144:	c622                	sw	s0,12(sp)
20400146:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20400148:	0001                	nop
2040014a:	4432                	lw	s0,12(sp)
2040014c:	0141                	addi	sp,sp,16
2040014e:	8082                	ret

20400150 <_start>:
_start():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20400150:	8406                	mv	s0,ra
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20400152:	5fc01197          	auipc	gp,0x5fc01
20400156:	e4e18193          	addi	gp,gp,-434 # 80000fa0 <__global_pointer$>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2040015a:	00000293          	li	t0,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
2040015e:	0e551163          	bne	a0,t0,20400240 <_skip_init>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
20400162:	00006297          	auipc	t0,0x6
20400166:	65628293          	addi	t0,t0,1622 # 204067b8 <metal_segment_data_source_start>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
2040016a:	5fc00317          	auipc	t1,0x5fc00
2040016e:	e9630313          	addi	t1,t1,-362 # 80000000 <impure_data>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
20400172:	5fc00397          	auipc	t2,0x5fc00
20400176:	65638393          	addi	t2,t2,1622 # 800007c8 <__malloc_free_list>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
2040017a:	00628c63          	beq	t0,t1,20400192 <_start+0x42>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
2040017e:	00735a63          	bge	t1,t2,20400192 <_start+0x42>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20400182:	0002a503          	lw	a0,0(t0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
20400186:	0291                	addi	t0,t0,4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20400188:	00a32023          	sw	a0,0(t1)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
2040018c:	0311                	addi	t1,t1,4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
2040018e:	fe734ae3          	blt	t1,t2,20400182 <_start+0x32>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
20400192:	00001297          	auipc	t0,0x1
20400196:	dce28293          	addi	t0,t0,-562 # 20400f60 <metal_segment_itim_source_start>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
2040019a:	5fc00317          	auipc	t1,0x5fc00
2040019e:	e6630313          	addi	t1,t1,-410 # 80000000 <impure_data>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
204001a2:	5fc00397          	auipc	t2,0x5fc00
204001a6:	e5e38393          	addi	t2,t2,-418 # 80000000 <impure_data>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
204001aa:	00628c63          	beq	t0,t1,204001c2 <_start+0x72>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
204001ae:	00735a63          	bge	t1,t2,204001c2 <_start+0x72>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001b2:	0002a503          	lw	a0,0(t0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
204001b6:	0291                	addi	t0,t0,4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
204001b8:	00a32023          	sw	a0,0(t1)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
204001bc:	0311                	addi	t1,t1,4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
204001be:	fe734ae3          	blt	t1,t2,204001b2 <_start+0x62>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
204001c2:	0000100f          	fence.i
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
204001c6:	00001297          	auipc	t0,0x1
204001ca:	d9a28293          	addi	t0,t0,-614 # 20400f60 <metal_segment_itim_source_start>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
204001ce:	5fc00317          	auipc	t1,0x5fc00
204001d2:	e3230313          	addi	t1,t1,-462 # 80000000 <impure_data>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
204001d6:	5fc00397          	auipc	t2,0x5fc00
204001da:	e2a38393          	addi	t2,t2,-470 # 80000000 <impure_data>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
204001de:	00628c63          	beq	t0,t1,204001f6 <_start+0xa6>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
204001e2:	00735a63          	bge	t1,t2,204001f6 <_start+0xa6>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001e6:	0002a503          	lw	a0,0(t0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
204001ea:	0291                	addi	t0,t0,4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
204001ec:	00a32023          	sw	a0,0(t1)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
204001f0:	0311                	addi	t1,t1,4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
204001f2:	fe734ae3          	blt	t1,t2,204001e6 <_start+0x96>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
204001f6:	0000100f          	fence.i
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
204001fa:	5fc00317          	auipc	t1,0x5fc00
204001fe:	5ce30313          	addi	t1,t1,1486 # 800007c8 <__malloc_free_list>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
20400202:	8cc18393          	addi	t2,gp,-1844 # 8000086c <metal_segment_bss_target_end>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
20400206:	00735763          	bge	t1,t2,20400214 <_start+0xc4>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2040020a:	00032023          	sw	zero,0(t1)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
2040020e:	0311                	addi	t1,t1,4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20400210:	fe734de3          	blt	t1,t2,2040020a <_start+0xba>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
20400214:	5fc00217          	auipc	tp,0x5fc00
20400218:	5b420213          	addi	tp,tp,1460 # 800007c8 <__malloc_free_list>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
2040021c:	c211                	beqz	a2,20400220 <_start+0xd0>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:167
  jalr a2
2040021e:	9602                	jalr	a2
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400220:	00002517          	auipc	a0,0x2
20400224:	b9e50513          	addi	a0,a0,-1122 # 20401dbe <__libc_fini_array>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:172
  call atexit
20400228:	359010ef          	jal	ra,20401d80 <atexit>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
2040022c:	3c9010ef          	jal	ra,20401df4 <__libc_init_array>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20400230:	00002517          	auipc	a0,0x2
20400234:	e6a50513          	addi	a0,a0,-406 # 2040209a <metal_fini_run>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:178
  call atexit
20400238:	349010ef          	jal	ra,20401d80 <atexit>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:179
  call metal_init_run
2040023c:	64b010ef          	jal	ra,20402086 <metal_init_run>

20400240 <_skip_init>:
_skip_init():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400240:	3709                	jal	20400142 <__metal_synchronize_harts>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
20400242:	56fd                	li	a3,-1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
20400244:	3046b073          	csrc	mie,a3
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
20400248:	3446b073          	csrc	mip,a3
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
2040024c:	301027f3          	csrr	a5,misa
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20400250:	00042737          	lui	a4,0x42
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
20400254:	8f7d                	and	a4,a4,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
20400256:	c709                	beqz	a4,20400260 <_skip_init+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
20400258:	3036b073          	csrc	mideleg,a3
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
2040025c:	3026b073          	csrc	medeleg,a3
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20400260:	00040737          	lui	a4,0x40
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
20400264:	8f7d                	and	a4,a4,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
20400266:	c319                	beqz	a4,2040026c <_skip_init+0x2c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
20400268:	1806b073          	csrc	satp,a3
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
2040026c:	6741                	lui	a4,0x10
2040026e:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
20400272:	8ff9                	and	a5,a5,a4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
20400274:	cb89                	beqz	a5,20400286 <_skip_init+0x46>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
20400276:	300027f3          	csrr	a5,mstatus
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
2040027a:	6709                	lui	a4,0x2
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
2040027c:	8fd9                	or	a5,a5,a4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
2040027e:	30079073          	csrw	mstatus,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
20400282:	00305073          	csrwi	fcsr,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
20400286:	301027f3          	csrr	a5,misa
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
2040028a:	00200737          	lui	a4,0x200
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
2040028e:	8ff9                	and	a5,a5,a4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
20400290:	c799                	beqz	a5,2040029e <_skip_init+0x5e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
20400292:	300027f3          	csrr	a5,mstatus
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
20400296:	2007e793          	ori	a5,a5,512
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
2040029a:	30079073          	csrw	mstatus,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
2040029e:	4505                	li	a0,1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
204002a0:	00000597          	auipc	a1,0x0
204002a4:	14858593          	addi	a1,a1,328 # 204003e8 <argv>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
204002a8:	00000617          	auipc	a2,0x0
204002ac:	14460613          	addi	a2,a2,324 # 204003ec <envp>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:236
  call secondary_main
204002b0:	2031                	jal	204002bc <secondary_main>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
204002b2:	2e3010ef          	jal	ra,20401d94 <exit>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
204002b6:	80a2                	mv	ra,s0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:248
  ret
204002b8:	8082                	ret

204002ba <_fini>:
_init():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
204002ba:	8082                	ret

204002bc <secondary_main>:
secondary_main():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
204002bc:	1141                	addi	sp,sp,-16
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
204002be:	c206                	sw	ra,4(sp)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
204002c0:	f14022f3          	csrr	t0,mhartid
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
204002c4:	00000313          	li	t1,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
204002c8:	00628563          	beq	t0,t1,204002d2 <secondary_main+0x16>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:281
1:
  wfi
204002cc:	10500073          	wfi
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:282
  j 1b
204002d0:	bff5                	j	204002cc <secondary_main+0x10>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:284
2:
  call main
204002d2:	4af000ef          	jal	ra,20400f80 <main>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
204002d6:	4092                	lw	ra,4(sp)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
204002d8:	0141                	addi	sp,sp,16
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/crt0.S:291
  ret
204002da:	8082                	ret

Disassembly of section .ctors:

204002ec <metal_tty_init>:
metal_tty_init():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
204002ec:	1141                	addi	sp,sp,-16
204002ee:	c606                	sw	ra,12(sp)
204002f0:	c422                	sw	s0,8(sp)
204002f2:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
204002f4:	67f1                	lui	a5,0x1c
204002f6:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
204002fa:	800007b7          	lui	a5,0x80000
204002fe:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20400302:	5d3010ef          	jal	ra,204020d4 <metal_uart_init>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/tty.c:30
}
20400306:	0001                	nop
20400308:	40b2                	lw	ra,12(sp)
2040030a:	4422                	lw	s0,8(sp)
2040030c:	0141                	addi	sp,sp,16
2040030e:	8082                	ret

20400310 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
20400310:	1101                	addi	sp,sp,-32
20400312:	ce06                	sw	ra,28(sp)
20400314:	cc22                	sw	s0,24(sp)
20400316:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400318:	285040ef          	jal	ra,20404d9c <__metal_driver_sifive_fe310_g000_pll_init_rate>
2040031c:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20400320:	fec42783          	lw	a5,-20(s0)
20400324:	c799                	beqz	a5,20400332 <metal_sifive_fe310_g000_pll_init+0x22>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
20400326:	800007b7          	lui	a5,0x80000
2040032a:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff320>
2040032e:	2fb040ef          	jal	ra,20404e28 <__metal_driver_sifive_fe310_g000_pll_init>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20400332:	0001                	nop
20400334:	40f2                	lw	ra,28(sp)
20400336:	4462                	lw	s0,24(sp)
20400338:	6105                	addi	sp,sp,32
2040033a:	8082                	ret

2040033c <use_hfxosc>:
use_hfxosc():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
2040033c:	1101                	addi	sp,sp,-32
2040033e:	ce06                	sw	ra,28(sp)
20400340:	cc22                	sw	s0,24(sp)
20400342:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400344:	259040ef          	jal	ra,20404d9c <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400348:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
2040034c:	fec42583          	lw	a1,-20(s0)
20400350:	800007b7          	lui	a5,0x80000
20400354:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff320>
20400358:	1a0060ef          	jal	ra,204064f8 <metal_clock_set_rate_hz>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
2040035c:	0001                	nop
2040035e:	40f2                	lw	ra,28(sp)
20400360:	4462                	lw	s0,24(sp)
20400362:	6105                	addi	sp,sp,32
20400364:	8082                	ret

Disassembly of section .text:

20400f80 <main>:
main():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/main.c:6
/* Copyright 2019 SiFive, Inc */
/* SPDX-License-Identifier: Apache-2.0 */

#include <stdio.h>
extern void rectangle(void);
int main() {
20400f80:	1141                	addi	sp,sp,-16
20400f82:	c606                	sw	ra,12(sp)
20400f84:	c422                	sw	s0,8(sp)
20400f86:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/main.c:7
	rectangle();
20400f88:	2821                	jal	20400fa0 <rectangle>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/main.c:8
    printf("Rectangle execution finished!\n");
20400f8a:	204007b7          	lui	a5,0x20400
20400f8e:	36878513          	addi	a0,a5,872 # 20400368 <use_hfxosc+0x2c>
20400f92:	2aad                	jal	2040110c <puts>
20400f94:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/main.c:9
}
20400f96:	853e                	mv	a0,a5
20400f98:	40b2                	lw	ra,12(sp)
20400f9a:	4422                	lw	s0,8(sp)
20400f9c:	0141                	addi	sp,sp,16
20400f9e:	8082                	ret

20400fa0 <rectangle>:
rectangle():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:8

rectangle:

// Initialize 64 bit plain text - each register is 32 bits here so we will only be using 16bits LSB from each register
// plaintext - 0x1234567812345678 --> 1234(a3), 5678(a2), 1234(a1), 5678(a0)
li a0, 0x56785678;
20400fa0:	56785537          	lui	a0,0x56785
20400fa4:	67850513          	addi	a0,a0,1656 # 56785678 <metal_segment_data_source_start+0x3637eec0>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:9
li a1, 0x12341234;
20400fa8:	123415b7          	lui	a1,0x12341
20400fac:	23458593          	addi	a1,a1,564 # 12341234 <__heap_size+0x12340a34>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:10
li a2, 0x56785678;
20400fb0:	56785637          	lui	a2,0x56785
20400fb4:	67860613          	addi	a2,a2,1656 # 56785678 <metal_segment_data_source_start+0x3637eec0>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:11
li a3, 0x12341234;
20400fb8:	123416b7          	lui	a3,0x12341
20400fbc:	23468693          	addi	a3,a3,564 # 12341234 <__heap_size+0x12340a34>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:15


// Initialize 64 bit key
li x5, 0xffffffff
20400fc0:	fff00293          	li	t0,-1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:16
li x6, 0xffffffff
20400fc4:	fff00313          	li	t1,-1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:17
li x7, 0x0
20400fc8:	4381                	li	t2,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:18
li x8, 0x0
20400fca:	4401                	li	s0,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:21

// XOR plain text and key, row1(text)^row1(key).... row3(text)^row3(key)
xor a0, a0, x5
20400fcc:	00554533          	xor	a0,a0,t0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:22
xor a1, a1, x6
20400fd0:	0065c5b3          	xor	a1,a1,t1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:23
xor a2, a2, x7
20400fd4:	00764633          	xor	a2,a2,t2
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:24
xor a3, a3, x8
20400fd8:	8ea1                	xor	a3,a3,s0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:31
// s-box circuit implementation
// 1. T1(t0) = NOT A1;
// 2. T2(t1) = A0 AND T1,
// 3. T3(t2) = A2 XOR A3,
// 4. B0(x14) = T2 XOR T3
not t0, a1
20400fda:	fff5c293          	not	t0,a1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:32
and t1, a0, t0
20400fde:	00557333          	and	t1,a0,t0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:33
xor t2, a2, a3
20400fe2:	00d643b3          	xor	t2,a2,a3
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:34
xor x14, t1, t2
20400fe6:	00734733          	xor	a4,t1,t2
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:40

// 5. T5(t3) = A3|T1
// 6. T6(t4) = A0^T5
// 7. B1(x15) = A2^T6

or t3, a3, t0
20400fea:	0056ee33          	or	t3,a3,t0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:41
xor t4, a0, t3
20400fee:	01c54eb3          	xor	t4,a0,t3
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:42
xor x15, a2, t4
20400ff2:	01d647b3          	xor	a5,a2,t4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:48

// 8. T8(t5) = a1 xor a2
// 9. T9(t6) = T3 and T6
// 10. B3(x17)= T8 xor T9

xor t5, a1, a2
20400ff6:	00c5cf33          	xor	t5,a1,a2
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:49
and t6, t2, t4
20400ffa:	01d3ffb3          	and	t6,t2,t4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:50
xor x17, t5, t6
20400ffe:	01ff48b3          	xor	a7,t5,t6
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:54

// 11. T11(t0) = B0 or T8
// 12. B2(x16) = T6 or T11
or t0, x14, t5
20401002:	01e762b3          	or	t0,a4,t5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:55
or x16, t4, t0
20401006:	005ee833          	or	a6,t4,t0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:64
// shift rows (rotated shifts)

//TODO: mask the first 16 bits

// C0 = B0 = x14, no operation needed
or a0, x14, x0
2040100a:	00076533          	or	a0,a4,zero
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:67

// C1 =B1 << 1;
slli t0, x15, 1
2040100e:	00179293          	slli	t0,a5,0x1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:68
srli x15, x15, 32-1
20401012:	83fd                	srli	a5,a5,0x1f
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:69
xor a1, x15, t0
20401014:	0057c5b3          	xor	a1,a5,t0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:72

// C2 =B2 << 12
slli t0, x16, 12
20401018:	00c81293          	slli	t0,a6,0xc
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:73
srli x16, x16, 32-12
2040101c:	01485813          	srli	a6,a6,0x14
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:74
xor a2, x16, t0
20401020:	00584633          	xor	a2,a6,t0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:77

// C3 =B3 << 13
slli t0, x17, 13
20401024:	00d89293          	slli	t0,a7,0xd
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:78
srli x17, x17, 32-13
20401028:	0138d893          	srli	a7,a7,0x13
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:79
xor a3, x17, t0
2040102c:	0058c6b3          	xor	a3,a7,t0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/src/rectangle.S:84

// Final cipher
//a0 = 4448, a1 = ffff, a2 = c567, a3 = 8000

ret;
20401030:	8082                	ret

20401032 <_puts_r>:
_puts_r():
20401032:	1101                	addi	sp,sp,-32
20401034:	ca26                	sw	s1,20(sp)
20401036:	c84a                	sw	s2,16(sp)
20401038:	ce06                	sw	ra,28(sp)
2040103a:	cc22                	sw	s0,24(sp)
2040103c:	c64e                	sw	s3,12(sp)
2040103e:	c452                	sw	s4,8(sp)
20401040:	84aa                	mv	s1,a0
20401042:	892e                	mv	s2,a1
20401044:	c501                	beqz	a0,2040104c <_puts_r+0x1a>
20401046:	4d1c                	lw	a5,24(a0)
20401048:	e391                	bnez	a5,2040104c <_puts_r+0x1a>
2040104a:	29e5                	jal	20401542 <__sinit>
2040104c:	4c9c                	lw	a5,24(s1)
2040104e:	4480                	lw	s0,8(s1)
20401050:	e399                	bnez	a5,20401056 <_puts_r+0x24>
20401052:	8526                	mv	a0,s1
20401054:	21fd                	jal	20401542 <__sinit>
20401056:	fffff797          	auipc	a5,0xfffff
2040105a:	35278793          	addi	a5,a5,850 # 204003a8 <__sf_fake_stdin>
2040105e:	02f41c63          	bne	s0,a5,20401096 <_puts_r+0x64>
20401062:	40c0                	lw	s0,4(s1)
20401064:	00c45783          	lhu	a5,12(s0)
20401068:	8ba1                	andi	a5,a5,8
2040106a:	c7b1                	beqz	a5,204010b6 <_puts_r+0x84>
2040106c:	481c                	lw	a5,16(s0)
2040106e:	c7a1                	beqz	a5,204010b6 <_puts_r+0x84>
20401070:	59fd                	li	s3,-1
20401072:	4a29                	li	s4,10
20401074:	441c                	lw	a5,8(s0)
20401076:	00094583          	lbu	a1,0(s2)
2040107a:	17fd                	addi	a5,a5,-1
2040107c:	e9b1                	bnez	a1,204010d0 <_puts_r+0x9e>
2040107e:	c41c                	sw	a5,8(s0)
20401080:	0607de63          	bgez	a5,204010fc <_puts_r+0xca>
20401084:	8622                	mv	a2,s0
20401086:	45a9                	li	a1,10
20401088:	8526                	mv	a0,s1
2040108a:	2079                	jal	20401118 <__swbuf_r>
2040108c:	57fd                	li	a5,-1
2040108e:	02f50863          	beq	a0,a5,204010be <_puts_r+0x8c>
20401092:	4529                	li	a0,10
20401094:	a035                	j	204010c0 <_puts_r+0x8e>
20401096:	fffff797          	auipc	a5,0xfffff
2040109a:	33278793          	addi	a5,a5,818 # 204003c8 <__sf_fake_stdout>
2040109e:	00f41463          	bne	s0,a5,204010a6 <_puts_r+0x74>
204010a2:	4480                	lw	s0,8(s1)
204010a4:	b7c1                	j	20401064 <_puts_r+0x32>
204010a6:	fffff797          	auipc	a5,0xfffff
204010aa:	2e278793          	addi	a5,a5,738 # 20400388 <__sf_fake_stderr>
204010ae:	faf41be3          	bne	s0,a5,20401064 <_puts_r+0x32>
204010b2:	44c0                	lw	s0,12(s1)
204010b4:	bf45                	j	20401064 <_puts_r+0x32>
204010b6:	85a2                	mv	a1,s0
204010b8:	8526                	mv	a0,s1
204010ba:	2a39                	jal	204011d8 <__swsetup_r>
204010bc:	d955                	beqz	a0,20401070 <_puts_r+0x3e>
204010be:	557d                	li	a0,-1
204010c0:	40f2                	lw	ra,28(sp)
204010c2:	4462                	lw	s0,24(sp)
204010c4:	44d2                	lw	s1,20(sp)
204010c6:	4942                	lw	s2,16(sp)
204010c8:	49b2                	lw	s3,12(sp)
204010ca:	4a22                	lw	s4,8(sp)
204010cc:	6105                	addi	sp,sp,32
204010ce:	8082                	ret
204010d0:	c41c                	sw	a5,8(s0)
204010d2:	0905                	addi	s2,s2,1
204010d4:	0007d763          	bgez	a5,204010e2 <_puts_r+0xb0>
204010d8:	4c18                	lw	a4,24(s0)
204010da:	00e7cb63          	blt	a5,a4,204010f0 <_puts_r+0xbe>
204010de:	01458963          	beq	a1,s4,204010f0 <_puts_r+0xbe>
204010e2:	401c                	lw	a5,0(s0)
204010e4:	00178713          	addi	a4,a5,1
204010e8:	c018                	sw	a4,0(s0)
204010ea:	00b78023          	sb	a1,0(a5)
204010ee:	b759                	j	20401074 <_puts_r+0x42>
204010f0:	8622                	mv	a2,s0
204010f2:	8526                	mv	a0,s1
204010f4:	2015                	jal	20401118 <__swbuf_r>
204010f6:	f7351fe3          	bne	a0,s3,20401074 <_puts_r+0x42>
204010fa:	b7d1                	j	204010be <_puts_r+0x8c>
204010fc:	401c                	lw	a5,0(s0)
204010fe:	00178713          	addi	a4,a5,1
20401102:	c018                	sw	a4,0(s0)
20401104:	4729                	li	a4,10
20401106:	00e78023          	sb	a4,0(a5)
2040110a:	b761                	j	20401092 <_puts_r+0x60>

2040110c <puts>:
puts():
2040110c:	85aa                	mv	a1,a0
2040110e:	5fbff517          	auipc	a0,0x5fbff
20401112:	69252503          	lw	a0,1682(a0) # 800007a0 <_impure_ptr>
20401116:	bf31                	j	20401032 <_puts_r>

20401118 <__swbuf_r>:
__swbuf_r():
20401118:	1101                	addi	sp,sp,-32
2040111a:	cc22                	sw	s0,24(sp)
2040111c:	ca26                	sw	s1,20(sp)
2040111e:	c84a                	sw	s2,16(sp)
20401120:	ce06                	sw	ra,28(sp)
20401122:	c64e                	sw	s3,12(sp)
20401124:	84aa                	mv	s1,a0
20401126:	892e                	mv	s2,a1
20401128:	8432                	mv	s0,a2
2040112a:	c501                	beqz	a0,20401132 <__swbuf_r+0x1a>
2040112c:	4d1c                	lw	a5,24(a0)
2040112e:	e391                	bnez	a5,20401132 <__swbuf_r+0x1a>
20401130:	2909                	jal	20401542 <__sinit>
20401132:	fffff797          	auipc	a5,0xfffff
20401136:	27678793          	addi	a5,a5,630 # 204003a8 <__sf_fake_stdin>
2040113a:	06f41963          	bne	s0,a5,204011ac <__swbuf_r+0x94>
2040113e:	40c0                	lw	s0,4(s1)
20401140:	4c1c                	lw	a5,24(s0)
20401142:	c41c                	sw	a5,8(s0)
20401144:	00c45783          	lhu	a5,12(s0)
20401148:	8ba1                	andi	a5,a5,8
2040114a:	c3c9                	beqz	a5,204011cc <__swbuf_r+0xb4>
2040114c:	481c                	lw	a5,16(s0)
2040114e:	cfbd                	beqz	a5,204011cc <__swbuf_r+0xb4>
20401150:	481c                	lw	a5,16(s0)
20401152:	4008                	lw	a0,0(s0)
20401154:	0ff97993          	zext.b	s3,s2
20401158:	0ff97913          	zext.b	s2,s2
2040115c:	8d1d                	sub	a0,a0,a5
2040115e:	485c                	lw	a5,20(s0)
20401160:	00f54663          	blt	a0,a5,2040116c <__swbuf_r+0x54>
20401164:	85a2                	mv	a1,s0
20401166:	8526                	mv	a0,s1
20401168:	24c1                	jal	20401428 <_fflush_r>
2040116a:	e52d                	bnez	a0,204011d4 <__swbuf_r+0xbc>
2040116c:	441c                	lw	a5,8(s0)
2040116e:	0505                	addi	a0,a0,1
20401170:	17fd                	addi	a5,a5,-1
20401172:	c41c                	sw	a5,8(s0)
20401174:	401c                	lw	a5,0(s0)
20401176:	00178713          	addi	a4,a5,1
2040117a:	c018                	sw	a4,0(s0)
2040117c:	01378023          	sb	s3,0(a5)
20401180:	485c                	lw	a5,20(s0)
20401182:	00a78963          	beq	a5,a0,20401194 <__swbuf_r+0x7c>
20401186:	00c45783          	lhu	a5,12(s0)
2040118a:	8b85                	andi	a5,a5,1
2040118c:	cb81                	beqz	a5,2040119c <__swbuf_r+0x84>
2040118e:	47a9                	li	a5,10
20401190:	00f91663          	bne	s2,a5,2040119c <__swbuf_r+0x84>
20401194:	85a2                	mv	a1,s0
20401196:	8526                	mv	a0,s1
20401198:	2c41                	jal	20401428 <_fflush_r>
2040119a:	ed0d                	bnez	a0,204011d4 <__swbuf_r+0xbc>
2040119c:	40f2                	lw	ra,28(sp)
2040119e:	4462                	lw	s0,24(sp)
204011a0:	44d2                	lw	s1,20(sp)
204011a2:	49b2                	lw	s3,12(sp)
204011a4:	854a                	mv	a0,s2
204011a6:	4942                	lw	s2,16(sp)
204011a8:	6105                	addi	sp,sp,32
204011aa:	8082                	ret
204011ac:	fffff797          	auipc	a5,0xfffff
204011b0:	21c78793          	addi	a5,a5,540 # 204003c8 <__sf_fake_stdout>
204011b4:	00f41463          	bne	s0,a5,204011bc <__swbuf_r+0xa4>
204011b8:	4480                	lw	s0,8(s1)
204011ba:	b759                	j	20401140 <__swbuf_r+0x28>
204011bc:	fffff797          	auipc	a5,0xfffff
204011c0:	1cc78793          	addi	a5,a5,460 # 20400388 <__sf_fake_stderr>
204011c4:	f6f41ee3          	bne	s0,a5,20401140 <__swbuf_r+0x28>
204011c8:	44c0                	lw	s0,12(s1)
204011ca:	bf9d                	j	20401140 <__swbuf_r+0x28>
204011cc:	85a2                	mv	a1,s0
204011ce:	8526                	mv	a0,s1
204011d0:	2021                	jal	204011d8 <__swsetup_r>
204011d2:	dd3d                	beqz	a0,20401150 <__swbuf_r+0x38>
204011d4:	597d                	li	s2,-1
204011d6:	b7d9                	j	2040119c <__swbuf_r+0x84>

204011d8 <__swsetup_r>:
__swsetup_r():
204011d8:	1141                	addi	sp,sp,-16
204011da:	c422                	sw	s0,8(sp)
204011dc:	c226                	sw	s1,4(sp)
204011de:	c04a                	sw	s2,0(sp)
204011e0:	c606                	sw	ra,12(sp)
204011e2:	5fbff497          	auipc	s1,0x5fbff
204011e6:	5be4a483          	lw	s1,1470(s1) # 800007a0 <_impure_ptr>
204011ea:	892a                	mv	s2,a0
204011ec:	842e                	mv	s0,a1
204011ee:	c489                	beqz	s1,204011f8 <__swsetup_r+0x20>
204011f0:	4c9c                	lw	a5,24(s1)
204011f2:	e399                	bnez	a5,204011f8 <__swsetup_r+0x20>
204011f4:	8526                	mv	a0,s1
204011f6:	26b1                	jal	20401542 <__sinit>
204011f8:	fffff797          	auipc	a5,0xfffff
204011fc:	1b078793          	addi	a5,a5,432 # 204003a8 <__sf_fake_stdin>
20401200:	02f41763          	bne	s0,a5,2040122e <__swsetup_r+0x56>
20401204:	40c0                	lw	s0,4(s1)
20401206:	00c41783          	lh	a5,12(s0)
2040120a:	01079713          	slli	a4,a5,0x10
2040120e:	0087f693          	andi	a3,a5,8
20401212:	8341                	srli	a4,a4,0x10
20401214:	eaad                	bnez	a3,20401286 <__swsetup_r+0xae>
20401216:	01077693          	andi	a3,a4,16
2040121a:	ea95                	bnez	a3,2040124e <__swsetup_r+0x76>
2040121c:	4725                	li	a4,9
2040121e:	00e92023          	sw	a4,0(s2)
20401222:	0407e793          	ori	a5,a5,64
20401226:	00f41623          	sh	a5,12(s0)
2040122a:	557d                	li	a0,-1
2040122c:	a871                	j	204012c8 <__swsetup_r+0xf0>
2040122e:	fffff797          	auipc	a5,0xfffff
20401232:	19a78793          	addi	a5,a5,410 # 204003c8 <__sf_fake_stdout>
20401236:	00f41463          	bne	s0,a5,2040123e <__swsetup_r+0x66>
2040123a:	4480                	lw	s0,8(s1)
2040123c:	b7e9                	j	20401206 <__swsetup_r+0x2e>
2040123e:	fffff797          	auipc	a5,0xfffff
20401242:	14a78793          	addi	a5,a5,330 # 20400388 <__sf_fake_stderr>
20401246:	fcf410e3          	bne	s0,a5,20401206 <__swsetup_r+0x2e>
2040124a:	44c0                	lw	s0,12(s1)
2040124c:	bf6d                	j	20401206 <__swsetup_r+0x2e>
2040124e:	8b11                	andi	a4,a4,4
20401250:	c70d                	beqz	a4,2040127a <__swsetup_r+0xa2>
20401252:	584c                	lw	a1,52(s0)
20401254:	c989                	beqz	a1,20401266 <__swsetup_r+0x8e>
20401256:	04440793          	addi	a5,s0,68
2040125a:	00f58463          	beq	a1,a5,20401262 <__swsetup_r+0x8a>
2040125e:	854a                	mv	a0,s2
20401260:	2bc5                	jal	20401850 <_free_r>
20401262:	02042a23          	sw	zero,52(s0)
20401266:	00c45783          	lhu	a5,12(s0)
2040126a:	00042223          	sw	zero,4(s0)
2040126e:	fdb7f793          	andi	a5,a5,-37
20401272:	00f41623          	sh	a5,12(s0)
20401276:	481c                	lw	a5,16(s0)
20401278:	c01c                	sw	a5,0(s0)
2040127a:	00c45783          	lhu	a5,12(s0)
2040127e:	0087e793          	ori	a5,a5,8
20401282:	00f41623          	sh	a5,12(s0)
20401286:	481c                	lw	a5,16(s0)
20401288:	ef81                	bnez	a5,204012a0 <__swsetup_r+0xc8>
2040128a:	00c45783          	lhu	a5,12(s0)
2040128e:	20000713          	li	a4,512
20401292:	2807f793          	andi	a5,a5,640
20401296:	00e78563          	beq	a5,a4,204012a0 <__swsetup_r+0xc8>
2040129a:	85a2                	mv	a1,s0
2040129c:	854a                	mv	a0,s2
2040129e:	21bd                	jal	2040170c <__smakebuf_r>
204012a0:	00c41783          	lh	a5,12(s0)
204012a4:	01079713          	slli	a4,a5,0x10
204012a8:	0017f693          	andi	a3,a5,1
204012ac:	8341                	srli	a4,a4,0x10
204012ae:	c29d                	beqz	a3,204012d4 <__swsetup_r+0xfc>
204012b0:	4854                	lw	a3,20(s0)
204012b2:	00042423          	sw	zero,8(s0)
204012b6:	40d006b3          	neg	a3,a3
204012ba:	cc14                	sw	a3,24(s0)
204012bc:	4814                	lw	a3,16(s0)
204012be:	4501                	li	a0,0
204012c0:	e681                	bnez	a3,204012c8 <__swsetup_r+0xf0>
204012c2:	08077713          	andi	a4,a4,128
204012c6:	ff31                	bnez	a4,20401222 <__swsetup_r+0x4a>
204012c8:	40b2                	lw	ra,12(sp)
204012ca:	4422                	lw	s0,8(sp)
204012cc:	4492                	lw	s1,4(sp)
204012ce:	4902                	lw	s2,0(sp)
204012d0:	0141                	addi	sp,sp,16
204012d2:	8082                	ret
204012d4:	00277693          	andi	a3,a4,2
204012d8:	4601                	li	a2,0
204012da:	e291                	bnez	a3,204012de <__swsetup_r+0x106>
204012dc:	4850                	lw	a2,20(s0)
204012de:	c410                	sw	a2,8(s0)
204012e0:	bff1                	j	204012bc <__swsetup_r+0xe4>

204012e2 <__sflush_r>:
__sflush_r():
204012e2:	00c5d783          	lhu	a5,12(a1)
204012e6:	1101                	addi	sp,sp,-32
204012e8:	cc22                	sw	s0,24(sp)
204012ea:	ca26                	sw	s1,20(sp)
204012ec:	ce06                	sw	ra,28(sp)
204012ee:	c84a                	sw	s2,16(sp)
204012f0:	c64e                	sw	s3,12(sp)
204012f2:	0087f713          	andi	a4,a5,8
204012f6:	84aa                	mv	s1,a0
204012f8:	842e                	mv	s0,a1
204012fa:	e375                	bnez	a4,204013de <__sflush_r+0xfc>
204012fc:	41d8                	lw	a4,4(a1)
204012fe:	00e04763          	bgtz	a4,2040130c <__sflush_r+0x2a>
20401302:	41b8                	lw	a4,64(a1)
20401304:	00e04463          	bgtz	a4,2040130c <__sflush_r+0x2a>
20401308:	4501                	li	a0,0
2040130a:	a875                	j	204013c6 <__sflush_r+0xe4>
2040130c:	5458                	lw	a4,44(s0)
2040130e:	df6d                	beqz	a4,20401308 <__sflush_r+0x26>
20401310:	6685                	lui	a3,0x1
20401312:	0004a903          	lw	s2,0(s1)
20401316:	8ff5                	and	a5,a5,a3
20401318:	0004a023          	sw	zero,0(s1)
2040131c:	cfa5                	beqz	a5,20401394 <__sflush_r+0xb2>
2040131e:	4868                	lw	a0,84(s0)
20401320:	00c45783          	lhu	a5,12(s0)
20401324:	8b91                	andi	a5,a5,4
20401326:	c799                	beqz	a5,20401334 <__sflush_r+0x52>
20401328:	405c                	lw	a5,4(s0)
2040132a:	8d1d                	sub	a0,a0,a5
2040132c:	585c                	lw	a5,52(s0)
2040132e:	c399                	beqz	a5,20401334 <__sflush_r+0x52>
20401330:	403c                	lw	a5,64(s0)
20401332:	8d1d                	sub	a0,a0,a5
20401334:	545c                	lw	a5,44(s0)
20401336:	500c                	lw	a1,32(s0)
20401338:	862a                	mv	a2,a0
2040133a:	4681                	li	a3,0
2040133c:	8526                	mv	a0,s1
2040133e:	9782                	jalr	a5
20401340:	57fd                	li	a5,-1
20401342:	00c45703          	lhu	a4,12(s0)
20401346:	00f51d63          	bne	a0,a5,20401360 <__sflush_r+0x7e>
2040134a:	4094                	lw	a3,0(s1)
2040134c:	47f5                	li	a5,29
2040134e:	08d7e363          	bltu	a5,a3,204013d4 <__sflush_r+0xf2>
20401352:	204007b7          	lui	a5,0x20400
20401356:	0785                	addi	a5,a5,1
20401358:	00d7d7b3          	srl	a5,a5,a3
2040135c:	8b85                	andi	a5,a5,1
2040135e:	cbbd                	beqz	a5,204013d4 <__sflush_r+0xf2>
20401360:	481c                	lw	a5,16(s0)
20401362:	00042223          	sw	zero,4(s0)
20401366:	c01c                	sw	a5,0(s0)
20401368:	6785                	lui	a5,0x1
2040136a:	8f7d                	and	a4,a4,a5
2040136c:	c719                	beqz	a4,2040137a <__sflush_r+0x98>
2040136e:	57fd                	li	a5,-1
20401370:	00f51463          	bne	a0,a5,20401378 <__sflush_r+0x96>
20401374:	409c                	lw	a5,0(s1)
20401376:	e391                	bnez	a5,2040137a <__sflush_r+0x98>
20401378:	c868                	sw	a0,84(s0)
2040137a:	584c                	lw	a1,52(s0)
2040137c:	0124a023          	sw	s2,0(s1)
20401380:	d5c1                	beqz	a1,20401308 <__sflush_r+0x26>
20401382:	04440793          	addi	a5,s0,68
20401386:	00f58463          	beq	a1,a5,2040138e <__sflush_r+0xac>
2040138a:	8526                	mv	a0,s1
2040138c:	21d1                	jal	20401850 <_free_r>
2040138e:	02042a23          	sw	zero,52(s0)
20401392:	bf9d                	j	20401308 <__sflush_r+0x26>
20401394:	500c                	lw	a1,32(s0)
20401396:	4685                	li	a3,1
20401398:	4601                	li	a2,0
2040139a:	8526                	mv	a0,s1
2040139c:	9702                	jalr	a4
2040139e:	57fd                	li	a5,-1
204013a0:	f8f510e3          	bne	a0,a5,20401320 <__sflush_r+0x3e>
204013a4:	409c                	lw	a5,0(s1)
204013a6:	dfad                	beqz	a5,20401320 <__sflush_r+0x3e>
204013a8:	4775                	li	a4,29
204013aa:	00e78563          	beq	a5,a4,204013b4 <__sflush_r+0xd2>
204013ae:	4759                	li	a4,22
204013b0:	00e79563          	bne	a5,a4,204013ba <__sflush_r+0xd8>
204013b4:	0124a023          	sw	s2,0(s1)
204013b8:	bf81                	j	20401308 <__sflush_r+0x26>
204013ba:	00c45783          	lhu	a5,12(s0)
204013be:	0407e793          	ori	a5,a5,64
204013c2:	00f41623          	sh	a5,12(s0)
204013c6:	40f2                	lw	ra,28(sp)
204013c8:	4462                	lw	s0,24(sp)
204013ca:	44d2                	lw	s1,20(sp)
204013cc:	4942                	lw	s2,16(sp)
204013ce:	49b2                	lw	s3,12(sp)
204013d0:	6105                	addi	sp,sp,32
204013d2:	8082                	ret
204013d4:	04076713          	ori	a4,a4,64
204013d8:	00e41623          	sh	a4,12(s0)
204013dc:	b7ed                	j	204013c6 <__sflush_r+0xe4>
204013de:	0105a983          	lw	s3,16(a1)
204013e2:	f20983e3          	beqz	s3,20401308 <__sflush_r+0x26>
204013e6:	0005a903          	lw	s2,0(a1)
204013ea:	8b8d                	andi	a5,a5,3
204013ec:	0135a023          	sw	s3,0(a1)
204013f0:	41390933          	sub	s2,s2,s3
204013f4:	4701                	li	a4,0
204013f6:	e391                	bnez	a5,204013fa <__sflush_r+0x118>
204013f8:	49d8                	lw	a4,20(a1)
204013fa:	c418                	sw	a4,8(s0)
204013fc:	f12056e3          	blez	s2,20401308 <__sflush_r+0x26>
20401400:	541c                	lw	a5,40(s0)
20401402:	500c                	lw	a1,32(s0)
20401404:	86ca                	mv	a3,s2
20401406:	864e                	mv	a2,s3
20401408:	8526                	mv	a0,s1
2040140a:	9782                	jalr	a5
2040140c:	00a04a63          	bgtz	a0,20401420 <__sflush_r+0x13e>
20401410:	00c45783          	lhu	a5,12(s0)
20401414:	557d                	li	a0,-1
20401416:	0407e793          	ori	a5,a5,64
2040141a:	00f41623          	sh	a5,12(s0)
2040141e:	b765                	j	204013c6 <__sflush_r+0xe4>
20401420:	99aa                	add	s3,s3,a0
20401422:	40a90933          	sub	s2,s2,a0
20401426:	bfd9                	j	204013fc <__sflush_r+0x11a>

20401428 <_fflush_r>:
_fflush_r():
20401428:	499c                	lw	a5,16(a1)
2040142a:	cfb9                	beqz	a5,20401488 <_fflush_r+0x60>
2040142c:	1101                	addi	sp,sp,-32
2040142e:	cc22                	sw	s0,24(sp)
20401430:	ce06                	sw	ra,28(sp)
20401432:	842a                	mv	s0,a0
20401434:	c511                	beqz	a0,20401440 <_fflush_r+0x18>
20401436:	4d1c                	lw	a5,24(a0)
20401438:	e781                	bnez	a5,20401440 <_fflush_r+0x18>
2040143a:	c62e                	sw	a1,12(sp)
2040143c:	2219                	jal	20401542 <__sinit>
2040143e:	45b2                	lw	a1,12(sp)
20401440:	fffff797          	auipc	a5,0xfffff
20401444:	f6878793          	addi	a5,a5,-152 # 204003a8 <__sf_fake_stdin>
20401448:	00f59b63          	bne	a1,a5,2040145e <_fflush_r+0x36>
2040144c:	404c                	lw	a1,4(s0)
2040144e:	00c59783          	lh	a5,12(a1)
20401452:	c795                	beqz	a5,2040147e <_fflush_r+0x56>
20401454:	8522                	mv	a0,s0
20401456:	4462                	lw	s0,24(sp)
20401458:	40f2                	lw	ra,28(sp)
2040145a:	6105                	addi	sp,sp,32
2040145c:	b559                	j	204012e2 <__sflush_r>
2040145e:	fffff797          	auipc	a5,0xfffff
20401462:	f6a78793          	addi	a5,a5,-150 # 204003c8 <__sf_fake_stdout>
20401466:	00f59463          	bne	a1,a5,2040146e <_fflush_r+0x46>
2040146a:	440c                	lw	a1,8(s0)
2040146c:	b7cd                	j	2040144e <_fflush_r+0x26>
2040146e:	fffff797          	auipc	a5,0xfffff
20401472:	f1a78793          	addi	a5,a5,-230 # 20400388 <__sf_fake_stderr>
20401476:	fcf59ce3          	bne	a1,a5,2040144e <_fflush_r+0x26>
2040147a:	444c                	lw	a1,12(s0)
2040147c:	bfc9                	j	2040144e <_fflush_r+0x26>
2040147e:	40f2                	lw	ra,28(sp)
20401480:	4462                	lw	s0,24(sp)
20401482:	4501                	li	a0,0
20401484:	6105                	addi	sp,sp,32
20401486:	8082                	ret
20401488:	4501                	li	a0,0
2040148a:	8082                	ret

2040148c <std>:
std():
2040148c:	1141                	addi	sp,sp,-16
2040148e:	c422                	sw	s0,8(sp)
20401490:	c606                	sw	ra,12(sp)
20401492:	842a                	mv	s0,a0
20401494:	00b51623          	sh	a1,12(a0)
20401498:	00c51723          	sh	a2,14(a0)
2040149c:	00052023          	sw	zero,0(a0)
204014a0:	00052223          	sw	zero,4(a0)
204014a4:	00052423          	sw	zero,8(a0)
204014a8:	06052223          	sw	zero,100(a0)
204014ac:	00052823          	sw	zero,16(a0)
204014b0:	00052a23          	sw	zero,20(a0)
204014b4:	00052c23          	sw	zero,24(a0)
204014b8:	4621                	li	a2,8
204014ba:	4581                	li	a1,0
204014bc:	05c50513          	addi	a0,a0,92
204014c0:	24e5                	jal	204017a8 <memset>
204014c2:	00000797          	auipc	a5,0x0
204014c6:	53678793          	addi	a5,a5,1334 # 204019f8 <__sread>
204014ca:	d05c                	sw	a5,36(s0)
204014cc:	00000797          	auipc	a5,0x0
204014d0:	55c78793          	addi	a5,a5,1372 # 20401a28 <__swrite>
204014d4:	d41c                	sw	a5,40(s0)
204014d6:	00000797          	auipc	a5,0x0
204014da:	5a078793          	addi	a5,a5,1440 # 20401a76 <__sseek>
204014de:	d45c                	sw	a5,44(s0)
204014e0:	00000797          	auipc	a5,0x0
204014e4:	5cc78793          	addi	a5,a5,1484 # 20401aac <__sclose>
204014e8:	40b2                	lw	ra,12(sp)
204014ea:	d000                	sw	s0,32(s0)
204014ec:	d81c                	sw	a5,48(s0)
204014ee:	4422                	lw	s0,8(sp)
204014f0:	0141                	addi	sp,sp,16
204014f2:	8082                	ret

204014f4 <_cleanup_r>:
_cleanup_r():
204014f4:	00000597          	auipc	a1,0x0
204014f8:	f3458593          	addi	a1,a1,-204 # 20401428 <_fflush_r>
204014fc:	a2b1                	j	20401648 <_fwalk_reent>

204014fe <__sfmoreglue>:
__sfmoreglue():
204014fe:	1141                	addi	sp,sp,-16
20401500:	c226                	sw	s1,4(sp)
20401502:	06800613          	li	a2,104
20401506:	fff58493          	addi	s1,a1,-1
2040150a:	02c484b3          	mul	s1,s1,a2
2040150e:	c04a                	sw	s2,0(sp)
20401510:	892e                	mv	s2,a1
20401512:	c422                	sw	s0,8(sp)
20401514:	c606                	sw	ra,12(sp)
20401516:	07448593          	addi	a1,s1,116
2040151a:	2ee1                	jal	204018f2 <_malloc_r>
2040151c:	842a                	mv	s0,a0
2040151e:	c919                	beqz	a0,20401534 <__sfmoreglue+0x36>
20401520:	00052023          	sw	zero,0(a0)
20401524:	01252223          	sw	s2,4(a0)
20401528:	0531                	addi	a0,a0,12
2040152a:	c408                	sw	a0,8(s0)
2040152c:	06848613          	addi	a2,s1,104
20401530:	4581                	li	a1,0
20401532:	2c9d                	jal	204017a8 <memset>
20401534:	40b2                	lw	ra,12(sp)
20401536:	8522                	mv	a0,s0
20401538:	4422                	lw	s0,8(sp)
2040153a:	4492                	lw	s1,4(sp)
2040153c:	4902                	lw	s2,0(sp)
2040153e:	0141                	addi	sp,sp,16
20401540:	8082                	ret

20401542 <__sinit>:
__sinit():
20401542:	4d1c                	lw	a5,24(a0)
20401544:	e3bd                	bnez	a5,204015aa <__sinit+0x68>
20401546:	1141                	addi	sp,sp,-16
20401548:	c422                	sw	s0,8(sp)
2040154a:	c606                	sw	ra,12(sp)
2040154c:	00000797          	auipc	a5,0x0
20401550:	fa878793          	addi	a5,a5,-88 # 204014f4 <_cleanup_r>
20401554:	d51c                	sw	a5,40(a0)
20401556:	04052423          	sw	zero,72(a0)
2040155a:	04052623          	sw	zero,76(a0)
2040155e:	04052823          	sw	zero,80(a0)
20401562:	00000797          	auipc	a5,0x0
20401566:	9d67a783          	lw	a5,-1578(a5) # 20400f38 <_global_impure_ptr>
2040156a:	842a                	mv	s0,a0
2040156c:	00f51463          	bne	a0,a5,20401574 <__sinit+0x32>
20401570:	4785                	li	a5,1
20401572:	cd1c                	sw	a5,24(a0)
20401574:	8522                	mv	a0,s0
20401576:	281d                	jal	204015ac <__sfp>
20401578:	c048                	sw	a0,4(s0)
2040157a:	8522                	mv	a0,s0
2040157c:	2805                	jal	204015ac <__sfp>
2040157e:	c408                	sw	a0,8(s0)
20401580:	8522                	mv	a0,s0
20401582:	202d                	jal	204015ac <__sfp>
20401584:	c448                	sw	a0,12(s0)
20401586:	4048                	lw	a0,4(s0)
20401588:	4601                	li	a2,0
2040158a:	4591                	li	a1,4
2040158c:	3701                	jal	2040148c <std>
2040158e:	4408                	lw	a0,8(s0)
20401590:	4605                	li	a2,1
20401592:	45a5                	li	a1,9
20401594:	3de5                	jal	2040148c <std>
20401596:	4448                	lw	a0,12(s0)
20401598:	4609                	li	a2,2
2040159a:	45c9                	li	a1,18
2040159c:	3dc5                	jal	2040148c <std>
2040159e:	4785                	li	a5,1
204015a0:	40b2                	lw	ra,12(sp)
204015a2:	cc1c                	sw	a5,24(s0)
204015a4:	4422                	lw	s0,8(sp)
204015a6:	0141                	addi	sp,sp,16
204015a8:	8082                	ret
204015aa:	8082                	ret

204015ac <__sfp>:
__sfp():
204015ac:	1141                	addi	sp,sp,-16
204015ae:	c226                	sw	s1,4(sp)
204015b0:	00000497          	auipc	s1,0x0
204015b4:	9884a483          	lw	s1,-1656(s1) # 20400f38 <_global_impure_ptr>
204015b8:	4c9c                	lw	a5,24(s1)
204015ba:	c04a                	sw	s2,0(sp)
204015bc:	c606                	sw	ra,12(sp)
204015be:	c422                	sw	s0,8(sp)
204015c0:	892a                	mv	s2,a0
204015c2:	e399                	bnez	a5,204015c8 <__sfp+0x1c>
204015c4:	8526                	mv	a0,s1
204015c6:	3fb5                	jal	20401542 <__sinit>
204015c8:	04848493          	addi	s1,s1,72
204015cc:	4480                	lw	s0,8(s1)
204015ce:	40dc                	lw	a5,4(s1)
204015d0:	17fd                	addi	a5,a5,-1
204015d2:	0007d663          	bgez	a5,204015de <__sfp+0x32>
204015d6:	409c                	lw	a5,0(s1)
204015d8:	cfb1                	beqz	a5,20401634 <__sfp+0x88>
204015da:	4084                	lw	s1,0(s1)
204015dc:	bfc5                	j	204015cc <__sfp+0x20>
204015de:	00c41703          	lh	a4,12(s0)
204015e2:	e731                	bnez	a4,2040162e <__sfp+0x82>
204015e4:	77c1                	lui	a5,0xffff0
204015e6:	0785                	addi	a5,a5,1
204015e8:	06042223          	sw	zero,100(s0)
204015ec:	00042023          	sw	zero,0(s0)
204015f0:	00042223          	sw	zero,4(s0)
204015f4:	00042423          	sw	zero,8(s0)
204015f8:	c45c                	sw	a5,12(s0)
204015fa:	00042823          	sw	zero,16(s0)
204015fe:	00042a23          	sw	zero,20(s0)
20401602:	00042c23          	sw	zero,24(s0)
20401606:	4621                	li	a2,8
20401608:	4581                	li	a1,0
2040160a:	05c40513          	addi	a0,s0,92
2040160e:	2a69                	jal	204017a8 <memset>
20401610:	02042a23          	sw	zero,52(s0)
20401614:	02042c23          	sw	zero,56(s0)
20401618:	04042423          	sw	zero,72(s0)
2040161c:	04042623          	sw	zero,76(s0)
20401620:	40b2                	lw	ra,12(sp)
20401622:	8522                	mv	a0,s0
20401624:	4422                	lw	s0,8(sp)
20401626:	4492                	lw	s1,4(sp)
20401628:	4902                	lw	s2,0(sp)
2040162a:	0141                	addi	sp,sp,16
2040162c:	8082                	ret
2040162e:	06840413          	addi	s0,s0,104
20401632:	bf79                	j	204015d0 <__sfp+0x24>
20401634:	4591                	li	a1,4
20401636:	854a                	mv	a0,s2
20401638:	35d9                	jal	204014fe <__sfmoreglue>
2040163a:	c088                	sw	a0,0(s1)
2040163c:	842a                	mv	s0,a0
2040163e:	fd51                	bnez	a0,204015da <__sfp+0x2e>
20401640:	47b1                	li	a5,12
20401642:	00f92023          	sw	a5,0(s2)
20401646:	bfe9                	j	20401620 <__sfp+0x74>

20401648 <_fwalk_reent>:
_fwalk_reent():
20401648:	7179                	addi	sp,sp,-48
2040164a:	d422                	sw	s0,40(sp)
2040164c:	d04a                	sw	s2,32(sp)
2040164e:	ce4e                	sw	s3,28(sp)
20401650:	cc52                	sw	s4,24(sp)
20401652:	c85a                	sw	s6,16(sp)
20401654:	c65e                	sw	s7,12(sp)
20401656:	d606                	sw	ra,44(sp)
20401658:	d226                	sw	s1,36(sp)
2040165a:	ca56                	sw	s5,20(sp)
2040165c:	892a                	mv	s2,a0
2040165e:	8a2e                	mv	s4,a1
20401660:	04850413          	addi	s0,a0,72
20401664:	4981                	li	s3,0
20401666:	4b05                	li	s6,1
20401668:	5bfd                	li	s7,-1
2040166a:	4404                	lw	s1,8(s0)
2040166c:	00442a83          	lw	s5,4(s0)
20401670:	1afd                	addi	s5,s5,-1
20401672:	020ad063          	bgez	s5,20401692 <_fwalk_reent+0x4a>
20401676:	4000                	lw	s0,0(s0)
20401678:	f86d                	bnez	s0,2040166a <_fwalk_reent+0x22>
2040167a:	50b2                	lw	ra,44(sp)
2040167c:	5422                	lw	s0,40(sp)
2040167e:	5492                	lw	s1,36(sp)
20401680:	5902                	lw	s2,32(sp)
20401682:	4a62                	lw	s4,24(sp)
20401684:	4ad2                	lw	s5,20(sp)
20401686:	4b42                	lw	s6,16(sp)
20401688:	4bb2                	lw	s7,12(sp)
2040168a:	854e                	mv	a0,s3
2040168c:	49f2                	lw	s3,28(sp)
2040168e:	6145                	addi	sp,sp,48
20401690:	8082                	ret
20401692:	00c4d783          	lhu	a5,12(s1)
20401696:	00fb7b63          	bgeu	s6,a5,204016ac <_fwalk_reent+0x64>
2040169a:	00e49783          	lh	a5,14(s1)
2040169e:	01778763          	beq	a5,s7,204016ac <_fwalk_reent+0x64>
204016a2:	85a6                	mv	a1,s1
204016a4:	854a                	mv	a0,s2
204016a6:	9a02                	jalr	s4
204016a8:	00a9e9b3          	or	s3,s3,a0
204016ac:	06848493          	addi	s1,s1,104
204016b0:	b7c1                	j	20401670 <_fwalk_reent+0x28>

204016b2 <__swhatbuf_r>:
__swhatbuf_r():
204016b2:	7159                	addi	sp,sp,-112
204016b4:	d0ca                	sw	s2,96(sp)
204016b6:	892e                	mv	s2,a1
204016b8:	00e59583          	lh	a1,14(a1)
204016bc:	d4a2                	sw	s0,104(sp)
204016be:	d2a6                	sw	s1,100(sp)
204016c0:	d686                	sw	ra,108(sp)
204016c2:	8432                	mv	s0,a2
204016c4:	84b6                	mv	s1,a3
204016c6:	0005dc63          	bgez	a1,204016de <__swhatbuf_r+0x2c>
204016ca:	00c91783          	lh	a5,12(s2)
204016ce:	0004a023          	sw	zero,0(s1)
204016d2:	0807f793          	andi	a5,a5,128
204016d6:	e38d                	bnez	a5,204016f8 <__swhatbuf_r+0x46>
204016d8:	40000793          	li	a5,1024
204016dc:	a005                	j	204016fc <__swhatbuf_r+0x4a>
204016de:	0030                	addi	a2,sp,8
204016e0:	290d                	jal	20401b12 <_fstat_r>
204016e2:	fe0544e3          	bltz	a0,204016ca <__swhatbuf_r+0x18>
204016e6:	4732                	lw	a4,12(sp)
204016e8:	67bd                	lui	a5,0xf
204016ea:	8ff9                	and	a5,a5,a4
204016ec:	7779                	lui	a4,0xffffe
204016ee:	97ba                	add	a5,a5,a4
204016f0:	0017b793          	seqz	a5,a5
204016f4:	c09c                	sw	a5,0(s1)
204016f6:	b7cd                	j	204016d8 <__swhatbuf_r+0x26>
204016f8:	04000793          	li	a5,64
204016fc:	50b6                	lw	ra,108(sp)
204016fe:	c01c                	sw	a5,0(s0)
20401700:	5426                	lw	s0,104(sp)
20401702:	5496                	lw	s1,100(sp)
20401704:	5906                	lw	s2,96(sp)
20401706:	4501                	li	a0,0
20401708:	6165                	addi	sp,sp,112
2040170a:	8082                	ret

2040170c <__smakebuf_r>:
__smakebuf_r():
2040170c:	00c5d783          	lhu	a5,12(a1)
20401710:	1101                	addi	sp,sp,-32
20401712:	cc22                	sw	s0,24(sp)
20401714:	ce06                	sw	ra,28(sp)
20401716:	ca26                	sw	s1,20(sp)
20401718:	c84a                	sw	s2,16(sp)
2040171a:	8b89                	andi	a5,a5,2
2040171c:	842e                	mv	s0,a1
2040171e:	cf89                	beqz	a5,20401738 <__smakebuf_r+0x2c>
20401720:	04740793          	addi	a5,s0,71
20401724:	c01c                	sw	a5,0(s0)
20401726:	c81c                	sw	a5,16(s0)
20401728:	4785                	li	a5,1
2040172a:	c85c                	sw	a5,20(s0)
2040172c:	40f2                	lw	ra,28(sp)
2040172e:	4462                	lw	s0,24(sp)
20401730:	44d2                	lw	s1,20(sp)
20401732:	4942                	lw	s2,16(sp)
20401734:	6105                	addi	sp,sp,32
20401736:	8082                	ret
20401738:	0074                	addi	a3,sp,12
2040173a:	0030                	addi	a2,sp,8
2040173c:	892a                	mv	s2,a0
2040173e:	3f95                	jal	204016b2 <__swhatbuf_r>
20401740:	45a2                	lw	a1,8(sp)
20401742:	84aa                	mv	s1,a0
20401744:	854a                	mv	a0,s2
20401746:	2275                	jal	204018f2 <_malloc_r>
20401748:	ed01                	bnez	a0,20401760 <__smakebuf_r+0x54>
2040174a:	00c41783          	lh	a5,12(s0)
2040174e:	2007f713          	andi	a4,a5,512
20401752:	ff69                	bnez	a4,2040172c <__smakebuf_r+0x20>
20401754:	9bf1                	andi	a5,a5,-4
20401756:	0027e793          	ori	a5,a5,2
2040175a:	00f41623          	sh	a5,12(s0)
2040175e:	b7c9                	j	20401720 <__smakebuf_r+0x14>
20401760:	00000797          	auipc	a5,0x0
20401764:	d9478793          	addi	a5,a5,-620 # 204014f4 <_cleanup_r>
20401768:	02f92423          	sw	a5,40(s2)
2040176c:	00c45783          	lhu	a5,12(s0)
20401770:	c008                	sw	a0,0(s0)
20401772:	c808                	sw	a0,16(s0)
20401774:	0807e793          	ori	a5,a5,128
20401778:	00f41623          	sh	a5,12(s0)
2040177c:	47a2                	lw	a5,8(sp)
2040177e:	c85c                	sw	a5,20(s0)
20401780:	47b2                	lw	a5,12(sp)
20401782:	cf89                	beqz	a5,2040179c <__smakebuf_r+0x90>
20401784:	00e41583          	lh	a1,14(s0)
20401788:	854a                	mv	a0,s2
2040178a:	2e65                	jal	20401b42 <_isatty_r>
2040178c:	c901                	beqz	a0,2040179c <__smakebuf_r+0x90>
2040178e:	00c45783          	lhu	a5,12(s0)
20401792:	9bf1                	andi	a5,a5,-4
20401794:	0017e793          	ori	a5,a5,1
20401798:	00f41623          	sh	a5,12(s0)
2040179c:	00c45503          	lhu	a0,12(s0)
204017a0:	8cc9                	or	s1,s1,a0
204017a2:	00941623          	sh	s1,12(s0)
204017a6:	b759                	j	2040172c <__smakebuf_r+0x20>

204017a8 <memset>:
memset():
204017a8:	433d                	li	t1,15
204017aa:	872a                	mv	a4,a0
204017ac:	02c37363          	bgeu	t1,a2,204017d2 <memset+0x2a>
204017b0:	00f77793          	andi	a5,a4,15
204017b4:	efbd                	bnez	a5,20401832 <memset+0x8a>
204017b6:	e5ad                	bnez	a1,20401820 <memset+0x78>
204017b8:	ff067693          	andi	a3,a2,-16
204017bc:	8a3d                	andi	a2,a2,15
204017be:	96ba                	add	a3,a3,a4
204017c0:	c30c                	sw	a1,0(a4)
204017c2:	c34c                	sw	a1,4(a4)
204017c4:	c70c                	sw	a1,8(a4)
204017c6:	c74c                	sw	a1,12(a4)
204017c8:	0741                	addi	a4,a4,16
204017ca:	fed76be3          	bltu	a4,a3,204017c0 <memset+0x18>
204017ce:	e211                	bnez	a2,204017d2 <memset+0x2a>
204017d0:	8082                	ret
204017d2:	40c306b3          	sub	a3,t1,a2
204017d6:	068a                	slli	a3,a3,0x2
204017d8:	00000297          	auipc	t0,0x0
204017dc:	9696                	add	a3,a3,t0
204017de:	00a68067          	jr	10(a3) # 100a <__heap_size+0x80a>
204017e2:	00b70723          	sb	a1,14(a4) # ffffe00e <metal_segment_heap_target_end+0x7fffcb9e>
204017e6:	00b706a3          	sb	a1,13(a4)
204017ea:	00b70623          	sb	a1,12(a4)
204017ee:	00b705a3          	sb	a1,11(a4)
204017f2:	00b70523          	sb	a1,10(a4)
204017f6:	00b704a3          	sb	a1,9(a4)
204017fa:	00b70423          	sb	a1,8(a4)
204017fe:	00b703a3          	sb	a1,7(a4)
20401802:	00b70323          	sb	a1,6(a4)
20401806:	00b702a3          	sb	a1,5(a4)
2040180a:	00b70223          	sb	a1,4(a4)
2040180e:	00b701a3          	sb	a1,3(a4)
20401812:	00b70123          	sb	a1,2(a4)
20401816:	00b700a3          	sb	a1,1(a4)
2040181a:	00b70023          	sb	a1,0(a4)
2040181e:	8082                	ret
20401820:	0ff5f593          	zext.b	a1,a1
20401824:	00859693          	slli	a3,a1,0x8
20401828:	8dd5                	or	a1,a1,a3
2040182a:	01059693          	slli	a3,a1,0x10
2040182e:	8dd5                	or	a1,a1,a3
20401830:	b761                	j	204017b8 <memset+0x10>
20401832:	00279693          	slli	a3,a5,0x2
20401836:	00000297          	auipc	t0,0x0
2040183a:	9696                	add	a3,a3,t0
2040183c:	8286                	mv	t0,ra
2040183e:	fa8680e7          	jalr	-88(a3)
20401842:	8096                	mv	ra,t0
20401844:	17c1                	addi	a5,a5,-16
20401846:	8f1d                	sub	a4,a4,a5
20401848:	963e                	add	a2,a2,a5
2040184a:	f8c374e3          	bgeu	t1,a2,204017d2 <memset+0x2a>
2040184e:	b7a5                	j	204017b6 <memset+0xe>

20401850 <_free_r>:
_free_r():
20401850:	c1c5                	beqz	a1,204018f0 <_free_r+0xa0>
20401852:	ffc5a783          	lw	a5,-4(a1)
20401856:	1101                	addi	sp,sp,-32
20401858:	cc22                	sw	s0,24(sp)
2040185a:	ce06                	sw	ra,28(sp)
2040185c:	ffc58413          	addi	s0,a1,-4
20401860:	0007d363          	bgez	a5,20401866 <_free_r+0x16>
20401864:	943e                	add	s0,s0,a5
20401866:	c62a                	sw	a0,12(sp)
20401868:	2e2d                	jal	20401ba2 <__malloc_lock>
2040186a:	5fbff717          	auipc	a4,0x5fbff
2040186e:	f5e70713          	addi	a4,a4,-162 # 800007c8 <__malloc_free_list>
20401872:	431c                	lw	a5,0(a4)
20401874:	4532                	lw	a0,12(sp)
20401876:	eb81                	bnez	a5,20401886 <_free_r+0x36>
20401878:	00042223          	sw	zero,4(s0)
2040187c:	c300                	sw	s0,0(a4)
2040187e:	4462                	lw	s0,24(sp)
20401880:	40f2                	lw	ra,28(sp)
20401882:	6105                	addi	sp,sp,32
20401884:	a605                	j	20401ba4 <__malloc_unlock>
20401886:	00f47d63          	bgeu	s0,a5,204018a0 <_free_r+0x50>
2040188a:	4010                	lw	a2,0(s0)
2040188c:	00c406b3          	add	a3,s0,a2
20401890:	00d79663          	bne	a5,a3,2040189c <_free_r+0x4c>
20401894:	4394                	lw	a3,0(a5)
20401896:	43dc                	lw	a5,4(a5)
20401898:	96b2                	add	a3,a3,a2
2040189a:	c014                	sw	a3,0(s0)
2040189c:	c05c                	sw	a5,4(s0)
2040189e:	bff9                	j	2040187c <_free_r+0x2c>
204018a0:	873e                	mv	a4,a5
204018a2:	43dc                	lw	a5,4(a5)
204018a4:	c399                	beqz	a5,204018aa <_free_r+0x5a>
204018a6:	fef47de3          	bgeu	s0,a5,204018a0 <_free_r+0x50>
204018aa:	4314                	lw	a3,0(a4)
204018ac:	00d70633          	add	a2,a4,a3
204018b0:	00861f63          	bne	a2,s0,204018ce <_free_r+0x7e>
204018b4:	4010                	lw	a2,0(s0)
204018b6:	96b2                	add	a3,a3,a2
204018b8:	c314                	sw	a3,0(a4)
204018ba:	00d70633          	add	a2,a4,a3
204018be:	fcc790e3          	bne	a5,a2,2040187e <_free_r+0x2e>
204018c2:	4390                	lw	a2,0(a5)
204018c4:	43dc                	lw	a5,4(a5)
204018c6:	96b2                	add	a3,a3,a2
204018c8:	c314                	sw	a3,0(a4)
204018ca:	c35c                	sw	a5,4(a4)
204018cc:	bf4d                	j	2040187e <_free_r+0x2e>
204018ce:	00c47563          	bgeu	s0,a2,204018d8 <_free_r+0x88>
204018d2:	47b1                	li	a5,12
204018d4:	c11c                	sw	a5,0(a0)
204018d6:	b765                	j	2040187e <_free_r+0x2e>
204018d8:	4010                	lw	a2,0(s0)
204018da:	00c406b3          	add	a3,s0,a2
204018de:	00d79663          	bne	a5,a3,204018ea <_free_r+0x9a>
204018e2:	4394                	lw	a3,0(a5)
204018e4:	43dc                	lw	a5,4(a5)
204018e6:	96b2                	add	a3,a3,a2
204018e8:	c014                	sw	a3,0(s0)
204018ea:	c05c                	sw	a5,4(s0)
204018ec:	c340                	sw	s0,4(a4)
204018ee:	bf41                	j	2040187e <_free_r+0x2e>
204018f0:	8082                	ret

204018f2 <_malloc_r>:
_malloc_r():
204018f2:	1101                	addi	sp,sp,-32
204018f4:	ca26                	sw	s1,20(sp)
204018f6:	00358493          	addi	s1,a1,3
204018fa:	98f1                	andi	s1,s1,-4
204018fc:	c84a                	sw	s2,16(sp)
204018fe:	ce06                	sw	ra,28(sp)
20401900:	cc22                	sw	s0,24(sp)
20401902:	c64e                	sw	s3,12(sp)
20401904:	04a1                	addi	s1,s1,8
20401906:	47b1                	li	a5,12
20401908:	892a                	mv	s2,a0
2040190a:	04f4f463          	bgeu	s1,a5,20401952 <_malloc_r+0x60>
2040190e:	44b1                	li	s1,12
20401910:	04b4e363          	bltu	s1,a1,20401956 <_malloc_r+0x64>
20401914:	854a                	mv	a0,s2
20401916:	2471                	jal	20401ba2 <__malloc_lock>
20401918:	5fbff697          	auipc	a3,0x5fbff
2040191c:	eb068693          	addi	a3,a3,-336 # 800007c8 <__malloc_free_list>
20401920:	4298                	lw	a4,0(a3)
20401922:	843a                	mv	s0,a4
20401924:	e421                	bnez	s0,2040196c <_malloc_r+0x7a>
20401926:	5fbff417          	auipc	s0,0x5fbff
2040192a:	ea640413          	addi	s0,s0,-346 # 800007cc <__malloc_sbrk_start>
2040192e:	401c                	lw	a5,0(s0)
20401930:	e789                	bnez	a5,2040193a <_malloc_r+0x48>
20401932:	4581                	li	a1,0
20401934:	854a                	mv	a0,s2
20401936:	2851                	jal	204019ca <_sbrk_r>
20401938:	c008                	sw	a0,0(s0)
2040193a:	85a6                	mv	a1,s1
2040193c:	854a                	mv	a0,s2
2040193e:	2071                	jal	204019ca <_sbrk_r>
20401940:	59fd                	li	s3,-1
20401942:	07351863          	bne	a0,s3,204019b2 <_malloc_r+0xc0>
20401946:	47b1                	li	a5,12
20401948:	00f92023          	sw	a5,0(s2)
2040194c:	854a                	mv	a0,s2
2040194e:	2c99                	jal	20401ba4 <__malloc_unlock>
20401950:	a031                	j	2040195c <_malloc_r+0x6a>
20401952:	fa04dfe3          	bgez	s1,20401910 <_malloc_r+0x1e>
20401956:	47b1                	li	a5,12
20401958:	00f92023          	sw	a5,0(s2)
2040195c:	4501                	li	a0,0
2040195e:	40f2                	lw	ra,28(sp)
20401960:	4462                	lw	s0,24(sp)
20401962:	44d2                	lw	s1,20(sp)
20401964:	4942                	lw	s2,16(sp)
20401966:	49b2                	lw	s3,12(sp)
20401968:	6105                	addi	sp,sp,32
2040196a:	8082                	ret
2040196c:	401c                	lw	a5,0(s0)
2040196e:	8f85                	sub	a5,a5,s1
20401970:	0207ce63          	bltz	a5,204019ac <_malloc_r+0xba>
20401974:	462d                	li	a2,11
20401976:	00f67663          	bgeu	a2,a5,20401982 <_malloc_r+0x90>
2040197a:	c01c                	sw	a5,0(s0)
2040197c:	943e                	add	s0,s0,a5
2040197e:	c004                	sw	s1,0(s0)
20401980:	a029                	j	2040198a <_malloc_r+0x98>
20401982:	405c                	lw	a5,4(s0)
20401984:	02871263          	bne	a4,s0,204019a8 <_malloc_r+0xb6>
20401988:	c29c                	sw	a5,0(a3)
2040198a:	854a                	mv	a0,s2
2040198c:	2c21                	jal	20401ba4 <__malloc_unlock>
2040198e:	00b40513          	addi	a0,s0,11
20401992:	00440793          	addi	a5,s0,4
20401996:	9961                	andi	a0,a0,-8
20401998:	40f50733          	sub	a4,a0,a5
2040199c:	fcf501e3          	beq	a0,a5,2040195e <_malloc_r+0x6c>
204019a0:	943a                	add	s0,s0,a4
204019a2:	8f89                	sub	a5,a5,a0
204019a4:	c01c                	sw	a5,0(s0)
204019a6:	bf65                	j	2040195e <_malloc_r+0x6c>
204019a8:	c35c                	sw	a5,4(a4)
204019aa:	b7c5                	j	2040198a <_malloc_r+0x98>
204019ac:	8722                	mv	a4,s0
204019ae:	4040                	lw	s0,4(s0)
204019b0:	bf95                	j	20401924 <_malloc_r+0x32>
204019b2:	00350413          	addi	s0,a0,3
204019b6:	9871                	andi	s0,s0,-4
204019b8:	fc8503e3          	beq	a0,s0,2040197e <_malloc_r+0x8c>
204019bc:	40a405b3          	sub	a1,s0,a0
204019c0:	854a                	mv	a0,s2
204019c2:	2021                	jal	204019ca <_sbrk_r>
204019c4:	fb351de3          	bne	a0,s3,2040197e <_malloc_r+0x8c>
204019c8:	bfbd                	j	20401946 <_malloc_r+0x54>

204019ca <_sbrk_r>:
_sbrk_r():
204019ca:	1141                	addi	sp,sp,-16
204019cc:	c422                	sw	s0,8(sp)
204019ce:	842a                	mv	s0,a0
204019d0:	852e                	mv	a0,a1
204019d2:	5fbff797          	auipc	a5,0x5fbff
204019d6:	de07af23          	sw	zero,-514(a5) # 800007d0 <errno>
204019da:	c606                	sw	ra,12(sp)
204019dc:	2c65                	jal	20401c94 <_sbrk>
204019de:	57fd                	li	a5,-1
204019e0:	00f51863          	bne	a0,a5,204019f0 <_sbrk_r+0x26>
204019e4:	5fbff797          	auipc	a5,0x5fbff
204019e8:	dec7a783          	lw	a5,-532(a5) # 800007d0 <errno>
204019ec:	c391                	beqz	a5,204019f0 <_sbrk_r+0x26>
204019ee:	c01c                	sw	a5,0(s0)
204019f0:	40b2                	lw	ra,12(sp)
204019f2:	4422                	lw	s0,8(sp)
204019f4:	0141                	addi	sp,sp,16
204019f6:	8082                	ret

204019f8 <__sread>:
__sread():
204019f8:	1141                	addi	sp,sp,-16
204019fa:	c422                	sw	s0,8(sp)
204019fc:	842e                	mv	s0,a1
204019fe:	00e59583          	lh	a1,14(a1)
20401a02:	c606                	sw	ra,12(sp)
20401a04:	224d                	jal	20401ba6 <_read_r>
20401a06:	00054963          	bltz	a0,20401a18 <__sread+0x20>
20401a0a:	487c                	lw	a5,84(s0)
20401a0c:	97aa                	add	a5,a5,a0
20401a0e:	c87c                	sw	a5,84(s0)
20401a10:	40b2                	lw	ra,12(sp)
20401a12:	4422                	lw	s0,8(sp)
20401a14:	0141                	addi	sp,sp,16
20401a16:	8082                	ret
20401a18:	00c45783          	lhu	a5,12(s0)
20401a1c:	777d                	lui	a4,0xfffff
20401a1e:	177d                	addi	a4,a4,-1
20401a20:	8ff9                	and	a5,a5,a4
20401a22:	00f41623          	sh	a5,12(s0)
20401a26:	b7ed                	j	20401a10 <__sread+0x18>

20401a28 <__swrite>:
__swrite():
20401a28:	00c5d783          	lhu	a5,12(a1)
20401a2c:	1101                	addi	sp,sp,-32
20401a2e:	cc22                	sw	s0,24(sp)
20401a30:	ca26                	sw	s1,20(sp)
20401a32:	c84a                	sw	s2,16(sp)
20401a34:	c64e                	sw	s3,12(sp)
20401a36:	ce06                	sw	ra,28(sp)
20401a38:	1007f793          	andi	a5,a5,256
20401a3c:	84aa                	mv	s1,a0
20401a3e:	842e                	mv	s0,a1
20401a40:	8932                	mv	s2,a2
20401a42:	89b6                	mv	s3,a3
20401a44:	c791                	beqz	a5,20401a50 <__swrite+0x28>
20401a46:	00e59583          	lh	a1,14(a1)
20401a4a:	4689                	li	a3,2
20401a4c:	4601                	li	a2,0
20401a4e:	220d                	jal	20401b70 <_lseek_r>
20401a50:	00c45783          	lhu	a5,12(s0)
20401a54:	777d                	lui	a4,0xfffff
20401a56:	177d                	addi	a4,a4,-1
20401a58:	8ff9                	and	a5,a5,a4
20401a5a:	00e41583          	lh	a1,14(s0)
20401a5e:	00f41623          	sh	a5,12(s0)
20401a62:	4462                	lw	s0,24(sp)
20401a64:	40f2                	lw	ra,28(sp)
20401a66:	86ce                	mv	a3,s3
20401a68:	864a                	mv	a2,s2
20401a6a:	49b2                	lw	s3,12(sp)
20401a6c:	4942                	lw	s2,16(sp)
20401a6e:	8526                	mv	a0,s1
20401a70:	44d2                	lw	s1,20(sp)
20401a72:	6105                	addi	sp,sp,32
20401a74:	a83d                	j	20401ab2 <_write_r>

20401a76 <__sseek>:
__sseek():
20401a76:	1141                	addi	sp,sp,-16
20401a78:	c422                	sw	s0,8(sp)
20401a7a:	842e                	mv	s0,a1
20401a7c:	00e59583          	lh	a1,14(a1)
20401a80:	c606                	sw	ra,12(sp)
20401a82:	20fd                	jal	20401b70 <_lseek_r>
20401a84:	57fd                	li	a5,-1
20401a86:	00c45703          	lhu	a4,12(s0)
20401a8a:	00f51b63          	bne	a0,a5,20401aa0 <__sseek+0x2a>
20401a8e:	77fd                	lui	a5,0xfffff
20401a90:	17fd                	addi	a5,a5,-1
20401a92:	8ff9                	and	a5,a5,a4
20401a94:	00f41623          	sh	a5,12(s0)
20401a98:	40b2                	lw	ra,12(sp)
20401a9a:	4422                	lw	s0,8(sp)
20401a9c:	0141                	addi	sp,sp,16
20401a9e:	8082                	ret
20401aa0:	6785                	lui	a5,0x1
20401aa2:	8fd9                	or	a5,a5,a4
20401aa4:	00f41623          	sh	a5,12(s0)
20401aa8:	c868                	sw	a0,84(s0)
20401aaa:	b7fd                	j	20401a98 <__sseek+0x22>

20401aac <__sclose>:
__sclose():
20401aac:	00e59583          	lh	a1,14(a1)
20401ab0:	a815                	j	20401ae4 <_close_r>

20401ab2 <_write_r>:
_write_r():
20401ab2:	1141                	addi	sp,sp,-16
20401ab4:	c422                	sw	s0,8(sp)
20401ab6:	842a                	mv	s0,a0
20401ab8:	852e                	mv	a0,a1
20401aba:	85b2                	mv	a1,a2
20401abc:	8636                	mv	a2,a3
20401abe:	5fbff797          	auipc	a5,0x5fbff
20401ac2:	d007a923          	sw	zero,-750(a5) # 800007d0 <errno>
20401ac6:	c606                	sw	ra,12(sp)
20401ac8:	24a9                	jal	20401d12 <_write>
20401aca:	57fd                	li	a5,-1
20401acc:	00f51863          	bne	a0,a5,20401adc <_write_r+0x2a>
20401ad0:	5fbff797          	auipc	a5,0x5fbff
20401ad4:	d007a783          	lw	a5,-768(a5) # 800007d0 <errno>
20401ad8:	c391                	beqz	a5,20401adc <_write_r+0x2a>
20401ada:	c01c                	sw	a5,0(s0)
20401adc:	40b2                	lw	ra,12(sp)
20401ade:	4422                	lw	s0,8(sp)
20401ae0:	0141                	addi	sp,sp,16
20401ae2:	8082                	ret

20401ae4 <_close_r>:
_close_r():
20401ae4:	1141                	addi	sp,sp,-16
20401ae6:	c422                	sw	s0,8(sp)
20401ae8:	842a                	mv	s0,a0
20401aea:	852e                	mv	a0,a1
20401aec:	5fbff797          	auipc	a5,0x5fbff
20401af0:	ce07a223          	sw	zero,-796(a5) # 800007d0 <errno>
20401af4:	c606                	sw	ra,12(sp)
20401af6:	20cd                	jal	20401bd8 <_close>
20401af8:	57fd                	li	a5,-1
20401afa:	00f51863          	bne	a0,a5,20401b0a <_close_r+0x26>
20401afe:	5fbff797          	auipc	a5,0x5fbff
20401b02:	cd27a783          	lw	a5,-814(a5) # 800007d0 <errno>
20401b06:	c391                	beqz	a5,20401b0a <_close_r+0x26>
20401b08:	c01c                	sw	a5,0(s0)
20401b0a:	40b2                	lw	ra,12(sp)
20401b0c:	4422                	lw	s0,8(sp)
20401b0e:	0141                	addi	sp,sp,16
20401b10:	8082                	ret

20401b12 <_fstat_r>:
_fstat_r():
20401b12:	1141                	addi	sp,sp,-16
20401b14:	c422                	sw	s0,8(sp)
20401b16:	842a                	mv	s0,a0
20401b18:	852e                	mv	a0,a1
20401b1a:	85b2                	mv	a1,a2
20401b1c:	5fbff797          	auipc	a5,0x5fbff
20401b20:	ca07aa23          	sw	zero,-844(a5) # 800007d0 <errno>
20401b24:	c606                	sw	ra,12(sp)
20401b26:	28d1                	jal	20401bfa <_fstat>
20401b28:	57fd                	li	a5,-1
20401b2a:	00f51863          	bne	a0,a5,20401b3a <_fstat_r+0x28>
20401b2e:	5fbff797          	auipc	a5,0x5fbff
20401b32:	ca27a783          	lw	a5,-862(a5) # 800007d0 <errno>
20401b36:	c391                	beqz	a5,20401b3a <_fstat_r+0x28>
20401b38:	c01c                	sw	a5,0(s0)
20401b3a:	40b2                	lw	ra,12(sp)
20401b3c:	4422                	lw	s0,8(sp)
20401b3e:	0141                	addi	sp,sp,16
20401b40:	8082                	ret

20401b42 <_isatty_r>:
_isatty_r():
20401b42:	1141                	addi	sp,sp,-16
20401b44:	c422                	sw	s0,8(sp)
20401b46:	842a                	mv	s0,a0
20401b48:	852e                	mv	a0,a1
20401b4a:	5fbff797          	auipc	a5,0x5fbff
20401b4e:	c807a323          	sw	zero,-890(a5) # 800007d0 <errno>
20401b52:	c606                	sw	ra,12(sp)
20401b54:	20f1                	jal	20401c20 <_isatty>
20401b56:	57fd                	li	a5,-1
20401b58:	00f51863          	bne	a0,a5,20401b68 <_isatty_r+0x26>
20401b5c:	5fbff797          	auipc	a5,0x5fbff
20401b60:	c747a783          	lw	a5,-908(a5) # 800007d0 <errno>
20401b64:	c391                	beqz	a5,20401b68 <_isatty_r+0x26>
20401b66:	c01c                	sw	a5,0(s0)
20401b68:	40b2                	lw	ra,12(sp)
20401b6a:	4422                	lw	s0,8(sp)
20401b6c:	0141                	addi	sp,sp,16
20401b6e:	8082                	ret

20401b70 <_lseek_r>:
_lseek_r():
20401b70:	1141                	addi	sp,sp,-16
20401b72:	c422                	sw	s0,8(sp)
20401b74:	842a                	mv	s0,a0
20401b76:	852e                	mv	a0,a1
20401b78:	85b2                	mv	a1,a2
20401b7a:	8636                	mv	a2,a3
20401b7c:	5fbff797          	auipc	a5,0x5fbff
20401b80:	c407aa23          	sw	zero,-940(a5) # 800007d0 <errno>
20401b84:	c606                	sw	ra,12(sp)
20401b86:	286d                	jal	20401c40 <_lseek>
20401b88:	57fd                	li	a5,-1
20401b8a:	00f51863          	bne	a0,a5,20401b9a <_lseek_r+0x2a>
20401b8e:	5fbff797          	auipc	a5,0x5fbff
20401b92:	c427a783          	lw	a5,-958(a5) # 800007d0 <errno>
20401b96:	c391                	beqz	a5,20401b9a <_lseek_r+0x2a>
20401b98:	c01c                	sw	a5,0(s0)
20401b9a:	40b2                	lw	ra,12(sp)
20401b9c:	4422                	lw	s0,8(sp)
20401b9e:	0141                	addi	sp,sp,16
20401ba0:	8082                	ret

20401ba2 <__malloc_lock>:
__malloc_lock():
20401ba2:	8082                	ret

20401ba4 <__malloc_unlock>:
__malloc_unlock():
20401ba4:	8082                	ret

20401ba6 <_read_r>:
_read_r():
20401ba6:	1141                	addi	sp,sp,-16
20401ba8:	c422                	sw	s0,8(sp)
20401baa:	842a                	mv	s0,a0
20401bac:	852e                	mv	a0,a1
20401bae:	85b2                	mv	a1,a2
20401bb0:	8636                	mv	a2,a3
20401bb2:	5fbff797          	auipc	a5,0x5fbff
20401bb6:	c007af23          	sw	zero,-994(a5) # 800007d0 <errno>
20401bba:	c606                	sw	ra,12(sp)
20401bbc:	207d                	jal	20401c6a <_read>
20401bbe:	57fd                	li	a5,-1
20401bc0:	00f51863          	bne	a0,a5,20401bd0 <_read_r+0x2a>
20401bc4:	5fbff797          	auipc	a5,0x5fbff
20401bc8:	c0c7a783          	lw	a5,-1012(a5) # 800007d0 <errno>
20401bcc:	c391                	beqz	a5,20401bd0 <_read_r+0x2a>
20401bce:	c01c                	sw	a5,0(s0)
20401bd0:	40b2                	lw	ra,12(sp)
20401bd2:	4422                	lw	s0,8(sp)
20401bd4:	0141                	addi	sp,sp,16
20401bd6:	8082                	ret

20401bd8 <_close>:
_close():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
20401bd8:	1101                	addi	sp,sp,-32
20401bda:	ce06                	sw	ra,28(sp)
20401bdc:	cc22                	sw	s0,24(sp)
20401bde:	1000                	addi	s0,sp,32
20401be0:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20401be4:	225d                	jal	20401d8a <__errno>
20401be6:	872a                	mv	a4,a0
20401be8:	05800793          	li	a5,88
20401bec:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_close.c:5
    return -1;
20401bee:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_close.c:6
}
20401bf0:	853e                	mv	a0,a5
20401bf2:	40f2                	lw	ra,28(sp)
20401bf4:	4462                	lw	s0,24(sp)
20401bf6:	6105                	addi	sp,sp,32
20401bf8:	8082                	ret

20401bfa <_fstat>:
_fstat():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20401bfa:	1101                	addi	sp,sp,-32
20401bfc:	ce06                	sw	ra,28(sp)
20401bfe:	cc22                	sw	s0,24(sp)
20401c00:	1000                	addi	s0,sp,32
20401c02:	fea42623          	sw	a0,-20(s0)
20401c06:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
20401c0a:	2241                	jal	20401d8a <__errno>
20401c0c:	872a                	mv	a4,a0
20401c0e:	fa800793          	li	a5,-88
20401c12:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20401c14:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_fstat.c:7
}
20401c16:	853e                	mv	a0,a5
20401c18:	40f2                	lw	ra,28(sp)
20401c1a:	4462                	lw	s0,24(sp)
20401c1c:	6105                	addi	sp,sp,32
20401c1e:	8082                	ret

20401c20 <_isatty>:
_isatty():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
20401c20:	1101                	addi	sp,sp,-32
20401c22:	ce22                	sw	s0,28(sp)
20401c24:	1000                	addi	s0,sp,32
20401c26:	fea42623          	sw	a0,-20(s0)
20401c2a:	fec42783          	lw	a5,-20(s0)
20401c2e:	17fd                	addi	a5,a5,-1
20401c30:	0017b793          	seqz	a5,a5
20401c34:	0ff7f793          	zext.b	a5,a5
20401c38:	853e                	mv	a0,a5
20401c3a:	4472                	lw	s0,28(sp)
20401c3c:	6105                	addi	sp,sp,32
20401c3e:	8082                	ret

20401c40 <_lseek>:
_lseek():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
20401c40:	1101                	addi	sp,sp,-32
20401c42:	ce06                	sw	ra,28(sp)
20401c44:	cc22                	sw	s0,24(sp)
20401c46:	1000                	addi	s0,sp,32
20401c48:	fea42623          	sw	a0,-20(s0)
20401c4c:	feb42423          	sw	a1,-24(s0)
20401c50:	fec42223          	sw	a2,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20401c54:	2a1d                	jal	20401d8a <__errno>
20401c56:	872a                	mv	a4,a0
20401c58:	05800793          	li	a5,88
20401c5c:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_lseek.c:6
    return -1;
20401c5e:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_lseek.c:7
}
20401c60:	853e                	mv	a0,a5
20401c62:	40f2                	lw	ra,28(sp)
20401c64:	4462                	lw	s0,24(sp)
20401c66:	6105                	addi	sp,sp,32
20401c68:	8082                	ret

20401c6a <_read>:
_read():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20401c6a:	1101                	addi	sp,sp,-32
20401c6c:	ce06                	sw	ra,28(sp)
20401c6e:	cc22                	sw	s0,24(sp)
20401c70:	1000                	addi	s0,sp,32
20401c72:	fea42623          	sw	a0,-20(s0)
20401c76:	feb42423          	sw	a1,-24(s0)
20401c7a:	fec42223          	sw	a2,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20401c7e:	2231                	jal	20401d8a <__errno>
20401c80:	872a                	mv	a4,a0
20401c82:	05800793          	li	a5,88
20401c86:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_read.c:6
    return -1;
20401c88:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_read.c:7
}
20401c8a:	853e                	mv	a0,a5
20401c8c:	40f2                	lw	ra,28(sp)
20401c8e:	4462                	lw	s0,24(sp)
20401c90:	6105                	addi	sp,sp,32
20401c92:	8082                	ret

20401c94 <_sbrk>:
_sbrk():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20401c94:	7179                	addi	sp,sp,-48
20401c96:	d606                	sw	ra,44(sp)
20401c98:	d422                	sw	s0,40(sp)
20401c9a:	1800                	addi	s0,sp,48
20401c9c:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20401ca0:	800007b7          	lui	a5,0x80000
20401ca4:	7a47a783          	lw	a5,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff334>
20401ca8:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20401cac:	cd018713          	addi	a4,gp,-816 # 80000c70 <_sp>
20401cb0:	4d018793          	addi	a5,gp,1232 # 80001470 <metal_segment_heap_target_end>
20401cb4:	00f71463          	bne	a4,a5,20401cbc <_sbrk+0x28>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20401cb8:	57fd                	li	a5,-1
20401cba:	a0b9                	j	20401d08 <_sbrk+0x74>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20401cbc:	800007b7          	lui	a5,0x80000
20401cc0:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff334>
20401cc4:	fdc42783          	lw	a5,-36(s0)
20401cc8:	973e                	add	a4,a4,a5
20401cca:	4d018793          	addi	a5,gp,1232 # 80001470 <metal_segment_heap_target_end>
20401cce:	02f77663          	bgeu	a4,a5,20401cfa <_sbrk+0x66>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20401cd2:	800007b7          	lui	a5,0x80000
20401cd6:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff334>
20401cda:	fdc42783          	lw	a5,-36(s0)
20401cde:	973e                	add	a4,a4,a5
20401ce0:	800007b7          	lui	a5,0x80000
20401ce4:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff334>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20401ce8:	fdc42583          	lw	a1,-36(s0)
20401cec:	fec42503          	lw	a0,-20(s0)
20401cf0:	b9afe0ef          	jal	ra,2040008a <metal_mem_scrub>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20401cf4:	fec42783          	lw	a5,-20(s0)
20401cf8:	a801                	j	20401d08 <_sbrk+0x74>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20401cfa:	800007b7          	lui	a5,0x80000
20401cfe:	4d018713          	addi	a4,gp,1232 # 80001470 <metal_segment_heap_target_end>
20401d02:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xfffff334>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20401d06:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_sbrk.c:43
}
20401d08:	853e                	mv	a0,a5
20401d0a:	50b2                	lw	ra,44(sp)
20401d0c:	5422                	lw	s0,40(sp)
20401d0e:	6145                	addi	sp,sp,48
20401d10:	8082                	ret

20401d12 <_write>:
_write():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20401d12:	7179                	addi	sp,sp,-48
20401d14:	d606                	sw	ra,44(sp)
20401d16:	d422                	sw	s0,40(sp)
20401d18:	1800                	addi	s0,sp,48
20401d1a:	fca42e23          	sw	a0,-36(s0)
20401d1e:	fcb42c23          	sw	a1,-40(s0)
20401d22:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20401d26:	fdc42703          	lw	a4,-36(s0)
20401d2a:	4785                	li	a5,1
20401d2c:	00f70963          	beq	a4,a5,20401d3e <_write+0x2c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20401d30:	28a9                	jal	20401d8a <__errno>
20401d32:	872a                	mv	a4,a0
20401d34:	05800793          	li	a5,88
20401d38:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_write.c:10
        return -1;
20401d3a:	57fd                	li	a5,-1
20401d3c:	a82d                	j	20401d76 <_write+0x64>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20401d3e:	fd842783          	lw	a5,-40(s0)
20401d42:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20401d46:	fe042623          	sw	zero,-20(s0)
20401d4a:	a839                	j	20401d68 <_write+0x56>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
20401d4c:	fe842703          	lw	a4,-24(s0)
20401d50:	fec42783          	lw	a5,-20(s0)
20401d54:	97ba                	add	a5,a5,a4
20401d56:	0007c783          	lbu	a5,0(a5)
20401d5a:	853e                	mv	a0,a5
20401d5c:	2e89                	jal	204020ae <metal_tty_putc>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20401d5e:	fec42783          	lw	a5,-20(s0)
20401d62:	0785                	addi	a5,a5,1
20401d64:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20401d68:	fec42703          	lw	a4,-20(s0)
20401d6c:	fd442783          	lw	a5,-44(s0)
20401d70:	fcf76ee3          	bltu	a4,a5,20401d4c <_write+0x3a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_write.c:16
    return 0;
20401d74:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_write.c:17
}
20401d76:	853e                	mv	a0,a5
20401d78:	50b2                	lw	ra,44(sp)
20401d7a:	5422                	lw	s0,40(sp)
20401d7c:	6145                	addi	sp,sp,48
20401d7e:	8082                	ret

20401d80 <atexit>:
atexit():
20401d80:	85aa                	mv	a1,a0
20401d82:	4681                	li	a3,0
20401d84:	4601                	li	a2,0
20401d86:	4501                	li	a0,0
20401d88:	a0e9                	j	20401e52 <__register_exitproc>

20401d8a <__errno>:
__errno():
20401d8a:	5fbff517          	auipc	a0,0x5fbff
20401d8e:	a1652503          	lw	a0,-1514(a0) # 800007a0 <_impure_ptr>
20401d92:	8082                	ret

20401d94 <exit>:
exit():
20401d94:	1141                	addi	sp,sp,-16
20401d96:	c422                	sw	s0,8(sp)
20401d98:	c606                	sw	ra,12(sp)
20401d9a:	00000797          	auipc	a5,0x0
20401d9e:	13478793          	addi	a5,a5,308 # 20401ece <__call_exitprocs>
20401da2:	842a                	mv	s0,a0
20401da4:	c399                	beqz	a5,20401daa <exit+0x16>
20401da6:	4581                	li	a1,0
20401da8:	221d                	jal	20401ece <__call_exitprocs>
20401daa:	fffff517          	auipc	a0,0xfffff
20401dae:	18e52503          	lw	a0,398(a0) # 20400f38 <_global_impure_ptr>
20401db2:	551c                	lw	a5,40(a0)
20401db4:	c391                	beqz	a5,20401db8 <exit+0x24>
20401db6:	9782                	jalr	a5
20401db8:	8522                	mv	a0,s0
20401dba:	1e9040ef          	jal	ra,204067a2 <_exit>

20401dbe <__libc_fini_array>:
__libc_fini_array():
20401dbe:	1141                	addi	sp,sp,-16
20401dc0:	c422                	sw	s0,8(sp)
20401dc2:	c226                	sw	s1,4(sp)
20401dc4:	ffffe417          	auipc	s0,0xffffe
20401dc8:	52c40413          	addi	s0,s0,1324 # 204002f0 <__fini_array_end>
20401dcc:	ffffe497          	auipc	s1,0xffffe
20401dd0:	52448493          	addi	s1,s1,1316 # 204002f0 <__fini_array_end>
20401dd4:	8c05                	sub	s0,s0,s1
20401dd6:	c606                	sw	ra,12(sp)
20401dd8:	8409                	srai	s0,s0,0x2
20401dda:	e411                	bnez	s0,20401de6 <__libc_fini_array+0x28>
20401ddc:	40b2                	lw	ra,12(sp)
20401dde:	4422                	lw	s0,8(sp)
20401de0:	4492                	lw	s1,4(sp)
20401de2:	0141                	addi	sp,sp,16
20401de4:	8082                	ret
20401de6:	147d                	addi	s0,s0,-1
20401de8:	00241793          	slli	a5,s0,0x2
20401dec:	97a6                	add	a5,a5,s1
20401dee:	439c                	lw	a5,0(a5)
20401df0:	9782                	jalr	a5
20401df2:	b7e5                	j	20401dda <__libc_fini_array+0x1c>

20401df4 <__libc_init_array>:
__libc_init_array():
20401df4:	1141                	addi	sp,sp,-16
20401df6:	c422                	sw	s0,8(sp)
20401df8:	c226                	sw	s1,4(sp)
20401dfa:	ffffe417          	auipc	s0,0xffffe
20401dfe:	4e640413          	addi	s0,s0,1254 # 204002e0 <_metal_tty_init_ptr>
20401e02:	ffffe497          	auipc	s1,0xffffe
20401e06:	4de48493          	addi	s1,s1,1246 # 204002e0 <_metal_tty_init_ptr>
20401e0a:	8c81                	sub	s1,s1,s0
20401e0c:	c04a                	sw	s2,0(sp)
20401e0e:	c606                	sw	ra,12(sp)
20401e10:	8489                	srai	s1,s1,0x2
20401e12:	4901                	li	s2,0
20401e14:	02991563          	bne	s2,s1,20401e3e <__libc_init_array+0x4a>
20401e18:	ffffe417          	auipc	s0,0xffffe
20401e1c:	4c840413          	addi	s0,s0,1224 # 204002e0 <_metal_tty_init_ptr>
20401e20:	ffffe497          	auipc	s1,0xffffe
20401e24:	4c048493          	addi	s1,s1,1216 # 204002e0 <_metal_tty_init_ptr>
20401e28:	8c81                	sub	s1,s1,s0
20401e2a:	8489                	srai	s1,s1,0x2
20401e2c:	4901                	li	s2,0
20401e2e:	00991d63          	bne	s2,s1,20401e48 <__libc_init_array+0x54>
20401e32:	40b2                	lw	ra,12(sp)
20401e34:	4422                	lw	s0,8(sp)
20401e36:	4492                	lw	s1,4(sp)
20401e38:	4902                	lw	s2,0(sp)
20401e3a:	0141                	addi	sp,sp,16
20401e3c:	8082                	ret
20401e3e:	401c                	lw	a5,0(s0)
20401e40:	0905                	addi	s2,s2,1
20401e42:	0411                	addi	s0,s0,4
20401e44:	9782                	jalr	a5
20401e46:	b7f9                	j	20401e14 <__libc_init_array+0x20>
20401e48:	401c                	lw	a5,0(s0)
20401e4a:	0905                	addi	s2,s2,1
20401e4c:	0411                	addi	s0,s0,4
20401e4e:	9782                	jalr	a5
20401e50:	bff9                	j	20401e2e <__libc_init_array+0x3a>

20401e52 <__register_exitproc>:
__register_exitproc():
20401e52:	88aa                	mv	a7,a0
20401e54:	5fbff517          	auipc	a0,0x5fbff
20401e58:	98050513          	addi	a0,a0,-1664 # 800007d4 <_global_atexit>
20401e5c:	411c                	lw	a5,0(a0)
20401e5e:	ef91                	bnez	a5,20401e7a <__register_exitproc+0x28>
20401e60:	5fbff717          	auipc	a4,0x5fbff
20401e64:	98070713          	addi	a4,a4,-1664 # 800007e0 <_global_atexit0>
20401e68:	c118                	sw	a4,0(a0)
20401e6a:	00000513          	li	a0,0
20401e6e:	87ba                	mv	a5,a4
20401e70:	c509                	beqz	a0,20401e7a <__register_exitproc+0x28>
20401e72:	411c                	lw	a5,0(a0)
20401e74:	08f72423          	sw	a5,136(a4)
20401e78:	87ba                	mv	a5,a4
20401e7a:	43d8                	lw	a4,4(a5)
20401e7c:	487d                	li	a6,31
20401e7e:	557d                	li	a0,-1
20401e80:	04e84663          	blt	a6,a4,20401ecc <__register_exitproc+0x7a>
20401e84:	02088d63          	beqz	a7,20401ebe <__register_exitproc+0x6c>
20401e88:	0887a803          	lw	a6,136(a5)
20401e8c:	04080063          	beqz	a6,20401ecc <__register_exitproc+0x7a>
20401e90:	00271513          	slli	a0,a4,0x2
20401e94:	9542                	add	a0,a0,a6
20401e96:	c110                	sw	a2,0(a0)
20401e98:	10082303          	lw	t1,256(a6)
20401e9c:	4605                	li	a2,1
20401e9e:	00e61633          	sll	a2,a2,a4
20401ea2:	00c36333          	or	t1,t1,a2
20401ea6:	10682023          	sw	t1,256(a6)
20401eaa:	08d52023          	sw	a3,128(a0)
20401eae:	4689                	li	a3,2
20401eb0:	00d89763          	bne	a7,a3,20401ebe <__register_exitproc+0x6c>
20401eb4:	10482683          	lw	a3,260(a6)
20401eb8:	8e55                	or	a2,a2,a3
20401eba:	10c82223          	sw	a2,260(a6)
20401ebe:	00170693          	addi	a3,a4,1
20401ec2:	070a                	slli	a4,a4,0x2
20401ec4:	c3d4                	sw	a3,4(a5)
20401ec6:	97ba                	add	a5,a5,a4
20401ec8:	c78c                	sw	a1,8(a5)
20401eca:	4501                	li	a0,0
20401ecc:	8082                	ret

20401ece <__call_exitprocs>:
__call_exitprocs():
20401ece:	7179                	addi	sp,sp,-48
20401ed0:	ca56                	sw	s5,20(sp)
20401ed2:	c85a                	sw	s6,16(sp)
20401ed4:	c65e                	sw	s7,12(sp)
20401ed6:	c462                	sw	s8,8(sp)
20401ed8:	d606                	sw	ra,44(sp)
20401eda:	d422                	sw	s0,40(sp)
20401edc:	d226                	sw	s1,36(sp)
20401ede:	d04a                	sw	s2,32(sp)
20401ee0:	ce4e                	sw	s3,28(sp)
20401ee2:	cc52                	sw	s4,24(sp)
20401ee4:	c266                	sw	s9,4(sp)
20401ee6:	8b2a                	mv	s6,a0
20401ee8:	8aae                	mv	s5,a1
20401eea:	5fbffb97          	auipc	s7,0x5fbff
20401eee:	8eab8b93          	addi	s7,s7,-1814 # 800007d4 <_global_atexit>
20401ef2:	4c05                	li	s8,1
20401ef4:	000ba483          	lw	s1,0(s7)
20401ef8:	cc81                	beqz	s1,20401f10 <__call_exitprocs+0x42>
20401efa:	40c0                	lw	s0,4(s1)
20401efc:	0884a983          	lw	s3,136(s1)
20401f00:	fff40913          	addi	s2,s0,-1
20401f04:	040a                	slli	s0,s0,0x2
20401f06:	00898a33          	add	s4,s3,s0
20401f0a:	9426                	add	s0,s0,s1
20401f0c:	00095f63          	bgez	s2,20401f2a <__call_exitprocs+0x5c>
20401f10:	50b2                	lw	ra,44(sp)
20401f12:	5422                	lw	s0,40(sp)
20401f14:	5492                	lw	s1,36(sp)
20401f16:	5902                	lw	s2,32(sp)
20401f18:	49f2                	lw	s3,28(sp)
20401f1a:	4a62                	lw	s4,24(sp)
20401f1c:	4ad2                	lw	s5,20(sp)
20401f1e:	4b42                	lw	s6,16(sp)
20401f20:	4bb2                	lw	s7,12(sp)
20401f22:	4c22                	lw	s8,8(sp)
20401f24:	4c92                	lw	s9,4(sp)
20401f26:	6145                	addi	sp,sp,48
20401f28:	8082                	ret
20401f2a:	000a8c63          	beqz	s5,20401f42 <__call_exitprocs+0x74>
20401f2e:	00099663          	bnez	s3,20401f3a <__call_exitprocs+0x6c>
20401f32:	197d                	addi	s2,s2,-1
20401f34:	1a71                	addi	s4,s4,-4
20401f36:	1471                	addi	s0,s0,-4
20401f38:	bfd1                	j	20401f0c <__call_exitprocs+0x3e>
20401f3a:	07ca2783          	lw	a5,124(s4)
20401f3e:	ff579ae3          	bne	a5,s5,20401f32 <__call_exitprocs+0x64>
20401f42:	40d8                	lw	a4,4(s1)
20401f44:	405c                	lw	a5,4(s0)
20401f46:	177d                	addi	a4,a4,-1
20401f48:	03271863          	bne	a4,s2,20401f78 <__call_exitprocs+0xaa>
20401f4c:	0124a223          	sw	s2,4(s1)
20401f50:	d3ed                	beqz	a5,20401f32 <__call_exitprocs+0x64>
20401f52:	0044ac83          	lw	s9,4(s1)
20401f56:	00098863          	beqz	s3,20401f66 <__call_exitprocs+0x98>
20401f5a:	1009a683          	lw	a3,256(s3)
20401f5e:	012c1733          	sll	a4,s8,s2
20401f62:	8ef9                	and	a3,a3,a4
20401f64:	ee89                	bnez	a3,20401f7e <__call_exitprocs+0xb0>
20401f66:	9782                	jalr	a5
20401f68:	40d8                	lw	a4,4(s1)
20401f6a:	000ba783          	lw	a5,0(s7)
20401f6e:	f99713e3          	bne	a4,s9,20401ef4 <__call_exitprocs+0x26>
20401f72:	fcf480e3          	beq	s1,a5,20401f32 <__call_exitprocs+0x64>
20401f76:	bfbd                	j	20401ef4 <__call_exitprocs+0x26>
20401f78:	00042223          	sw	zero,4(s0)
20401f7c:	bfd1                	j	20401f50 <__call_exitprocs+0x82>
20401f7e:	1049a683          	lw	a3,260(s3)
20401f82:	ffca2583          	lw	a1,-4(s4)
20401f86:	8f75                	and	a4,a4,a3
20401f88:	e701                	bnez	a4,20401f90 <__call_exitprocs+0xc2>
20401f8a:	855a                	mv	a0,s6
20401f8c:	9782                	jalr	a5
20401f8e:	bfe9                	j	20401f68 <__call_exitprocs+0x9a>
20401f90:	852e                	mv	a0,a1
20401f92:	9782                	jalr	a5
20401f94:	bfd1                	j	20401f68 <__call_exitprocs+0x9a>

20401f96 <metal_init>:
metal_init():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20401f96:	1101                	addi	sp,sp,-32
20401f98:	ce06                	sw	ra,28(sp)
20401f9a:	cc22                	sw	s0,24(sp)
20401f9c:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20401f9e:	800007b7          	lui	a5,0x80000
20401fa2:	7d87a783          	lw	a5,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xfffff368>
20401fa6:	efa9                	bnez	a5,20402000 <metal_init+0x6a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20401fa8:	800007b7          	lui	a5,0x80000
20401fac:	4705                	li	a4,1
20401fae:	7ce7ac23          	sw	a4,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xfffff368>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20401fb2:	204007b7          	lui	a5,0x20400
20401fb6:	2ec78713          	addi	a4,a5,748 # 204002ec <metal_tty_init>
20401fba:	204007b7          	lui	a5,0x20400
20401fbe:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20401fc2:	04e7f163          	bgeu	a5,a4,20402004 <metal_init+0x6e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20401fc6:	204007b7          	lui	a5,0x20400
20401fca:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20401fce:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20401fd2:	a831                	j	20401fee <metal_init+0x58>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20401fd4:	fec42783          	lw	a5,-20(s0)
20401fd8:	439c                	lw	a5,0(a5)
20401fda:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:33

        func();
20401fde:	fe842783          	lw	a5,-24(s0)
20401fe2:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:35

        funcptr += 1;
20401fe4:	fec42783          	lw	a5,-20(s0)
20401fe8:	0791                	addi	a5,a5,4
20401fea:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20401fee:	fec42703          	lw	a4,-20(s0)
20401ff2:	204007b7          	lui	a5,0x20400
20401ff6:	2ec78793          	addi	a5,a5,748 # 204002ec <metal_tty_init>
20401ffa:	fcf71de3          	bne	a4,a5,20401fd4 <metal_init+0x3e>
20401ffe:	a021                	j	20402006 <metal_init+0x70>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:21
        return;
20402000:	0001                	nop
20402002:	a011                	j	20402006 <metal_init+0x70>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:26
        return;
20402004:	0001                	nop
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:37
    }
}
20402006:	40f2                	lw	ra,28(sp)
20402008:	4462                	lw	s0,24(sp)
2040200a:	6105                	addi	sp,sp,32
2040200c:	8082                	ret

2040200e <metal_fini>:
metal_fini():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:39

void metal_fini(void) {
2040200e:	1101                	addi	sp,sp,-32
20402010:	ce06                	sw	ra,28(sp)
20402012:	cc22                	sw	s0,24(sp)
20402014:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
20402016:	800007b7          	lui	a5,0x80000
2040201a:	7dc7a783          	lw	a5,2012(a5) # 800007dc <metal_segment_heap_target_end+0xfffff36c>
2040201e:	efa9                	bnez	a5,20402078 <metal_fini+0x6a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
20402020:	800007b7          	lui	a5,0x80000
20402024:	4705                	li	a4,1
20402026:	7ce7ae23          	sw	a4,2012(a5) # 800007dc <metal_segment_heap_target_end+0xfffff36c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
2040202a:	204007b7          	lui	a5,0x20400
2040202e:	2f078713          	addi	a4,a5,752 # 204002f0 <__fini_array_end>
20402032:	204007b7          	lui	a5,0x20400
20402036:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
2040203a:	04e7f163          	bgeu	a5,a4,2040207c <metal_fini+0x6e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
2040203e:	204007b7          	lui	a5,0x20400
20402042:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402046:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
2040204a:	a831                	j	20402066 <metal_fini+0x58>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
2040204c:	fec42783          	lw	a5,-20(s0)
20402050:	439c                	lw	a5,0(a5)
20402052:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:55

        func();
20402056:	fe842783          	lw	a5,-24(s0)
2040205a:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:57

        funcptr += 1;
2040205c:	fec42783          	lw	a5,-20(s0)
20402060:	0791                	addi	a5,a5,4
20402062:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20402066:	fec42703          	lw	a4,-20(s0)
2040206a:	204007b7          	lui	a5,0x20400
2040206e:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402072:	fcf71de3          	bne	a4,a5,2040204c <metal_fini+0x3e>
20402076:	a021                	j	2040207e <metal_fini+0x70>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:43
        return;
20402078:	0001                	nop
2040207a:	a011                	j	2040207e <metal_fini+0x70>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:48
        return;
2040207c:	0001                	nop
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:59
    }
}
2040207e:	40f2                	lw	ra,28(sp)
20402080:	4462                	lw	s0,24(sp)
20402082:	6105                	addi	sp,sp,32
20402084:	8082                	ret

20402086 <metal_init_run>:
metal_init_run():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
20402086:	1141                	addi	sp,sp,-16
20402088:	c606                	sw	ra,12(sp)
2040208a:	c422                	sw	s0,8(sp)
2040208c:	0800                	addi	s0,sp,16
2040208e:	3721                	jal	20401f96 <metal_init>
20402090:	0001                	nop
20402092:	40b2                	lw	ra,12(sp)
20402094:	4422                	lw	s0,8(sp)
20402096:	0141                	addi	sp,sp,16
20402098:	8082                	ret

2040209a <metal_fini_run>:
metal_fini_run():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
2040209a:	1141                	addi	sp,sp,-16
2040209c:	c606                	sw	ra,12(sp)
2040209e:	c422                	sw	s0,8(sp)
204020a0:	0800                	addi	s0,sp,16
204020a2:	37b5                	jal	2040200e <metal_fini>
204020a4:	0001                	nop
204020a6:	40b2                	lw	ra,12(sp)
204020a8:	4422                	lw	s0,8(sp)
204020aa:	0141                	addi	sp,sp,16
204020ac:	8082                	ret

204020ae <metal_tty_putc>:
metal_tty_putc():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
204020ae:	1101                	addi	sp,sp,-32
204020b0:	ce06                	sw	ra,28(sp)
204020b2:	cc22                	sw	s0,24(sp)
204020b4:	1000                	addi	s0,sp,32
204020b6:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
204020ba:	fec42583          	lw	a1,-20(s0)
204020be:	800007b7          	lui	a5,0x80000
204020c2:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
204020c6:	282d                	jal	20402100 <metal_uart_putc>
204020c8:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/tty.c:14
}
204020ca:	853e                	mv	a0,a5
204020cc:	40f2                	lw	ra,28(sp)
204020ce:	4462                	lw	s0,24(sp)
204020d0:	6105                	addi	sp,sp,32
204020d2:	8082                	ret

204020d4 <metal_uart_init>:
metal_uart_init():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
204020d4:	1101                	addi	sp,sp,-32
204020d6:	ce06                	sw	ra,28(sp)
204020d8:	cc22                	sw	s0,24(sp)
204020da:	1000                	addi	s0,sp,32
204020dc:	fea42623          	sw	a0,-20(s0)
204020e0:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
204020e4:	fec42783          	lw	a5,-20(s0)
204020e8:	439c                	lw	a5,0(a5)
204020ea:	439c                	lw	a5,0(a5)
204020ec:	fe842583          	lw	a1,-24(s0)
204020f0:	fec42503          	lw	a0,-20(s0)
204020f4:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/uart.h:61
}
204020f6:	0001                	nop
204020f8:	40f2                	lw	ra,28(sp)
204020fa:	4462                	lw	s0,24(sp)
204020fc:	6105                	addi	sp,sp,32
204020fe:	8082                	ret

20402100 <metal_uart_putc>:
metal_uart_putc():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
20402100:	1101                	addi	sp,sp,-32
20402102:	ce06                	sw	ra,28(sp)
20402104:	cc22                	sw	s0,24(sp)
20402106:	1000                	addi	s0,sp,32
20402108:	fea42623          	sw	a0,-20(s0)
2040210c:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
20402110:	fec42783          	lw	a5,-20(s0)
20402114:	439c                	lw	a5,0(a5)
20402116:	43dc                	lw	a5,4(a5)
20402118:	fe842583          	lw	a1,-24(s0)
2040211c:	fec42503          	lw	a0,-20(s0)
20402120:	9782                	jalr	a5
20402122:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/uart.h:71
}
20402124:	853e                	mv	a0,a5
20402126:	40f2                	lw	ra,28(sp)
20402128:	4462                	lw	s0,24(sp)
2040212a:	6105                	addi	sp,sp,32
2040212c:	8082                	ret

2040212e <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
2040212e:	1101                	addi	sp,sp,-32
20402130:	ce06                	sw	ra,28(sp)
20402132:	cc22                	sw	s0,24(sp)
20402134:	1000                	addi	s0,sp,32
20402136:	fea42623          	sw	a0,-20(s0)
2040213a:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
2040213e:	fec42783          	lw	a5,-20(s0)
20402142:	439c                	lw	a5,0(a5)
20402144:	4bdc                	lw	a5,20(a5)
20402146:	fe842583          	lw	a1,-24(s0)
2040214a:	fec42503          	lw	a0,-20(s0)
2040214e:	9782                	jalr	a5
20402150:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/uart.h:113
}
20402152:	853e                	mv	a0,a5
20402154:	40f2                	lw	ra,28(sp)
20402156:	4462                	lw	s0,24(sp)
20402158:	6105                	addi	sp,sp,32
2040215a:	8082                	ret

2040215c <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:202
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
2040215c:	1101                	addi	sp,sp,-32
2040215e:	ce22                	sw	s0,28(sp)
20402160:	1000                	addi	s0,sp,32
20402162:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:203
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20402166:	fec42703          	lw	a4,-20(s0)
2040216a:	800007b7          	lui	a5,0x80000
2040216e:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
20402172:	00f71563          	bne	a4,a5,2040217c <__metal_driver_sifive_clint0_control_base+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:204
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20402176:	020007b7          	lui	a5,0x2000
2040217a:	a011                	j	2040217e <__metal_driver_sifive_clint0_control_base+0x22>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:207
	}
	else {
		return 0;
2040217c:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:209
	}
}
2040217e:	853e                	mv	a0,a5
20402180:	4472                	lw	s0,28(sp)
20402182:	6105                	addi	sp,sp,32
20402184:	8082                	ret

20402186 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:222
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20402186:	1101                	addi	sp,sp,-32
20402188:	ce22                	sw	s0,28(sp)
2040218a:	1000                	addi	s0,sp,32
2040218c:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:223
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20402190:	fec42703          	lw	a4,-20(s0)
20402194:	800007b7          	lui	a5,0x80000
20402198:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
2040219c:	00f71463          	bne	a4,a5,204021a4 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:224
		return METAL_MAX_CLINT_INTERRUPTS;
204021a0:	4789                	li	a5,2
204021a2:	a011                	j	204021a6 <__metal_driver_sifive_clint0_num_interrupts+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:227
	}
	else {
		return 0;
204021a4:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:229
	}
}
204021a6:	853e                	mv	a0,a5
204021a8:	4472                	lw	s0,28(sp)
204021aa:	6105                	addi	sp,sp,32
204021ac:	8082                	ret

204021ae <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:232

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
204021ae:	1101                	addi	sp,sp,-32
204021b0:	ce22                	sw	s0,28(sp)
204021b2:	1000                	addi	s0,sp,32
204021b4:	fea42623          	sw	a0,-20(s0)
204021b8:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:233
	if (idx == 0) {
204021bc:	fe842783          	lw	a5,-24(s0)
204021c0:	e791                	bnez	a5,204021cc <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:234
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
204021c2:	800007b7          	lui	a5,0x80000
204021c6:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffec18>
204021ca:	a821                	j	204021e2 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:236
	}
	else if (idx == 1) {
204021cc:	fe842703          	lw	a4,-24(s0)
204021d0:	4785                	li	a5,1
204021d2:	00f71763          	bne	a4,a5,204021e0 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:237
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
204021d6:	800007b7          	lui	a5,0x80000
204021da:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffec18>
204021de:	a011                	j	204021e2 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:240
	}
	else {
		return NULL;
204021e0:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:242
	}
}
204021e2:	853e                	mv	a0,a5
204021e4:	4472                	lw	s0,28(sp)
204021e6:	6105                	addi	sp,sp,32
204021e8:	8082                	ret

204021ea <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:245

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
204021ea:	1101                	addi	sp,sp,-32
204021ec:	ce22                	sw	s0,28(sp)
204021ee:	1000                	addi	s0,sp,32
204021f0:	fea42623          	sw	a0,-20(s0)
204021f4:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:246
	if (idx == 0) {
204021f8:	fe842783          	lw	a5,-24(s0)
204021fc:	e399                	bnez	a5,20402202 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:247
		return 3;
204021fe:	478d                	li	a5,3
20402200:	a809                	j	20402212 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:249
	}
	else if (idx == 1) {
20402202:	fe842703          	lw	a4,-24(s0)
20402206:	4785                	li	a5,1
20402208:	00f71463          	bne	a4,a5,20402210 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:250
		return 7;
2040220c:	479d                	li	a5,7
2040220e:	a011                	j	20402212 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:253
	}
	else {
		return 0;
20402210:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:255
	}
}
20402212:	853e                	mv	a0,a5
20402214:	4472                	lw	s0,28(sp)
20402216:	6105                	addi	sp,sp,32
20402218:	8082                	ret

2040221a <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
2040221a:	715d                	addi	sp,sp,-80
2040221c:	c686                	sw	ra,76(sp)
2040221e:	c4a2                	sw	s0,72(sp)
20402220:	c2ca                	sw	s2,68(sp)
20402222:	c0ce                	sw	s3,64(sp)
20402224:	de52                	sw	s4,60(sp)
20402226:	dc56                	sw	s5,56(sp)
20402228:	da5a                	sw	s6,52(sp)
2040222a:	d85e                	sw	s7,48(sp)
2040222c:	d662                	sw	s8,44(sp)
2040222e:	d466                	sw	s9,40(sp)
20402230:	0880                	addi	s0,sp,80
20402232:	faa42e23          	sw	a0,-68(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20402236:	fbc42783          	lw	a5,-68(s0)
2040223a:	853e                	mv	a0,a5
2040223c:	3705                	jal	2040215c <__metal_driver_sifive_clint0_control_base>
2040223e:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
20402242:	fcc42703          	lw	a4,-52(s0)
20402246:	67b1                	lui	a5,0xc
20402248:	17f1                	addi	a5,a5,-4
2040224a:	97ba                	add	a5,a5,a4
2040224c:	439c                	lw	a5,0(a5)
2040224e:	fcf42423          	sw	a5,-56(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
20402252:	fcc42703          	lw	a4,-52(s0)
20402256:	67b1                	lui	a5,0xc
20402258:	17e1                	addi	a5,a5,-8
2040225a:	97ba                	add	a5,a5,a4
2040225c:	439c                	lw	a5,0(a5)
2040225e:	fcf42223          	sw	a5,-60(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20402262:	fcc42703          	lw	a4,-52(s0)
20402266:	67b1                	lui	a5,0xc
20402268:	17f1                	addi	a5,a5,-4
2040226a:	97ba                	add	a5,a5,a4
2040226c:	439c                	lw	a5,0(a5)
2040226e:	fc842703          	lw	a4,-56(s0)
20402272:	fcf718e3          	bne	a4,a5,20402242 <__metal_clint0_mtime_get+0x28>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
20402276:	fc842783          	lw	a5,-56(s0)
2040227a:	8c3e                	mv	s8,a5
2040227c:	4c81                	li	s9,0
2040227e:	000c1993          	slli	s3,s8,0x0
20402282:	4901                	li	s2,0
20402284:	fc442783          	lw	a5,-60(s0)
20402288:	8a3e                	mv	s4,a5
2040228a:	4a81                	li	s5,0
2040228c:	01496b33          	or	s6,s2,s4
20402290:	0159ebb3          	or	s7,s3,s5
20402294:	875a                	mv	a4,s6
20402296:	87de                	mv	a5,s7
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:30
}
20402298:	853a                	mv	a0,a4
2040229a:	85be                	mv	a1,a5
2040229c:	40b6                	lw	ra,76(sp)
2040229e:	4426                	lw	s0,72(sp)
204022a0:	4916                	lw	s2,68(sp)
204022a2:	4986                	lw	s3,64(sp)
204022a4:	5a72                	lw	s4,60(sp)
204022a6:	5ae2                	lw	s5,56(sp)
204022a8:	5b52                	lw	s6,52(sp)
204022aa:	5bc2                	lw	s7,48(sp)
204022ac:	5c32                	lw	s8,44(sp)
204022ae:	5ca2                	lw	s9,40(sp)
204022b0:	6161                	addi	sp,sp,80
204022b2:	8082                	ret

204022b4 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
204022b4:	7179                	addi	sp,sp,-48
204022b6:	d606                	sw	ra,44(sp)
204022b8:	d422                	sw	s0,40(sp)
204022ba:	d24a                	sw	s2,36(sp)
204022bc:	d04e                	sw	s3,32(sp)
204022be:	1800                	addi	s0,sp,48
204022c0:	fca42e23          	sw	a0,-36(s0)
204022c4:	fcb42c23          	sw	a1,-40(s0)
204022c8:	fcc42823          	sw	a2,-48(s0)
204022cc:	fcd42a23          	sw	a3,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
204022d0:	fdc42783          	lw	a5,-36(s0)
204022d4:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
204022d8:	fec42783          	lw	a5,-20(s0)
204022dc:	853e                	mv	a0,a5
204022de:	3dbd                	jal	2040215c <__metal_driver_sifive_clint0_control_base>
204022e0:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
204022e4:	fd842783          	lw	a5,-40(s0)
204022e8:	078e                	slli	a5,a5,0x3
204022ea:	873e                	mv	a4,a5
204022ec:	fe842783          	lw	a5,-24(s0)
204022f0:	973e                	add	a4,a4,a5
204022f2:	6791                	lui	a5,0x4
204022f4:	0791                	addi	a5,a5,4
204022f6:	97ba                	add	a5,a5,a4
204022f8:	873e                	mv	a4,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
204022fa:	57fd                	li	a5,-1
204022fc:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
204022fe:	fd842783          	lw	a5,-40(s0)
20402302:	078e                	slli	a5,a5,0x3
20402304:	873e                	mv	a4,a5
20402306:	fe842783          	lw	a5,-24(s0)
2040230a:	973e                	add	a4,a4,a5
2040230c:	6791                	lui	a5,0x4
2040230e:	97ba                	add	a5,a5,a4
20402310:	873e                	mv	a4,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
20402312:	fd042783          	lw	a5,-48(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
20402316:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
20402318:	fd442783          	lw	a5,-44(s0)
2040231c:	0007d913          	srli	s2,a5,0x0
20402320:	4981                	li	s3,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20402322:	fd842783          	lw	a5,-40(s0)
20402326:	078e                	slli	a5,a5,0x3
20402328:	873e                	mv	a4,a5
2040232a:	fe842783          	lw	a5,-24(s0)
2040232e:	973e                	add	a4,a4,a5
20402330:	6791                	lui	a5,0x4
20402332:	0791                	addi	a5,a5,4
20402334:	97ba                	add	a5,a5,a4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
20402336:	874a                	mv	a4,s2
20402338:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
2040233a:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:55
}
2040233c:	853e                	mv	a0,a5
2040233e:	50b2                	lw	ra,44(sp)
20402340:	5422                	lw	s0,40(sp)
20402342:	5912                	lw	s2,36(sp)
20402344:	5982                	lw	s3,32(sp)
20402346:	6145                	addi	sp,sp,48
20402348:	8082                	ret

2040234a <_get_cpu_intc>:
_get_cpu_intc():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
2040234a:	1101                	addi	sp,sp,-32
2040234c:	ce06                	sw	ra,28(sp)
2040234e:	cc22                	sw	s0,24(sp)
20402350:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
20402352:	fe042623          	sw	zero,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
20402356:	f14027f3          	csrr	a5,mhartid
2040235a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
2040235e:	fec42783          	lw	a5,-20(s0)
20402362:	853e                	mv	a0,a5
20402364:	268040ef          	jal	ra,204065cc <metal_cpu_get>
20402368:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
2040236c:	fe842503          	lw	a0,-24(s0)
20402370:	236040ef          	jal	ra,204065a6 <metal_cpu_interrupt_controller>
20402374:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:65
}
20402376:	853e                	mv	a0,a5
20402378:	40f2                	lw	ra,28(sp)
2040237a:	4462                	lw	s0,24(sp)
2040237c:	6105                	addi	sp,sp,32
2040237e:	8082                	ret

20402380 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
20402380:	7139                	addi	sp,sp,-64
20402382:	de06                	sw	ra,60(sp)
20402384:	dc22                	sw	s0,56(sp)
20402386:	0080                	addi	s0,sp,64
20402388:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
2040238c:	fcc42503          	lw	a0,-52(s0)
20402390:	3bdd                	jal	20402186 <__metal_driver_sifive_clint0_num_interrupts>
20402392:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
20402396:	fcc42783          	lw	a5,-52(s0)
2040239a:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
2040239e:	fe442783          	lw	a5,-28(s0)
204023a2:	43dc                	lw	a5,4(a5)
204023a4:	efa9                	bnez	a5,204023fe <__metal_driver_riscv_clint0_init+0x7e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
204023a6:	fe042623          	sw	zero,-20(s0)
204023aa:	a081                	j	204023ea <__metal_driver_riscv_clint0_init+0x6a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204023ac:	fec42583          	lw	a1,-20(s0)
204023b0:	fcc42503          	lw	a0,-52(s0)
204023b4:	3bed                	jal	204021ae <__metal_driver_sifive_clint0_interrupt_parents>
204023b6:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204023ba:	fec42583          	lw	a1,-20(s0)
204023be:	fcc42503          	lw	a0,-52(s0)
204023c2:	3525                	jal	204021ea <__metal_driver_sifive_clint0_interrupt_lines>
204023c4:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
204023c8:	fe042783          	lw	a5,-32(s0)
204023cc:	439c                	lw	a5,0(a5)
204023ce:	4fdc                	lw	a5,28(a5)
204023d0:	fcc42683          	lw	a3,-52(s0)
204023d4:	4601                	li	a2,0
204023d6:	fdc42583          	lw	a1,-36(s0)
204023da:	fe042503          	lw	a0,-32(s0)
204023de:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
204023e0:	fec42783          	lw	a5,-20(s0)
204023e4:	0785                	addi	a5,a5,1
204023e6:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
204023ea:	fec42703          	lw	a4,-20(s0)
204023ee:	fe842783          	lw	a5,-24(s0)
204023f2:	faf74de3          	blt	a4,a5,204023ac <__metal_driver_riscv_clint0_init+0x2c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
204023f6:	fe442783          	lw	a5,-28(s0)
204023fa:	4705                	li	a4,1
204023fc:	c3d8                	sw	a4,4(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
204023fe:	0001                	nop
20402400:	50f2                	lw	ra,60(sp)
20402402:	5462                	lw	s0,56(sp)
20402404:	6121                	addi	sp,sp,64
20402406:	8082                	ret

20402408 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
20402408:	7139                	addi	sp,sp,-64
2040240a:	de06                	sw	ra,60(sp)
2040240c:	dc22                	sw	s0,56(sp)
2040240e:	0080                	addi	s0,sp,64
20402410:	fca42623          	sw	a0,-52(s0)
20402414:	fcb42423          	sw	a1,-56(s0)
20402418:	fcc42223          	sw	a2,-60(s0)
2040241c:	fcd42023          	sw	a3,-64(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
20402420:	57fd                	li	a5,-1
20402422:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20402426:	432010ef          	jal	ra,20403858 <__metal_controller_interrupt_vector_mode>
2040242a:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
2040242e:	fe042423          	sw	zero,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20402432:	3f21                	jal	2040234a <_get_cpu_intc>
20402434:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20402438:	fcc42503          	lw	a0,-52(s0)
2040243c:	33a9                	jal	20402186 <__metal_driver_sifive_clint0_num_interrupts>
2040243e:	fca42c23          	sw	a0,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
20402442:	fe042703          	lw	a4,-32(s0)
20402446:	4785                	li	a5,1
20402448:	00f70863          	beq	a4,a5,20402458 <__metal_driver_riscv_clint0_register+0x50>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
2040244c:	fe042783          	lw	a5,-32(s0)
20402450:	c781                	beqz	a5,20402458 <__metal_driver_riscv_clint0_register+0x50>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
20402452:	fec42783          	lw	a5,-20(s0)
20402456:	a049                	j	204024d8 <__metal_driver_riscv_clint0_register+0xd0>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
20402458:	fe042223          	sw	zero,-28(s0)
2040245c:	a091                	j	204024a0 <__metal_driver_riscv_clint0_register+0x98>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2040245e:	fe442583          	lw	a1,-28(s0)
20402462:	fcc42503          	lw	a0,-52(s0)
20402466:	3351                	jal	204021ea <__metal_driver_sifive_clint0_interrupt_lines>
20402468:	fca42a23          	sw	a0,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2040246c:	fe442583          	lw	a1,-28(s0)
20402470:	fcc42503          	lw	a0,-52(s0)
20402474:	3b2d                	jal	204021ae <__metal_driver_sifive_clint0_interrupt_parents>
20402476:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
2040247a:	fdc42703          	lw	a4,-36(s0)
2040247e:	fe842783          	lw	a5,-24(s0)
20402482:	00f71863          	bne	a4,a5,20402492 <__metal_driver_riscv_clint0_register+0x8a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
20402486:	fc842703          	lw	a4,-56(s0)
2040248a:	fd442783          	lw	a5,-44(s0)
2040248e:	02f70063          	beq	a4,a5,204024ae <__metal_driver_riscv_clint0_register+0xa6>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
20402492:	fe042423          	sw	zero,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
20402496:	fe442783          	lw	a5,-28(s0)
2040249a:	0785                	addi	a5,a5,1
2040249c:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
204024a0:	fe442703          	lw	a4,-28(s0)
204024a4:	fd842783          	lw	a5,-40(s0)
204024a8:	faf74be3          	blt	a4,a5,2040245e <__metal_driver_riscv_clint0_register+0x56>
204024ac:	a011                	j	204024b0 <__metal_driver_riscv_clint0_register+0xa8>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
204024ae:	0001                	nop
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
204024b0:	fe842783          	lw	a5,-24(s0)
204024b4:	c385                	beqz	a5,204024d4 <__metal_driver_riscv_clint0_register+0xcc>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
204024b6:	fe842783          	lw	a5,-24(s0)
204024ba:	439c                	lw	a5,0(a5)
204024bc:	4fdc                	lw	a5,28(a5)
204024be:	fc042683          	lw	a3,-64(s0)
204024c2:	fc442603          	lw	a2,-60(s0)
204024c6:	fc842583          	lw	a1,-56(s0)
204024ca:	fe842503          	lw	a0,-24(s0)
204024ce:	9782                	jalr	a5
204024d0:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
204024d4:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:115
}
204024d8:	853e                	mv	a0,a5
204024da:	50f2                	lw	ra,60(sp)
204024dc:	5462                	lw	s0,56(sp)
204024de:	6121                	addi	sp,sp,64
204024e0:	8082                	ret

204024e2 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
204024e2:	7179                	addi	sp,sp,-48
204024e4:	d622                	sw	s0,44(sp)
204024e6:	1800                	addi	s0,sp,48
204024e8:	fca42e23          	sw	a0,-36(s0)
204024ec:	fcb42c23          	sw	a1,-40(s0)
204024f0:	fcc42a23          	sw	a2,-44(s0)
204024f4:	fcd42823          	sw	a3,-48(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
204024f8:	57fd                	li	a5,-1
204024fa:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
204024fe:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:123
}
20402502:	853e                	mv	a0,a5
20402504:	5432                	lw	s0,44(sp)
20402506:	6145                	addi	sp,sp,48
20402508:	8082                	ret

2040250a <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
2040250a:	1101                	addi	sp,sp,-32
2040250c:	ce06                	sw	ra,28(sp)
2040250e:	cc22                	sw	s0,24(sp)
20402510:	1000                	addi	s0,sp,32
20402512:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
20402516:	342010ef          	jal	ra,20403858 <__metal_controller_interrupt_vector_mode>
2040251a:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:128
}
2040251c:	853e                	mv	a0,a5
2040251e:	40f2                	lw	ra,28(sp)
20402520:	4462                	lw	s0,24(sp)
20402522:	6105                	addi	sp,sp,32
20402524:	8082                	ret

20402526 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20402526:	7179                	addi	sp,sp,-48
20402528:	d606                	sw	ra,44(sp)
2040252a:	d422                	sw	s0,40(sp)
2040252c:	1800                	addi	s0,sp,48
2040252e:	fca42e23          	sw	a0,-36(s0)
20402532:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
20402536:	57fd                	li	a5,-1
20402538:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
2040253c:	3539                	jal	2040234a <_get_cpu_intc>
2040253e:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20402542:	fe842783          	lw	a5,-24(s0)
20402546:	c395                	beqz	a5,2040256a <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
20402548:	fd842703          	lw	a4,-40(s0)
2040254c:	4785                	li	a5,1
2040254e:	02e7e063          	bltu	a5,a4,2040256e <__metal_driver_riscv_clint0_set_vector_mode+0x48>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20402552:	fe842783          	lw	a5,-24(s0)
20402556:	439c                	lw	a5,0(a5)
20402558:	43dc                	lw	a5,4(a5)
2040255a:	fd842583          	lw	a1,-40(s0)
2040255e:	fe842503          	lw	a0,-24(s0)
20402562:	9782                	jalr	a5
20402564:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
20402568:	a021                	j	20402570 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
2040256a:	0001                	nop
2040256c:	a011                	j	20402570 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
2040256e:	0001                	nop
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20402570:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:148
}
20402574:	853e                	mv	a0,a5
20402576:	50b2                	lw	ra,44(sp)
20402578:	5422                	lw	s0,40(sp)
2040257a:	6145                	addi	sp,sp,48
2040257c:	8082                	ret

2040257e <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
2040257e:	7139                	addi	sp,sp,-64
20402580:	de06                	sw	ra,60(sp)
20402582:	dc22                	sw	s0,56(sp)
20402584:	0080                	addi	s0,sp,64
20402586:	fca42623          	sw	a0,-52(s0)
2040258a:	fcb42423          	sw	a1,-56(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
2040258e:	57fd                	li	a5,-1
20402590:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20402594:	fc842783          	lw	a5,-56(s0)
20402598:	c7c9                	beqz	a5,20402622 <__metal_driver_riscv_clint0_enable+0xa4>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
2040259a:	fe042423          	sw	zero,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
2040259e:	3375                	jal	2040234a <_get_cpu_intc>
204025a0:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
204025a4:	fcc42503          	lw	a0,-52(s0)
204025a8:	3ef9                	jal	20402186 <__metal_driver_sifive_clint0_num_interrupts>
204025aa:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
204025ae:	fe042223          	sw	zero,-28(s0)
204025b2:	a091                	j	204025f6 <__metal_driver_riscv_clint0_enable+0x78>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204025b4:	fe442583          	lw	a1,-28(s0)
204025b8:	fcc42503          	lw	a0,-52(s0)
204025bc:	313d                	jal	204021ea <__metal_driver_sifive_clint0_interrupt_lines>
204025be:	fca42c23          	sw	a0,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204025c2:	fe442583          	lw	a1,-28(s0)
204025c6:	fcc42503          	lw	a0,-52(s0)
204025ca:	36d5                	jal	204021ae <__metal_driver_sifive_clint0_interrupt_parents>
204025cc:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
204025d0:	fe042703          	lw	a4,-32(s0)
204025d4:	fe842783          	lw	a5,-24(s0)
204025d8:	00f71863          	bne	a4,a5,204025e8 <__metal_driver_riscv_clint0_enable+0x6a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
204025dc:	fc842703          	lw	a4,-56(s0)
204025e0:	fd842783          	lw	a5,-40(s0)
204025e4:	02f70063          	beq	a4,a5,20402604 <__metal_driver_riscv_clint0_enable+0x86>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
204025e8:	fe042423          	sw	zero,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
204025ec:	fe442783          	lw	a5,-28(s0)
204025f0:	0785                	addi	a5,a5,1
204025f2:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
204025f6:	fe442703          	lw	a4,-28(s0)
204025fa:	fdc42783          	lw	a5,-36(s0)
204025fe:	faf74be3          	blt	a4,a5,204025b4 <__metal_driver_riscv_clint0_enable+0x36>
20402602:	a011                	j	20402606 <__metal_driver_riscv_clint0_enable+0x88>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
20402604:	0001                	nop
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20402606:	fe842783          	lw	a5,-24(s0)
2040260a:	cf81                	beqz	a5,20402622 <__metal_driver_riscv_clint0_enable+0xa4>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
2040260c:	fe842783          	lw	a5,-24(s0)
20402610:	439c                	lw	a5,0(a5)
20402612:	53dc                	lw	a5,36(a5)
20402614:	fc842583          	lw	a1,-56(s0)
20402618:	fe842503          	lw	a0,-24(s0)
2040261c:	9782                	jalr	a5
2040261e:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20402622:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:178
}
20402626:	853e                	mv	a0,a5
20402628:	50f2                	lw	ra,60(sp)
2040262a:	5462                	lw	s0,56(sp)
2040262c:	6121                	addi	sp,sp,64
2040262e:	8082                	ret

20402630 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20402630:	7139                	addi	sp,sp,-64
20402632:	de06                	sw	ra,60(sp)
20402634:	dc22                	sw	s0,56(sp)
20402636:	0080                	addi	s0,sp,64
20402638:	fca42623          	sw	a0,-52(s0)
2040263c:	fcb42423          	sw	a1,-56(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20402640:	57fd                	li	a5,-1
20402642:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20402646:	fc842783          	lw	a5,-56(s0)
2040264a:	c7c9                	beqz	a5,204026d4 <__metal_driver_riscv_clint0_disable+0xa4>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
2040264c:	fe042423          	sw	zero,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20402650:	39ed                	jal	2040234a <_get_cpu_intc>
20402652:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20402656:	fcc42503          	lw	a0,-52(s0)
2040265a:	3635                	jal	20402186 <__metal_driver_sifive_clint0_num_interrupts>
2040265c:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20402660:	fe042223          	sw	zero,-28(s0)
20402664:	a091                	j	204026a8 <__metal_driver_riscv_clint0_disable+0x78>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20402666:	fe442583          	lw	a1,-28(s0)
2040266a:	fcc42503          	lw	a0,-52(s0)
2040266e:	3eb5                	jal	204021ea <__metal_driver_sifive_clint0_interrupt_lines>
20402670:	fca42c23          	sw	a0,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20402674:	fe442583          	lw	a1,-28(s0)
20402678:	fcc42503          	lw	a0,-52(s0)
2040267c:	3e0d                	jal	204021ae <__metal_driver_sifive_clint0_interrupt_parents>
2040267e:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20402682:	fe042703          	lw	a4,-32(s0)
20402686:	fe842783          	lw	a5,-24(s0)
2040268a:	00f71863          	bne	a4,a5,2040269a <__metal_driver_riscv_clint0_disable+0x6a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
2040268e:	fc842703          	lw	a4,-56(s0)
20402692:	fd842783          	lw	a5,-40(s0)
20402696:	02f70063          	beq	a4,a5,204026b6 <__metal_driver_riscv_clint0_disable+0x86>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
2040269a:	fe042423          	sw	zero,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
2040269e:	fe442783          	lw	a5,-28(s0)
204026a2:	0785                	addi	a5,a5,1
204026a4:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
204026a8:	fe442703          	lw	a4,-28(s0)
204026ac:	fdc42783          	lw	a5,-36(s0)
204026b0:	faf74be3          	blt	a4,a5,20402666 <__metal_driver_riscv_clint0_disable+0x36>
204026b4:	a011                	j	204026b8 <__metal_driver_riscv_clint0_disable+0x88>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
204026b6:	0001                	nop
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
204026b8:	fe842783          	lw	a5,-24(s0)
204026bc:	cf81                	beqz	a5,204026d4 <__metal_driver_riscv_clint0_disable+0xa4>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
204026be:	fe842783          	lw	a5,-24(s0)
204026c2:	439c                	lw	a5,0(a5)
204026c4:	579c                	lw	a5,40(a5)
204026c6:	fc842583          	lw	a1,-56(s0)
204026ca:	fe842503          	lw	a0,-24(s0)
204026ce:	9782                	jalr	a5
204026d0:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
204026d4:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:208
}
204026d8:	853e                	mv	a0,a5
204026da:	50f2                	lw	ra,60(sp)
204026dc:	5462                	lw	s0,56(sp)
204026de:	6121                	addi	sp,sp,64
204026e0:	8082                	ret

204026e2 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
204026e2:	7179                	addi	sp,sp,-48
204026e4:	d606                	sw	ra,44(sp)
204026e6:	d422                	sw	s0,40(sp)
204026e8:	1800                	addi	s0,sp,48
204026ea:	fca42e23          	sw	a0,-36(s0)
204026ee:	fcb42c23          	sw	a1,-40(s0)
204026f2:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
204026f6:	57fd                	li	a5,-1
204026f8:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
204026fc:	fdc42783          	lw	a5,-36(s0)
20402700:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20402704:	fdc42503          	lw	a0,-36(s0)
20402708:	a55ff0ef          	jal	ra,2040215c <__metal_driver_sifive_clint0_control_base>
2040270c:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20402710:	fd842703          	lw	a4,-40(s0)
20402714:	4791                	li	a5,4
20402716:	0cf70063          	beq	a4,a5,204027d6 <__metal_driver_riscv_clint0_command_request+0xf4>
2040271a:	fd842703          	lw	a4,-40(s0)
2040271e:	4791                	li	a5,4
20402720:	0ee7c063          	blt	a5,a4,20402800 <__metal_driver_riscv_clint0_command_request+0x11e>
20402724:	fd842703          	lw	a4,-40(s0)
20402728:	478d                	li	a5,3
2040272a:	06f70563          	beq	a4,a5,20402794 <__metal_driver_riscv_clint0_command_request+0xb2>
2040272e:	fd842703          	lw	a4,-40(s0)
20402732:	478d                	li	a5,3
20402734:	0ce7c663          	blt	a5,a4,20402800 <__metal_driver_riscv_clint0_command_request+0x11e>
20402738:	fd842703          	lw	a4,-40(s0)
2040273c:	4785                	li	a5,1
2040273e:	00f70863          	beq	a4,a5,2040274e <__metal_driver_riscv_clint0_command_request+0x6c>
20402742:	fd842703          	lw	a4,-40(s0)
20402746:	4789                	li	a5,2
20402748:	02f70263          	beq	a4,a5,2040276c <__metal_driver_riscv_clint0_command_request+0x8a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
2040274c:	a855                	j	20402800 <__metal_driver_riscv_clint0_command_request+0x11e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
2040274e:	fd442783          	lw	a5,-44(s0)
20402752:	cbcd                	beqz	a5,20402804 <__metal_driver_riscv_clint0_command_request+0x122>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20402754:	fe842503          	lw	a0,-24(s0)
20402758:	34c9                	jal	2040221a <__metal_clint0_mtime_get>
2040275a:	872a                	mv	a4,a0
2040275c:	87ae                	mv	a5,a1
2040275e:	fd442683          	lw	a3,-44(s0)
20402762:	c298                	sw	a4,0(a3)
20402764:	c2dc                	sw	a5,4(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20402766:	fe042623          	sw	zero,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
2040276a:	a869                	j	20402804 <__metal_driver_riscv_clint0_command_request+0x122>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
2040276c:	fd442783          	lw	a5,-44(s0)
20402770:	cfc1                	beqz	a5,20402808 <__metal_driver_riscv_clint0_command_request+0x126>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20402772:	fd442783          	lw	a5,-44(s0)
20402776:	439c                	lw	a5,0(a5)
20402778:	fef42023          	sw	a5,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
2040277c:	fe042783          	lw	a5,-32(s0)
20402780:	078a                	slli	a5,a5,0x2
20402782:	873e                	mv	a4,a5
20402784:	fe442783          	lw	a5,-28(s0)
20402788:	97ba                	add	a5,a5,a4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
2040278a:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
2040278e:	fe042623          	sw	zero,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20402792:	a89d                	j	20402808 <__metal_driver_riscv_clint0_command_request+0x126>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20402794:	fd442783          	lw	a5,-44(s0)
20402798:	cbb5                	beqz	a5,2040280c <__metal_driver_riscv_clint0_command_request+0x12a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
2040279a:	fd442783          	lw	a5,-44(s0)
2040279e:	439c                	lw	a5,0(a5)
204027a0:	fef42023          	sw	a5,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
204027a4:	fe042783          	lw	a5,-32(s0)
204027a8:	078a                	slli	a5,a5,0x2
204027aa:	873e                	mv	a4,a5
204027ac:	fe442783          	lw	a5,-28(s0)
204027b0:	97ba                	add	a5,a5,a4
204027b2:	873e                	mv	a4,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
204027b4:	4785                	li	a5,1
204027b6:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
204027b8:	0480000f          	fence	o,i
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
204027bc:	fe042783          	lw	a5,-32(s0)
204027c0:	078a                	slli	a5,a5,0x2
204027c2:	873e                	mv	a4,a5
204027c4:	fe442783          	lw	a5,-28(s0)
204027c8:	97ba                	add	a5,a5,a4
204027ca:	439c                	lw	a5,0(a5)
204027cc:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
204027d0:	fe042623          	sw	zero,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
204027d4:	a825                	j	2040280c <__metal_driver_riscv_clint0_command_request+0x12a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
204027d6:	fe042623          	sw	zero,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
204027da:	fd442783          	lw	a5,-44(s0)
204027de:	cb8d                	beqz	a5,20402810 <__metal_driver_riscv_clint0_command_request+0x12e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
204027e0:	fd442783          	lw	a5,-44(s0)
204027e4:	439c                	lw	a5,0(a5)
204027e6:	fef42023          	sw	a5,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
204027ea:	fe042783          	lw	a5,-32(s0)
204027ee:	078a                	slli	a5,a5,0x2
204027f0:	873e                	mv	a4,a5
204027f2:	fe442783          	lw	a5,-28(s0)
204027f6:	97ba                	add	a5,a5,a4
204027f8:	439c                	lw	a5,0(a5)
204027fa:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
204027fe:	a809                	j	20402810 <__metal_driver_riscv_clint0_command_request+0x12e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20402800:	0001                	nop
20402802:	a801                	j	20402812 <__metal_driver_riscv_clint0_command_request+0x130>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20402804:	0001                	nop
20402806:	a031                	j	20402812 <__metal_driver_riscv_clint0_command_request+0x130>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20402808:	0001                	nop
2040280a:	a021                	j	20402812 <__metal_driver_riscv_clint0_command_request+0x130>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
2040280c:	0001                	nop
2040280e:	a011                	j	20402812 <__metal_driver_riscv_clint0_command_request+0x130>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20402810:	0001                	nop
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20402812:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:267
}
20402816:	853e                	mv	a0,a5
20402818:	50b2                	lw	ra,44(sp)
2040281a:	5422                	lw	s0,40(sp)
2040281c:	6145                	addi	sp,sp,48
2040281e:	8082                	ret

20402820 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20402820:	7179                	addi	sp,sp,-48
20402822:	d606                	sw	ra,44(sp)
20402824:	d422                	sw	s0,40(sp)
20402826:	1800                	addi	s0,sp,48
20402828:	fca42e23          	sw	a0,-36(s0)
2040282c:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20402830:	5cb030ef          	jal	ra,204065fa <metal_cpu_get_current_hartid>
20402834:	87aa                	mv	a5,a0
20402836:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
2040283a:	fec40793          	addi	a5,s0,-20
2040283e:	863e                	mv	a2,a5
20402840:	4589                	li	a1,2
20402842:	fdc42503          	lw	a0,-36(s0)
20402846:	3d71                	jal	204026e2 <__metal_driver_riscv_clint0_command_request>
20402848:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
2040284a:	853e                	mv	a0,a5
2040284c:	50b2                	lw	ra,44(sp)
2040284e:	5422                	lw	s0,40(sp)
20402850:	6145                	addi	sp,sp,48
20402852:	8082                	ret

20402854 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20402854:	7179                	addi	sp,sp,-48
20402856:	d606                	sw	ra,44(sp)
20402858:	d422                	sw	s0,40(sp)
2040285a:	1800                	addi	s0,sp,48
2040285c:	fca42e23          	sw	a0,-36(s0)
20402860:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20402864:	597030ef          	jal	ra,204065fa <metal_cpu_get_current_hartid>
20402868:	87aa                	mv	a5,a0
2040286a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
2040286e:	fec40793          	addi	a5,s0,-20
20402872:	863e                	mv	a2,a5
20402874:	458d                	li	a1,3
20402876:	fdc42503          	lw	a0,-36(s0)
2040287a:	35a5                	jal	204026e2 <__metal_driver_riscv_clint0_command_request>
2040287c:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
2040287e:	853e                	mv	a0,a5
20402880:	50b2                	lw	ra,44(sp)
20402882:	5422                	lw	s0,40(sp)
20402884:	6145                	addi	sp,sp,48
20402886:	8082                	ret

20402888 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:261



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20402888:	1101                	addi	sp,sp,-32
2040288a:	ce22                	sw	s0,28(sp)
2040288c:	1000                	addi	s0,sp,32
2040288e:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:262
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20402892:	fec42703          	lw	a4,-20(s0)
20402896:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
2040289a:	00f71463          	bne	a4,a5,204028a2 <__metal_driver_cpu_hartid+0x1a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:263
		return 0;
2040289e:	4781                	li	a5,0
204028a0:	a011                	j	204028a4 <__metal_driver_cpu_hartid+0x1c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:266
	}
	else {
		return -1;
204028a2:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:268
	}
}
204028a4:	853e                	mv	a0,a5
204028a6:	4472                	lw	s0,28(sp)
204028a8:	6105                	addi	sp,sp,32
204028aa:	8082                	ret

204028ac <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:271

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
204028ac:	1101                	addi	sp,sp,-32
204028ae:	ce22                	sw	s0,28(sp)
204028b0:	1000                	addi	s0,sp,32
204028b2:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:272
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204028b6:	fec42703          	lw	a4,-20(s0)
204028ba:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
204028be:	00f71763          	bne	a4,a5,204028cc <__metal_driver_cpu_timebase+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:273
		return 1000000;
204028c2:	000f47b7          	lui	a5,0xf4
204028c6:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
204028ca:	a011                	j	204028ce <__metal_driver_cpu_timebase+0x22>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:276
	}
	else {
		return 0;
204028cc:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:278
	}
}
204028ce:	853e                	mv	a0,a5
204028d0:	4472                	lw	s0,28(sp)
204028d2:	6105                	addi	sp,sp,32
204028d4:	8082                	ret

204028d6 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:281

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
204028d6:	1101                	addi	sp,sp,-32
204028d8:	ce22                	sw	s0,28(sp)
204028da:	1000                	addi	s0,sp,32
204028dc:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:282
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204028e0:	fec42703          	lw	a4,-20(s0)
204028e4:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
204028e8:	00f71763          	bne	a4,a5,204028f6 <__metal_driver_cpu_interrupt_controller+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:283
		return &__metal_dt_cpu_0_interrupt_controller.controller;
204028ec:	800007b7          	lui	a5,0x80000
204028f0:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffec18>
204028f4:	a011                	j	204028f8 <__metal_driver_cpu_interrupt_controller+0x22>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:286
	}
	else {
		return NULL;
204028f6:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:288
	}
}
204028f8:	853e                	mv	a0,a5
204028fa:	4472                	lw	s0,28(sp)
204028fc:	6105                	addi	sp,sp,32
204028fe:	8082                	ret

20402900 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:301
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20402900:	1101                	addi	sp,sp,-32
20402902:	ce22                	sw	s0,28(sp)
20402904:	1000                	addi	s0,sp,32
20402906:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:302
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
2040290a:	fec42703          	lw	a4,-20(s0)
2040290e:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20402912:	00f71463          	bne	a4,a5,2040291a <__metal_driver_cpu_buserror+0x1a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:303
		return NULL;
20402916:	4781                	li	a5,0
20402918:	a011                	j	2040291c <__metal_driver_cpu_buserror+0x1c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:306
	}
	else {
		return NULL;
2040291a:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:308
	}
}
2040291c:	853e                	mv	a0,a5
2040291e:	4472                	lw	s0,28(sp)
20402920:	6105                	addi	sp,sp,32
20402922:	8082                	ret

20402924 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
20402924:	1101                	addi	sp,sp,-32
20402926:	ce22                	sw	s0,28(sp)
20402928:	1000                	addi	s0,sp,32
2040292a:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
2040292e:	fec42783          	lw	a5,-20(s0)
20402932:	00f04c63          	bgtz	a5,2040294a <__metal_driver_cpu_get+0x26>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20402936:	800007b7          	lui	a5,0x80000
2040293a:	fec42703          	lw	a4,-20(s0)
2040293e:	070a                	slli	a4,a4,0x2
20402940:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20402944:	97ba                	add	a5,a5,a4
20402946:	439c                	lw	a5,0(a5)
20402948:	a011                	j	2040294c <__metal_driver_cpu_get+0x28>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
2040294a:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:30
}
2040294c:	853e                	mv	a0,a5
2040294e:	4472                	lw	s0,28(sp)
20402950:	6105                	addi	sp,sp,32
20402952:	8082                	ret

20402954 <__metal_myhart_id>:
__metal_myhart_id():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20402954:	1101                	addi	sp,sp,-32
20402956:	ce22                	sw	s0,28(sp)
20402958:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
2040295a:	f14027f3          	csrr	a5,mhartid
2040295e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20402962:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:36
}
20402966:	853e                	mv	a0,a5
20402968:	4472                	lw	s0,28(sp)
2040296a:	6105                	addi	sp,sp,32
2040296c:	8082                	ret

2040296e <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
2040296e:	1101                	addi	sp,sp,-32
20402970:	ce22                	sw	s0,28(sp)
20402972:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20402974:	47a1                	li	a5,8
20402976:	3007a7f3          	csrrs	a5,mstatus,a5
2040297a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
2040297e:	0001                	nop
20402980:	4472                	lw	s0,28(sp)
20402982:	6105                	addi	sp,sp,32
20402984:	8082                	ret

20402986 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20402986:	1101                	addi	sp,sp,-32
20402988:	ce22                	sw	s0,28(sp)
2040298a:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
2040298c:	47a1                	li	a5,8
2040298e:	3007b7f3          	csrrc	a5,mstatus,a5
20402992:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20402996:	0001                	nop
20402998:	4472                	lw	s0,28(sp)
2040299a:	6105                	addi	sp,sp,32
2040299c:	8082                	ret

2040299e <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
2040299e:	1101                	addi	sp,sp,-32
204029a0:	ce22                	sw	s0,28(sp)
204029a2:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
204029a4:	47a1                	li	a5,8
204029a6:	3047a7f3          	csrrs	a5,mie,a5
204029aa:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
204029ae:	0001                	nop
204029b0:	4472                	lw	s0,28(sp)
204029b2:	6105                	addi	sp,sp,32
204029b4:	8082                	ret

204029b6 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
204029b6:	1101                	addi	sp,sp,-32
204029b8:	ce22                	sw	s0,28(sp)
204029ba:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
204029bc:	47a1                	li	a5,8
204029be:	3047b7f3          	csrrc	a5,mie,a5
204029c2:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
204029c6:	0001                	nop
204029c8:	4472                	lw	s0,28(sp)
204029ca:	6105                	addi	sp,sp,32
204029cc:	8082                	ret

204029ce <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
204029ce:	1101                	addi	sp,sp,-32
204029d0:	ce22                	sw	s0,28(sp)
204029d2:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
204029d4:	08000793          	li	a5,128
204029d8:	3047a7f3          	csrrs	a5,mie,a5
204029dc:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
204029e0:	0001                	nop
204029e2:	4472                	lw	s0,28(sp)
204029e4:	6105                	addi	sp,sp,32
204029e6:	8082                	ret

204029e8 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
204029e8:	1101                	addi	sp,sp,-32
204029ea:	ce22                	sw	s0,28(sp)
204029ec:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
204029ee:	08000793          	li	a5,128
204029f2:	3047b7f3          	csrrc	a5,mie,a5
204029f6:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
204029fa:	0001                	nop
204029fc:	4472                	lw	s0,28(sp)
204029fe:	6105                	addi	sp,sp,32
20402a00:	8082                	ret

20402a02 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20402a02:	1101                	addi	sp,sp,-32
20402a04:	ce22                	sw	s0,28(sp)
20402a06:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20402a08:	6785                	lui	a5,0x1
20402a0a:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20402a0e:	3047a7f3          	csrrs	a5,mie,a5
20402a12:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20402a16:	0001                	nop
20402a18:	4472                	lw	s0,28(sp)
20402a1a:	6105                	addi	sp,sp,32
20402a1c:	8082                	ret

20402a1e <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20402a1e:	1101                	addi	sp,sp,-32
20402a20:	ce22                	sw	s0,28(sp)
20402a22:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
20402a24:	6785                	lui	a5,0x1
20402a26:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20402a2a:	3047b7f3          	csrrc	a5,mie,a5
20402a2e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20402a32:	0001                	nop
20402a34:	4472                	lw	s0,28(sp)
20402a36:	6105                	addi	sp,sp,32
20402a38:	8082                	ret

20402a3a <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20402a3a:	7179                	addi	sp,sp,-48
20402a3c:	d622                	sw	s0,44(sp)
20402a3e:	1800                	addi	s0,sp,48
20402a40:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20402a44:	fdc42783          	lw	a5,-36(s0)
20402a48:	4705                	li	a4,1
20402a4a:	00f717b3          	sll	a5,a4,a5
20402a4e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20402a52:	fec42783          	lw	a5,-20(s0)
20402a56:	3047a7f3          	csrrs	a5,mie,a5
20402a5a:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:105
}
20402a5e:	0001                	nop
20402a60:	5432                	lw	s0,44(sp)
20402a62:	6145                	addi	sp,sp,48
20402a64:	8082                	ret

20402a66 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20402a66:	7179                	addi	sp,sp,-48
20402a68:	d622                	sw	s0,44(sp)
20402a6a:	1800                	addi	s0,sp,48
20402a6c:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20402a70:	fdc42783          	lw	a5,-36(s0)
20402a74:	4705                	li	a4,1
20402a76:	00f717b3          	sll	a5,a4,a5
20402a7a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20402a7e:	fec42783          	lw	a5,-20(s0)
20402a82:	3047b7f3          	csrrc	a5,mie,a5
20402a86:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:111
}
20402a8a:	0001                	nop
20402a8c:	5432                	lw	s0,44(sp)
20402a8e:	6145                	addi	sp,sp,48
20402a90:	8082                	ret

20402a92 <__metal_default_exception_handler>:
__metal_default_exception_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20402a92:	1101                	addi	sp,sp,-32
20402a94:	ce06                	sw	ra,28(sp)
20402a96:	cc22                	sw	s0,24(sp)
20402a98:	1000                	addi	s0,sp,32
20402a9a:	fea42623          	sw	a0,-20(s0)
20402a9e:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20402aa2:	06400513          	li	a0,100
20402aa6:	391030ef          	jal	ra,20406636 <metal_shutdown>

20402aaa <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20402aaa:	1101                	addi	sp,sp,-32
20402aac:	ce06                	sw	ra,28(sp)
20402aae:	cc22                	sw	s0,24(sp)
20402ab0:	1000                	addi	s0,sp,32
20402ab2:	fea42623          	sw	a0,-20(s0)
20402ab6:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20402aba:	0c800513          	li	a0,200
20402abe:	379030ef          	jal	ra,20406636 <metal_shutdown>

20402ac2 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20402ac2:	715d                	addi	sp,sp,-80
20402ac4:	c686                	sw	ra,76(sp)
20402ac6:	c496                	sw	t0,72(sp)
20402ac8:	c29a                	sw	t1,68(sp)
20402aca:	c09e                	sw	t2,64(sp)
20402acc:	de22                	sw	s0,60(sp)
20402ace:	dc2a                	sw	a0,56(sp)
20402ad0:	da2e                	sw	a1,52(sp)
20402ad2:	d832                	sw	a2,48(sp)
20402ad4:	d636                	sw	a3,44(sp)
20402ad6:	d43a                	sw	a4,40(sp)
20402ad8:	d23e                	sw	a5,36(sp)
20402ada:	d042                	sw	a6,32(sp)
20402adc:	ce46                	sw	a7,28(sp)
20402ade:	cc72                	sw	t3,24(sp)
20402ae0:	ca76                	sw	t4,20(sp)
20402ae2:	c87a                	sw	t5,16(sp)
20402ae4:	c67e                	sw	t6,12(sp)
20402ae6:	0880                	addi	s0,sp,80
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20402ae8:	12c00513          	li	a0,300
20402aec:	34b030ef          	jal	ra,20406636 <metal_shutdown>

20402af0 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20402af0:	711d                	addi	sp,sp,-96
20402af2:	ce86                	sw	ra,92(sp)
20402af4:	cc96                	sw	t0,88(sp)
20402af6:	ca9a                	sw	t1,84(sp)
20402af8:	c89e                	sw	t2,80(sp)
20402afa:	c6a2                	sw	s0,76(sp)
20402afc:	c4aa                	sw	a0,72(sp)
20402afe:	c2ae                	sw	a1,68(sp)
20402b00:	c0b2                	sw	a2,64(sp)
20402b02:	de36                	sw	a3,60(sp)
20402b04:	dc3a                	sw	a4,56(sp)
20402b06:	da3e                	sw	a5,52(sp)
20402b08:	d842                	sw	a6,48(sp)
20402b0a:	d646                	sw	a7,44(sp)
20402b0c:	d472                	sw	t3,40(sp)
20402b0e:	d276                	sw	t4,36(sp)
20402b10:	d07a                	sw	t5,32(sp)
20402b12:	ce7e                	sw	t6,28(sp)
20402b14:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20402b16:	3d3d                	jal	20402954 <__metal_myhart_id>
20402b18:	872a                	mv	a4,a0
20402b1a:	800007b7          	lui	a5,0x80000
20402b1e:	070a                	slli	a4,a4,0x2
20402b20:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20402b24:	97ba                	add	a5,a5,a4
20402b26:	439c                	lw	a5,0(a5)
20402b28:	faf42623          	sw	a5,-84(s0)
20402b2c:	fac42783          	lw	a5,-84(s0)
20402b30:	c785                	beqz	a5,20402b58 <metal_software_interrupt_vector_handler+0x68>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20402b32:	fac42503          	lw	a0,-84(s0)
20402b36:	3345                	jal	204028d6 <__metal_driver_cpu_interrupt_controller>
20402b38:	faa42423          	sw	a0,-88(s0)
20402b3c:	fa842783          	lw	a5,-88(s0)
20402b40:	0e07a783          	lw	a5,224(a5)
20402b44:	faf42223          	sw	a5,-92(s0)
20402b48:	fa842783          	lw	a5,-88(s0)
20402b4c:	0d87a783          	lw	a5,216(a5)
20402b50:	fa442583          	lw	a1,-92(s0)
20402b54:	450d                	li	a0,3
20402b56:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:130
}
20402b58:	0001                	nop
20402b5a:	40f6                	lw	ra,92(sp)
20402b5c:	42e6                	lw	t0,88(sp)
20402b5e:	4356                	lw	t1,84(sp)
20402b60:	43c6                	lw	t2,80(sp)
20402b62:	4436                	lw	s0,76(sp)
20402b64:	4526                	lw	a0,72(sp)
20402b66:	4596                	lw	a1,68(sp)
20402b68:	4606                	lw	a2,64(sp)
20402b6a:	56f2                	lw	a3,60(sp)
20402b6c:	5762                	lw	a4,56(sp)
20402b6e:	57d2                	lw	a5,52(sp)
20402b70:	5842                	lw	a6,48(sp)
20402b72:	58b2                	lw	a7,44(sp)
20402b74:	5e22                	lw	t3,40(sp)
20402b76:	5e92                	lw	t4,36(sp)
20402b78:	5f02                	lw	t5,32(sp)
20402b7a:	4ff2                	lw	t6,28(sp)
20402b7c:	6125                	addi	sp,sp,96
20402b7e:	30200073          	mret

20402b82 <__metal_default_sw_handler>:
__metal_default_sw_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20402b82:	7179                	addi	sp,sp,-48
20402b84:	d606                	sw	ra,44(sp)
20402b86:	d422                	sw	s0,40(sp)
20402b88:	1800                	addi	s0,sp,48
20402b8a:	fca42e23          	sw	a0,-36(s0)
20402b8e:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20402b92:	33c9                	jal	20402954 <__metal_myhart_id>
20402b94:	872a                	mv	a4,a0
20402b96:	800007b7          	lui	a5,0x80000
20402b9a:	070a                	slli	a4,a4,0x2
20402b9c:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20402ba0:	97ba                	add	a5,a5,a4
20402ba2:	439c                	lw	a5,0(a5)
20402ba4:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20402ba8:	342027f3          	csrr	a5,mcause
20402bac:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20402bb0:	fec42783          	lw	a5,-20(s0)
20402bb4:	c795                	beqz	a5,20402be0 <__metal_default_sw_handler+0x5e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20402bb6:	fec42503          	lw	a0,-20(s0)
20402bba:	3b31                	jal	204028d6 <__metal_driver_cpu_interrupt_controller>
20402bbc:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20402bc0:	fe842783          	lw	a5,-24(s0)
20402bc4:	3ff7f793          	andi	a5,a5,1023
20402bc8:	fe442703          	lw	a4,-28(s0)
20402bcc:	0e878793          	addi	a5,a5,232
20402bd0:	078a                	slli	a5,a5,0x2
20402bd2:	97ba                	add	a5,a5,a4
20402bd4:	439c                	lw	a5,0(a5)
20402bd6:	fdc42583          	lw	a1,-36(s0)
20402bda:	fec42503          	lw	a0,-20(s0)
20402bde:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20402be0:	0001                	nop
20402be2:	50b2                	lw	ra,44(sp)
20402be4:	5422                	lw	s0,40(sp)
20402be6:	6145                	addi	sp,sp,48
20402be8:	8082                	ret

20402bea <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20402bea:	711d                	addi	sp,sp,-96
20402bec:	ce86                	sw	ra,92(sp)
20402bee:	cc96                	sw	t0,88(sp)
20402bf0:	ca9a                	sw	t1,84(sp)
20402bf2:	c89e                	sw	t2,80(sp)
20402bf4:	c6a2                	sw	s0,76(sp)
20402bf6:	c4aa                	sw	a0,72(sp)
20402bf8:	c2ae                	sw	a1,68(sp)
20402bfa:	c0b2                	sw	a2,64(sp)
20402bfc:	de36                	sw	a3,60(sp)
20402bfe:	dc3a                	sw	a4,56(sp)
20402c00:	da3e                	sw	a5,52(sp)
20402c02:	d842                	sw	a6,48(sp)
20402c04:	d646                	sw	a7,44(sp)
20402c06:	d472                	sw	t3,40(sp)
20402c08:	d276                	sw	t4,36(sp)
20402c0a:	d07a                	sw	t5,32(sp)
20402c0c:	ce7e                	sw	t6,28(sp)
20402c0e:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20402c10:	3391                	jal	20402954 <__metal_myhart_id>
20402c12:	872a                	mv	a4,a0
20402c14:	800007b7          	lui	a5,0x80000
20402c18:	070a                	slli	a4,a4,0x2
20402c1a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20402c1e:	97ba                	add	a5,a5,a4
20402c20:	439c                	lw	a5,0(a5)
20402c22:	faf42623          	sw	a5,-84(s0)
20402c26:	fac42783          	lw	a5,-84(s0)
20402c2a:	c785                	beqz	a5,20402c52 <metal_timer_interrupt_vector_handler+0x68>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20402c2c:	fac42503          	lw	a0,-84(s0)
20402c30:	315d                	jal	204028d6 <__metal_driver_cpu_interrupt_controller>
20402c32:	faa42423          	sw	a0,-88(s0)
20402c36:	fa842783          	lw	a5,-88(s0)
20402c3a:	1407a783          	lw	a5,320(a5)
20402c3e:	faf42223          	sw	a5,-92(s0)
20402c42:	fa842783          	lw	a5,-88(s0)
20402c46:	1387a783          	lw	a5,312(a5)
20402c4a:	fa442583          	lw	a1,-92(s0)
20402c4e:	451d                	li	a0,7
20402c50:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:150
}
20402c52:	0001                	nop
20402c54:	40f6                	lw	ra,92(sp)
20402c56:	42e6                	lw	t0,88(sp)
20402c58:	4356                	lw	t1,84(sp)
20402c5a:	43c6                	lw	t2,80(sp)
20402c5c:	4436                	lw	s0,76(sp)
20402c5e:	4526                	lw	a0,72(sp)
20402c60:	4596                	lw	a1,68(sp)
20402c62:	4606                	lw	a2,64(sp)
20402c64:	56f2                	lw	a3,60(sp)
20402c66:	5762                	lw	a4,56(sp)
20402c68:	57d2                	lw	a5,52(sp)
20402c6a:	5842                	lw	a6,48(sp)
20402c6c:	58b2                	lw	a7,44(sp)
20402c6e:	5e22                	lw	t3,40(sp)
20402c70:	5e92                	lw	t4,36(sp)
20402c72:	5f02                	lw	t5,32(sp)
20402c74:	4ff2                	lw	t6,28(sp)
20402c76:	6125                	addi	sp,sp,96
20402c78:	30200073          	mret

20402c7c <__metal_default_beu_handler>:
__metal_default_beu_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20402c7c:	1101                	addi	sp,sp,-32
20402c7e:	ce22                	sw	s0,28(sp)
20402c80:	1000                	addi	s0,sp,32
20402c82:	fea42623          	sw	a0,-20(s0)
20402c86:	feb42423          	sw	a1,-24(s0)
20402c8a:	0001                	nop
20402c8c:	4472                	lw	s0,28(sp)
20402c8e:	6105                	addi	sp,sp,32
20402c90:	8082                	ret

20402c92 <__metal_default_timer_handler>:
__metal_default_timer_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20402c92:	7179                	addi	sp,sp,-48
20402c94:	d606                	sw	ra,44(sp)
20402c96:	d422                	sw	s0,40(sp)
20402c98:	1800                	addi	s0,sp,48
20402c9a:	fca42e23          	sw	a0,-36(s0)
20402c9e:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20402ca2:	394d                	jal	20402954 <__metal_myhart_id>
20402ca4:	87aa                	mv	a5,a0
20402ca6:	853e                	mv	a0,a5
20402ca8:	39b5                	jal	20402924 <__metal_driver_cpu_get>
20402caa:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20402cae:	fec42503          	lw	a0,-20(s0)
20402cb2:	26e010ef          	jal	ra,20403f20 <__metal_driver_cpu_mtime_get>
20402cb6:	fea42023          	sw	a0,-32(s0)
20402cba:	feb42223          	sw	a1,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20402cbe:	fe042703          	lw	a4,-32(s0)
20402cc2:	fe442783          	lw	a5,-28(s0)
20402cc6:	4529                	li	a0,10
20402cc8:	4581                	li	a1,0
20402cca:	00a70633          	add	a2,a4,a0
20402cce:	8832                	mv	a6,a2
20402cd0:	00e83833          	sltu	a6,a6,a4
20402cd4:	00b786b3          	add	a3,a5,a1
20402cd8:	00d807b3          	add	a5,a6,a3
20402cdc:	86be                	mv	a3,a5
20402cde:	8732                	mv	a4,a2
20402ce0:	87b6                	mv	a5,a3
20402ce2:	85ba                	mv	a1,a4
20402ce4:	863e                	mv	a2,a5
20402ce6:	fec42503          	lw	a0,-20(s0)
20402cea:	29c010ef          	jal	ra,20403f86 <__metal_driver_cpu_mtimecmp_set>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:160
}
20402cee:	0001                	nop
20402cf0:	50b2                	lw	ra,44(sp)
20402cf2:	5422                	lw	s0,40(sp)
20402cf4:	6145                	addi	sp,sp,48
20402cf6:	8082                	ret
	...

20402d00 <__metal_exception_handler>:
__metal_exception_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20402d00:	7119                	addi	sp,sp,-128
20402d02:	de86                	sw	ra,124(sp)
20402d04:	dc96                	sw	t0,120(sp)
20402d06:	da9a                	sw	t1,116(sp)
20402d08:	d89e                	sw	t2,112(sp)
20402d0a:	d6a2                	sw	s0,108(sp)
20402d0c:	d4aa                	sw	a0,104(sp)
20402d0e:	d2ae                	sw	a1,100(sp)
20402d10:	d0b2                	sw	a2,96(sp)
20402d12:	ceb6                	sw	a3,92(sp)
20402d14:	ccba                	sw	a4,88(sp)
20402d16:	cabe                	sw	a5,84(sp)
20402d18:	c8c2                	sw	a6,80(sp)
20402d1a:	c6c6                	sw	a7,76(sp)
20402d1c:	c4f2                	sw	t3,72(sp)
20402d1e:	c2f6                	sw	t4,68(sp)
20402d20:	c0fa                	sw	t5,64(sp)
20402d22:	de7e                	sw	t6,60(sp)
20402d24:	0100                	addi	s0,sp,128
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20402d26:	313d                	jal	20402954 <__metal_myhart_id>
20402d28:	872a                	mv	a4,a0
20402d2a:	800007b7          	lui	a5,0x80000
20402d2e:	070a                	slli	a4,a4,0x2
20402d30:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20402d34:	97ba                	add	a5,a5,a4
20402d36:	439c                	lw	a5,0(a5)
20402d38:	faf42623          	sw	a5,-84(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20402d3c:	342027f3          	csrr	a5,mcause
20402d40:	faf42423          	sw	a5,-88(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20402d44:	341027f3          	csrr	a5,mepc
20402d48:	faf42223          	sw	a5,-92(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
20402d4c:	343027f3          	csrr	a5,mtval
20402d50:	faf42023          	sw	a5,-96(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20402d54:	305027f3          	csrr	a5,mtvec
20402d58:	f8f42e23          	sw	a5,-100(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
20402d5c:	fac42783          	lw	a5,-84(s0)
20402d60:	cbfd                	beqz	a5,20402e56 <__metal_exception_handler+0x156>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20402d62:	fac42503          	lw	a0,-84(s0)
20402d66:	b71ff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
20402d6a:	f8a42c23          	sw	a0,-104(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20402d6e:	fa842783          	lw	a5,-88(s0)
20402d72:	3ff7f793          	andi	a5,a5,1023
20402d76:	f8f42a23          	sw	a5,-108(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
20402d7a:	fa842783          	lw	a5,-88(s0)
20402d7e:	0a07de63          	bgez	a5,20402e3a <__metal_exception_handler+0x13a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20402d82:	f9442703          	lw	a4,-108(s0)
20402d86:	08000793          	li	a5,128
20402d8a:	02f71263          	bne	a4,a5,20402dae <__metal_exception_handler+0xae>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20402d8e:	f9842783          	lw	a5,-104(s0)
20402d92:	3987a783          	lw	a5,920(a5)
20402d96:	f8f42623          	sw	a5,-116(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20402d9a:	f9842783          	lw	a5,-104(s0)
20402d9e:	3907a783          	lw	a5,912(a5)
20402da2:	f8c42583          	lw	a1,-116(s0)
20402da6:	f9442503          	lw	a0,-108(s0)
20402daa:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
20402dac:	a06d                	j	20402e56 <__metal_exception_handler+0x156>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20402dae:	f9442703          	lw	a4,-108(s0)
20402db2:	47ad                	li	a5,11
20402db4:	00e7d763          	bge	a5,a4,20402dc2 <__metal_exception_handler+0xc2>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20402db8:	f9c42783          	lw	a5,-100(s0)
20402dbc:	03f7f793          	andi	a5,a5,63
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20402dc0:	ef9d                	bnez	a5,20402dfe <__metal_exception_handler+0xfe>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20402dc2:	f9842683          	lw	a3,-104(s0)
20402dc6:	f9442703          	lw	a4,-108(s0)
20402dca:	87ba                	mv	a5,a4
20402dcc:	0786                	slli	a5,a5,0x1
20402dce:	97ba                	add	a5,a5,a4
20402dd0:	078e                	slli	a5,a5,0x3
20402dd2:	97b6                	add	a5,a5,a3
20402dd4:	0987a783          	lw	a5,152(a5)
20402dd8:	f8f42623          	sw	a5,-116(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
20402ddc:	f9842683          	lw	a3,-104(s0)
20402de0:	f9442703          	lw	a4,-108(s0)
20402de4:	87ba                	mv	a5,a4
20402de6:	0786                	slli	a5,a5,0x1
20402de8:	97ba                	add	a5,a5,a4
20402dea:	078e                	slli	a5,a5,0x3
20402dec:	97b6                	add	a5,a5,a3
20402dee:	0907a783          	lw	a5,144(a5)
20402df2:	f8c42583          	lw	a1,-116(s0)
20402df6:	f9442503          	lw	a0,-108(s0)
20402dfa:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
20402dfc:	a8a9                	j	20402e56 <__metal_exception_handler+0x156>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20402dfe:	f9c42783          	lw	a5,-100(s0)
20402e02:	03f7f713          	andi	a4,a5,63
20402e06:	4789                	li	a5,2
20402e08:	04f71763          	bne	a4,a5,20402e56 <__metal_exception_handler+0x156>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
20402e0c:	307027f3          	csrr	a5,mtvt
20402e10:	f8f42823          	sw	a5,-112(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20402e14:	f9842783          	lw	a5,-104(s0)
20402e18:	0dc7a783          	lw	a5,220(a5)
20402e1c:	f8f42623          	sw	a5,-116(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20402e20:	f9042783          	lw	a5,-112(s0)
20402e24:	439c                	lw	a5,0(a5)
20402e26:	f8f42423          	sw	a5,-120(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20402e2a:	f8842783          	lw	a5,-120(s0)
20402e2e:	f8c42583          	lw	a1,-116(s0)
20402e32:	f9442503          	lw	a0,-108(s0)
20402e36:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20402e38:	a839                	j	20402e56 <__metal_exception_handler+0x156>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20402e3a:	f9842703          	lw	a4,-104(s0)
20402e3e:	f9442783          	lw	a5,-108(s0)
20402e42:	0e878793          	addi	a5,a5,232
20402e46:	078a                	slli	a5,a5,0x2
20402e48:	97ba                	add	a5,a5,a4
20402e4a:	439c                	lw	a5,0(a5)
20402e4c:	f9442583          	lw	a1,-108(s0)
20402e50:	fac42503          	lw	a0,-84(s0)
20402e54:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20402e56:	50f6                	lw	ra,124(sp)
20402e58:	52e6                	lw	t0,120(sp)
20402e5a:	5356                	lw	t1,116(sp)
20402e5c:	53c6                	lw	t2,112(sp)
20402e5e:	5436                	lw	s0,108(sp)
20402e60:	5526                	lw	a0,104(sp)
20402e62:	5596                	lw	a1,100(sp)
20402e64:	5606                	lw	a2,96(sp)
20402e66:	46f6                	lw	a3,92(sp)
20402e68:	4766                	lw	a4,88(sp)
20402e6a:	47d6                	lw	a5,84(sp)
20402e6c:	4846                	lw	a6,80(sp)
20402e6e:	48b6                	lw	a7,76(sp)
20402e70:	4e26                	lw	t3,72(sp)
20402e72:	4e96                	lw	t4,68(sp)
20402e74:	4f06                	lw	t5,64(sp)
20402e76:	5ff2                	lw	t6,60(sp)
20402e78:	6109                	addi	sp,sp,128
20402e7a:	30200073          	mret
	...

20402ef8 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20402ef8:	711d                	addi	sp,sp,-96
20402efa:	ce86                	sw	ra,92(sp)
20402efc:	cc96                	sw	t0,88(sp)
20402efe:	ca9a                	sw	t1,84(sp)
20402f00:	c89e                	sw	t2,80(sp)
20402f02:	c6a2                	sw	s0,76(sp)
20402f04:	c4aa                	sw	a0,72(sp)
20402f06:	c2ae                	sw	a1,68(sp)
20402f08:	c0b2                	sw	a2,64(sp)
20402f0a:	de36                	sw	a3,60(sp)
20402f0c:	dc3a                	sw	a4,56(sp)
20402f0e:	da3e                	sw	a5,52(sp)
20402f10:	d842                	sw	a6,48(sp)
20402f12:	d646                	sw	a7,44(sp)
20402f14:	d472                	sw	t3,40(sp)
20402f16:	d276                	sw	t4,36(sp)
20402f18:	d07a                	sw	t5,32(sp)
20402f1a:	ce7e                	sw	t6,28(sp)
20402f1c:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20402f1e:	a37ff0ef          	jal	ra,20402954 <__metal_myhart_id>
20402f22:	872a                	mv	a4,a0
20402f24:	800007b7          	lui	a5,0x80000
20402f28:	070a                	slli	a4,a4,0x2
20402f2a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20402f2e:	97ba                	add	a5,a5,a4
20402f30:	439c                	lw	a5,0(a5)
20402f32:	faf42623          	sw	a5,-84(s0)
20402f36:	fac42783          	lw	a5,-84(s0)
20402f3a:	c78d                	beqz	a5,20402f64 <metal_lc0_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
20402f3c:	fac42503          	lw	a0,-84(s0)
20402f40:	997ff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
20402f44:	faa42423          	sw	a0,-88(s0)
20402f48:	fa842783          	lw	a5,-88(s0)
20402f4c:	2187a783          	lw	a5,536(a5)
20402f50:	faf42223          	sw	a5,-92(s0)
20402f54:	fa842783          	lw	a5,-88(s0)
20402f58:	2107a783          	lw	a5,528(a5)
20402f5c:	fa442583          	lw	a1,-92(s0)
20402f60:	4541                	li	a0,16
20402f62:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:216
}
20402f64:	0001                	nop
20402f66:	40f6                	lw	ra,92(sp)
20402f68:	42e6                	lw	t0,88(sp)
20402f6a:	4356                	lw	t1,84(sp)
20402f6c:	43c6                	lw	t2,80(sp)
20402f6e:	4436                	lw	s0,76(sp)
20402f70:	4526                	lw	a0,72(sp)
20402f72:	4596                	lw	a1,68(sp)
20402f74:	4606                	lw	a2,64(sp)
20402f76:	56f2                	lw	a3,60(sp)
20402f78:	5762                	lw	a4,56(sp)
20402f7a:	57d2                	lw	a5,52(sp)
20402f7c:	5842                	lw	a6,48(sp)
20402f7e:	58b2                	lw	a7,44(sp)
20402f80:	5e22                	lw	t3,40(sp)
20402f82:	5e92                	lw	t4,36(sp)
20402f84:	5f02                	lw	t5,32(sp)
20402f86:	4ff2                	lw	t6,28(sp)
20402f88:	6125                	addi	sp,sp,96
20402f8a:	30200073          	mret

20402f8e <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20402f8e:	711d                	addi	sp,sp,-96
20402f90:	ce86                	sw	ra,92(sp)
20402f92:	cc96                	sw	t0,88(sp)
20402f94:	ca9a                	sw	t1,84(sp)
20402f96:	c89e                	sw	t2,80(sp)
20402f98:	c6a2                	sw	s0,76(sp)
20402f9a:	c4aa                	sw	a0,72(sp)
20402f9c:	c2ae                	sw	a1,68(sp)
20402f9e:	c0b2                	sw	a2,64(sp)
20402fa0:	de36                	sw	a3,60(sp)
20402fa2:	dc3a                	sw	a4,56(sp)
20402fa4:	da3e                	sw	a5,52(sp)
20402fa6:	d842                	sw	a6,48(sp)
20402fa8:	d646                	sw	a7,44(sp)
20402faa:	d472                	sw	t3,40(sp)
20402fac:	d276                	sw	t4,36(sp)
20402fae:	d07a                	sw	t5,32(sp)
20402fb0:	ce7e                	sw	t6,28(sp)
20402fb2:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20402fb4:	9a1ff0ef          	jal	ra,20402954 <__metal_myhart_id>
20402fb8:	872a                	mv	a4,a0
20402fba:	800007b7          	lui	a5,0x80000
20402fbe:	070a                	slli	a4,a4,0x2
20402fc0:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20402fc4:	97ba                	add	a5,a5,a4
20402fc6:	439c                	lw	a5,0(a5)
20402fc8:	faf42623          	sw	a5,-84(s0)
20402fcc:	fac42783          	lw	a5,-84(s0)
20402fd0:	c78d                	beqz	a5,20402ffa <metal_lc1_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20402fd2:	fac42503          	lw	a0,-84(s0)
20402fd6:	901ff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
20402fda:	faa42423          	sw	a0,-88(s0)
20402fde:	fa842783          	lw	a5,-88(s0)
20402fe2:	2307a783          	lw	a5,560(a5)
20402fe6:	faf42223          	sw	a5,-92(s0)
20402fea:	fa842783          	lw	a5,-88(s0)
20402fee:	2287a783          	lw	a5,552(a5)
20402ff2:	fa442583          	lw	a1,-92(s0)
20402ff6:	4545                	li	a0,17
20402ff8:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:221
}
20402ffa:	0001                	nop
20402ffc:	40f6                	lw	ra,92(sp)
20402ffe:	42e6                	lw	t0,88(sp)
20403000:	4356                	lw	t1,84(sp)
20403002:	43c6                	lw	t2,80(sp)
20403004:	4436                	lw	s0,76(sp)
20403006:	4526                	lw	a0,72(sp)
20403008:	4596                	lw	a1,68(sp)
2040300a:	4606                	lw	a2,64(sp)
2040300c:	56f2                	lw	a3,60(sp)
2040300e:	5762                	lw	a4,56(sp)
20403010:	57d2                	lw	a5,52(sp)
20403012:	5842                	lw	a6,48(sp)
20403014:	58b2                	lw	a7,44(sp)
20403016:	5e22                	lw	t3,40(sp)
20403018:	5e92                	lw	t4,36(sp)
2040301a:	5f02                	lw	t5,32(sp)
2040301c:	4ff2                	lw	t6,28(sp)
2040301e:	6125                	addi	sp,sp,96
20403020:	30200073          	mret

20403024 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20403024:	711d                	addi	sp,sp,-96
20403026:	ce86                	sw	ra,92(sp)
20403028:	cc96                	sw	t0,88(sp)
2040302a:	ca9a                	sw	t1,84(sp)
2040302c:	c89e                	sw	t2,80(sp)
2040302e:	c6a2                	sw	s0,76(sp)
20403030:	c4aa                	sw	a0,72(sp)
20403032:	c2ae                	sw	a1,68(sp)
20403034:	c0b2                	sw	a2,64(sp)
20403036:	de36                	sw	a3,60(sp)
20403038:	dc3a                	sw	a4,56(sp)
2040303a:	da3e                	sw	a5,52(sp)
2040303c:	d842                	sw	a6,48(sp)
2040303e:	d646                	sw	a7,44(sp)
20403040:	d472                	sw	t3,40(sp)
20403042:	d276                	sw	t4,36(sp)
20403044:	d07a                	sw	t5,32(sp)
20403046:	ce7e                	sw	t6,28(sp)
20403048:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
2040304a:	90bff0ef          	jal	ra,20402954 <__metal_myhart_id>
2040304e:	872a                	mv	a4,a0
20403050:	800007b7          	lui	a5,0x80000
20403054:	070a                	slli	a4,a4,0x2
20403056:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
2040305a:	97ba                	add	a5,a5,a4
2040305c:	439c                	lw	a5,0(a5)
2040305e:	faf42623          	sw	a5,-84(s0)
20403062:	fac42783          	lw	a5,-84(s0)
20403066:	c78d                	beqz	a5,20403090 <metal_lc2_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
20403068:	fac42503          	lw	a0,-84(s0)
2040306c:	86bff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
20403070:	faa42423          	sw	a0,-88(s0)
20403074:	fa842783          	lw	a5,-88(s0)
20403078:	2487a783          	lw	a5,584(a5)
2040307c:	faf42223          	sw	a5,-92(s0)
20403080:	fa842783          	lw	a5,-88(s0)
20403084:	2407a783          	lw	a5,576(a5)
20403088:	fa442583          	lw	a1,-92(s0)
2040308c:	4549                	li	a0,18
2040308e:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:226
}
20403090:	0001                	nop
20403092:	40f6                	lw	ra,92(sp)
20403094:	42e6                	lw	t0,88(sp)
20403096:	4356                	lw	t1,84(sp)
20403098:	43c6                	lw	t2,80(sp)
2040309a:	4436                	lw	s0,76(sp)
2040309c:	4526                	lw	a0,72(sp)
2040309e:	4596                	lw	a1,68(sp)
204030a0:	4606                	lw	a2,64(sp)
204030a2:	56f2                	lw	a3,60(sp)
204030a4:	5762                	lw	a4,56(sp)
204030a6:	57d2                	lw	a5,52(sp)
204030a8:	5842                	lw	a6,48(sp)
204030aa:	58b2                	lw	a7,44(sp)
204030ac:	5e22                	lw	t3,40(sp)
204030ae:	5e92                	lw	t4,36(sp)
204030b0:	5f02                	lw	t5,32(sp)
204030b2:	4ff2                	lw	t6,28(sp)
204030b4:	6125                	addi	sp,sp,96
204030b6:	30200073          	mret

204030ba <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
204030ba:	711d                	addi	sp,sp,-96
204030bc:	ce86                	sw	ra,92(sp)
204030be:	cc96                	sw	t0,88(sp)
204030c0:	ca9a                	sw	t1,84(sp)
204030c2:	c89e                	sw	t2,80(sp)
204030c4:	c6a2                	sw	s0,76(sp)
204030c6:	c4aa                	sw	a0,72(sp)
204030c8:	c2ae                	sw	a1,68(sp)
204030ca:	c0b2                	sw	a2,64(sp)
204030cc:	de36                	sw	a3,60(sp)
204030ce:	dc3a                	sw	a4,56(sp)
204030d0:	da3e                	sw	a5,52(sp)
204030d2:	d842                	sw	a6,48(sp)
204030d4:	d646                	sw	a7,44(sp)
204030d6:	d472                	sw	t3,40(sp)
204030d8:	d276                	sw	t4,36(sp)
204030da:	d07a                	sw	t5,32(sp)
204030dc:	ce7e                	sw	t6,28(sp)
204030de:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
204030e0:	875ff0ef          	jal	ra,20402954 <__metal_myhart_id>
204030e4:	872a                	mv	a4,a0
204030e6:	800007b7          	lui	a5,0x80000
204030ea:	070a                	slli	a4,a4,0x2
204030ec:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204030f0:	97ba                	add	a5,a5,a4
204030f2:	439c                	lw	a5,0(a5)
204030f4:	faf42623          	sw	a5,-84(s0)
204030f8:	fac42783          	lw	a5,-84(s0)
204030fc:	c78d                	beqz	a5,20403126 <metal_lc3_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
204030fe:	fac42503          	lw	a0,-84(s0)
20403102:	fd4ff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
20403106:	faa42423          	sw	a0,-88(s0)
2040310a:	fa842783          	lw	a5,-88(s0)
2040310e:	2607a783          	lw	a5,608(a5)
20403112:	faf42223          	sw	a5,-92(s0)
20403116:	fa842783          	lw	a5,-88(s0)
2040311a:	2587a783          	lw	a5,600(a5)
2040311e:	fa442583          	lw	a1,-92(s0)
20403122:	454d                	li	a0,19
20403124:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:231
}
20403126:	0001                	nop
20403128:	40f6                	lw	ra,92(sp)
2040312a:	42e6                	lw	t0,88(sp)
2040312c:	4356                	lw	t1,84(sp)
2040312e:	43c6                	lw	t2,80(sp)
20403130:	4436                	lw	s0,76(sp)
20403132:	4526                	lw	a0,72(sp)
20403134:	4596                	lw	a1,68(sp)
20403136:	4606                	lw	a2,64(sp)
20403138:	56f2                	lw	a3,60(sp)
2040313a:	5762                	lw	a4,56(sp)
2040313c:	57d2                	lw	a5,52(sp)
2040313e:	5842                	lw	a6,48(sp)
20403140:	58b2                	lw	a7,44(sp)
20403142:	5e22                	lw	t3,40(sp)
20403144:	5e92                	lw	t4,36(sp)
20403146:	5f02                	lw	t5,32(sp)
20403148:	4ff2                	lw	t6,28(sp)
2040314a:	6125                	addi	sp,sp,96
2040314c:	30200073          	mret

20403150 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20403150:	711d                	addi	sp,sp,-96
20403152:	ce86                	sw	ra,92(sp)
20403154:	cc96                	sw	t0,88(sp)
20403156:	ca9a                	sw	t1,84(sp)
20403158:	c89e                	sw	t2,80(sp)
2040315a:	c6a2                	sw	s0,76(sp)
2040315c:	c4aa                	sw	a0,72(sp)
2040315e:	c2ae                	sw	a1,68(sp)
20403160:	c0b2                	sw	a2,64(sp)
20403162:	de36                	sw	a3,60(sp)
20403164:	dc3a                	sw	a4,56(sp)
20403166:	da3e                	sw	a5,52(sp)
20403168:	d842                	sw	a6,48(sp)
2040316a:	d646                	sw	a7,44(sp)
2040316c:	d472                	sw	t3,40(sp)
2040316e:	d276                	sw	t4,36(sp)
20403170:	d07a                	sw	t5,32(sp)
20403172:	ce7e                	sw	t6,28(sp)
20403174:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20403176:	fdeff0ef          	jal	ra,20402954 <__metal_myhart_id>
2040317a:	872a                	mv	a4,a0
2040317c:	800007b7          	lui	a5,0x80000
20403180:	070a                	slli	a4,a4,0x2
20403182:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403186:	97ba                	add	a5,a5,a4
20403188:	439c                	lw	a5,0(a5)
2040318a:	faf42623          	sw	a5,-84(s0)
2040318e:	fac42783          	lw	a5,-84(s0)
20403192:	c78d                	beqz	a5,204031bc <metal_lc4_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20403194:	fac42503          	lw	a0,-84(s0)
20403198:	f3eff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
2040319c:	faa42423          	sw	a0,-88(s0)
204031a0:	fa842783          	lw	a5,-88(s0)
204031a4:	2787a783          	lw	a5,632(a5)
204031a8:	faf42223          	sw	a5,-92(s0)
204031ac:	fa842783          	lw	a5,-88(s0)
204031b0:	2707a783          	lw	a5,624(a5)
204031b4:	fa442583          	lw	a1,-92(s0)
204031b8:	4551                	li	a0,20
204031ba:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:236
}
204031bc:	0001                	nop
204031be:	40f6                	lw	ra,92(sp)
204031c0:	42e6                	lw	t0,88(sp)
204031c2:	4356                	lw	t1,84(sp)
204031c4:	43c6                	lw	t2,80(sp)
204031c6:	4436                	lw	s0,76(sp)
204031c8:	4526                	lw	a0,72(sp)
204031ca:	4596                	lw	a1,68(sp)
204031cc:	4606                	lw	a2,64(sp)
204031ce:	56f2                	lw	a3,60(sp)
204031d0:	5762                	lw	a4,56(sp)
204031d2:	57d2                	lw	a5,52(sp)
204031d4:	5842                	lw	a6,48(sp)
204031d6:	58b2                	lw	a7,44(sp)
204031d8:	5e22                	lw	t3,40(sp)
204031da:	5e92                	lw	t4,36(sp)
204031dc:	5f02                	lw	t5,32(sp)
204031de:	4ff2                	lw	t6,28(sp)
204031e0:	6125                	addi	sp,sp,96
204031e2:	30200073          	mret

204031e6 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
204031e6:	711d                	addi	sp,sp,-96
204031e8:	ce86                	sw	ra,92(sp)
204031ea:	cc96                	sw	t0,88(sp)
204031ec:	ca9a                	sw	t1,84(sp)
204031ee:	c89e                	sw	t2,80(sp)
204031f0:	c6a2                	sw	s0,76(sp)
204031f2:	c4aa                	sw	a0,72(sp)
204031f4:	c2ae                	sw	a1,68(sp)
204031f6:	c0b2                	sw	a2,64(sp)
204031f8:	de36                	sw	a3,60(sp)
204031fa:	dc3a                	sw	a4,56(sp)
204031fc:	da3e                	sw	a5,52(sp)
204031fe:	d842                	sw	a6,48(sp)
20403200:	d646                	sw	a7,44(sp)
20403202:	d472                	sw	t3,40(sp)
20403204:	d276                	sw	t4,36(sp)
20403206:	d07a                	sw	t5,32(sp)
20403208:	ce7e                	sw	t6,28(sp)
2040320a:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2040320c:	f48ff0ef          	jal	ra,20402954 <__metal_myhart_id>
20403210:	872a                	mv	a4,a0
20403212:	800007b7          	lui	a5,0x80000
20403216:	070a                	slli	a4,a4,0x2
20403218:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
2040321c:	97ba                	add	a5,a5,a4
2040321e:	439c                	lw	a5,0(a5)
20403220:	faf42623          	sw	a5,-84(s0)
20403224:	fac42783          	lw	a5,-84(s0)
20403228:	c78d                	beqz	a5,20403252 <metal_lc5_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
2040322a:	fac42503          	lw	a0,-84(s0)
2040322e:	ea8ff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
20403232:	faa42423          	sw	a0,-88(s0)
20403236:	fa842783          	lw	a5,-88(s0)
2040323a:	2907a783          	lw	a5,656(a5)
2040323e:	faf42223          	sw	a5,-92(s0)
20403242:	fa842783          	lw	a5,-88(s0)
20403246:	2887a783          	lw	a5,648(a5)
2040324a:	fa442583          	lw	a1,-92(s0)
2040324e:	4555                	li	a0,21
20403250:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:241
}
20403252:	0001                	nop
20403254:	40f6                	lw	ra,92(sp)
20403256:	42e6                	lw	t0,88(sp)
20403258:	4356                	lw	t1,84(sp)
2040325a:	43c6                	lw	t2,80(sp)
2040325c:	4436                	lw	s0,76(sp)
2040325e:	4526                	lw	a0,72(sp)
20403260:	4596                	lw	a1,68(sp)
20403262:	4606                	lw	a2,64(sp)
20403264:	56f2                	lw	a3,60(sp)
20403266:	5762                	lw	a4,56(sp)
20403268:	57d2                	lw	a5,52(sp)
2040326a:	5842                	lw	a6,48(sp)
2040326c:	58b2                	lw	a7,44(sp)
2040326e:	5e22                	lw	t3,40(sp)
20403270:	5e92                	lw	t4,36(sp)
20403272:	5f02                	lw	t5,32(sp)
20403274:	4ff2                	lw	t6,28(sp)
20403276:	6125                	addi	sp,sp,96
20403278:	30200073          	mret

2040327c <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
2040327c:	711d                	addi	sp,sp,-96
2040327e:	ce86                	sw	ra,92(sp)
20403280:	cc96                	sw	t0,88(sp)
20403282:	ca9a                	sw	t1,84(sp)
20403284:	c89e                	sw	t2,80(sp)
20403286:	c6a2                	sw	s0,76(sp)
20403288:	c4aa                	sw	a0,72(sp)
2040328a:	c2ae                	sw	a1,68(sp)
2040328c:	c0b2                	sw	a2,64(sp)
2040328e:	de36                	sw	a3,60(sp)
20403290:	dc3a                	sw	a4,56(sp)
20403292:	da3e                	sw	a5,52(sp)
20403294:	d842                	sw	a6,48(sp)
20403296:	d646                	sw	a7,44(sp)
20403298:	d472                	sw	t3,40(sp)
2040329a:	d276                	sw	t4,36(sp)
2040329c:	d07a                	sw	t5,32(sp)
2040329e:	ce7e                	sw	t6,28(sp)
204032a0:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
204032a2:	eb2ff0ef          	jal	ra,20402954 <__metal_myhart_id>
204032a6:	872a                	mv	a4,a0
204032a8:	800007b7          	lui	a5,0x80000
204032ac:	070a                	slli	a4,a4,0x2
204032ae:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204032b2:	97ba                	add	a5,a5,a4
204032b4:	439c                	lw	a5,0(a5)
204032b6:	faf42623          	sw	a5,-84(s0)
204032ba:	fac42783          	lw	a5,-84(s0)
204032be:	c78d                	beqz	a5,204032e8 <metal_lc6_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
204032c0:	fac42503          	lw	a0,-84(s0)
204032c4:	e12ff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
204032c8:	faa42423          	sw	a0,-88(s0)
204032cc:	fa842783          	lw	a5,-88(s0)
204032d0:	2a87a783          	lw	a5,680(a5)
204032d4:	faf42223          	sw	a5,-92(s0)
204032d8:	fa842783          	lw	a5,-88(s0)
204032dc:	2a07a783          	lw	a5,672(a5)
204032e0:	fa442583          	lw	a1,-92(s0)
204032e4:	4559                	li	a0,22
204032e6:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:246
}
204032e8:	0001                	nop
204032ea:	40f6                	lw	ra,92(sp)
204032ec:	42e6                	lw	t0,88(sp)
204032ee:	4356                	lw	t1,84(sp)
204032f0:	43c6                	lw	t2,80(sp)
204032f2:	4436                	lw	s0,76(sp)
204032f4:	4526                	lw	a0,72(sp)
204032f6:	4596                	lw	a1,68(sp)
204032f8:	4606                	lw	a2,64(sp)
204032fa:	56f2                	lw	a3,60(sp)
204032fc:	5762                	lw	a4,56(sp)
204032fe:	57d2                	lw	a5,52(sp)
20403300:	5842                	lw	a6,48(sp)
20403302:	58b2                	lw	a7,44(sp)
20403304:	5e22                	lw	t3,40(sp)
20403306:	5e92                	lw	t4,36(sp)
20403308:	5f02                	lw	t5,32(sp)
2040330a:	4ff2                	lw	t6,28(sp)
2040330c:	6125                	addi	sp,sp,96
2040330e:	30200073          	mret

20403312 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20403312:	711d                	addi	sp,sp,-96
20403314:	ce86                	sw	ra,92(sp)
20403316:	cc96                	sw	t0,88(sp)
20403318:	ca9a                	sw	t1,84(sp)
2040331a:	c89e                	sw	t2,80(sp)
2040331c:	c6a2                	sw	s0,76(sp)
2040331e:	c4aa                	sw	a0,72(sp)
20403320:	c2ae                	sw	a1,68(sp)
20403322:	c0b2                	sw	a2,64(sp)
20403324:	de36                	sw	a3,60(sp)
20403326:	dc3a                	sw	a4,56(sp)
20403328:	da3e                	sw	a5,52(sp)
2040332a:	d842                	sw	a6,48(sp)
2040332c:	d646                	sw	a7,44(sp)
2040332e:	d472                	sw	t3,40(sp)
20403330:	d276                	sw	t4,36(sp)
20403332:	d07a                	sw	t5,32(sp)
20403334:	ce7e                	sw	t6,28(sp)
20403336:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
20403338:	e1cff0ef          	jal	ra,20402954 <__metal_myhart_id>
2040333c:	872a                	mv	a4,a0
2040333e:	800007b7          	lui	a5,0x80000
20403342:	070a                	slli	a4,a4,0x2
20403344:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403348:	97ba                	add	a5,a5,a4
2040334a:	439c                	lw	a5,0(a5)
2040334c:	faf42623          	sw	a5,-84(s0)
20403350:	fac42783          	lw	a5,-84(s0)
20403354:	c78d                	beqz	a5,2040337e <metal_lc7_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20403356:	fac42503          	lw	a0,-84(s0)
2040335a:	d7cff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
2040335e:	faa42423          	sw	a0,-88(s0)
20403362:	fa842783          	lw	a5,-88(s0)
20403366:	2c07a783          	lw	a5,704(a5)
2040336a:	faf42223          	sw	a5,-92(s0)
2040336e:	fa842783          	lw	a5,-88(s0)
20403372:	2b87a783          	lw	a5,696(a5)
20403376:	fa442583          	lw	a1,-92(s0)
2040337a:	455d                	li	a0,23
2040337c:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:251
}
2040337e:	0001                	nop
20403380:	40f6                	lw	ra,92(sp)
20403382:	42e6                	lw	t0,88(sp)
20403384:	4356                	lw	t1,84(sp)
20403386:	43c6                	lw	t2,80(sp)
20403388:	4436                	lw	s0,76(sp)
2040338a:	4526                	lw	a0,72(sp)
2040338c:	4596                	lw	a1,68(sp)
2040338e:	4606                	lw	a2,64(sp)
20403390:	56f2                	lw	a3,60(sp)
20403392:	5762                	lw	a4,56(sp)
20403394:	57d2                	lw	a5,52(sp)
20403396:	5842                	lw	a6,48(sp)
20403398:	58b2                	lw	a7,44(sp)
2040339a:	5e22                	lw	t3,40(sp)
2040339c:	5e92                	lw	t4,36(sp)
2040339e:	5f02                	lw	t5,32(sp)
204033a0:	4ff2                	lw	t6,28(sp)
204033a2:	6125                	addi	sp,sp,96
204033a4:	30200073          	mret

204033a8 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
204033a8:	711d                	addi	sp,sp,-96
204033aa:	ce86                	sw	ra,92(sp)
204033ac:	cc96                	sw	t0,88(sp)
204033ae:	ca9a                	sw	t1,84(sp)
204033b0:	c89e                	sw	t2,80(sp)
204033b2:	c6a2                	sw	s0,76(sp)
204033b4:	c4aa                	sw	a0,72(sp)
204033b6:	c2ae                	sw	a1,68(sp)
204033b8:	c0b2                	sw	a2,64(sp)
204033ba:	de36                	sw	a3,60(sp)
204033bc:	dc3a                	sw	a4,56(sp)
204033be:	da3e                	sw	a5,52(sp)
204033c0:	d842                	sw	a6,48(sp)
204033c2:	d646                	sw	a7,44(sp)
204033c4:	d472                	sw	t3,40(sp)
204033c6:	d276                	sw	t4,36(sp)
204033c8:	d07a                	sw	t5,32(sp)
204033ca:	ce7e                	sw	t6,28(sp)
204033cc:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
204033ce:	d86ff0ef          	jal	ra,20402954 <__metal_myhart_id>
204033d2:	872a                	mv	a4,a0
204033d4:	800007b7          	lui	a5,0x80000
204033d8:	070a                	slli	a4,a4,0x2
204033da:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204033de:	97ba                	add	a5,a5,a4
204033e0:	439c                	lw	a5,0(a5)
204033e2:	faf42623          	sw	a5,-84(s0)
204033e6:	fac42783          	lw	a5,-84(s0)
204033ea:	c78d                	beqz	a5,20403414 <metal_lc8_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
204033ec:	fac42503          	lw	a0,-84(s0)
204033f0:	ce6ff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
204033f4:	faa42423          	sw	a0,-88(s0)
204033f8:	fa842783          	lw	a5,-88(s0)
204033fc:	2d87a783          	lw	a5,728(a5)
20403400:	faf42223          	sw	a5,-92(s0)
20403404:	fa842783          	lw	a5,-88(s0)
20403408:	2d07a783          	lw	a5,720(a5)
2040340c:	fa442583          	lw	a1,-92(s0)
20403410:	4561                	li	a0,24
20403412:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:256
}
20403414:	0001                	nop
20403416:	40f6                	lw	ra,92(sp)
20403418:	42e6                	lw	t0,88(sp)
2040341a:	4356                	lw	t1,84(sp)
2040341c:	43c6                	lw	t2,80(sp)
2040341e:	4436                	lw	s0,76(sp)
20403420:	4526                	lw	a0,72(sp)
20403422:	4596                	lw	a1,68(sp)
20403424:	4606                	lw	a2,64(sp)
20403426:	56f2                	lw	a3,60(sp)
20403428:	5762                	lw	a4,56(sp)
2040342a:	57d2                	lw	a5,52(sp)
2040342c:	5842                	lw	a6,48(sp)
2040342e:	58b2                	lw	a7,44(sp)
20403430:	5e22                	lw	t3,40(sp)
20403432:	5e92                	lw	t4,36(sp)
20403434:	5f02                	lw	t5,32(sp)
20403436:	4ff2                	lw	t6,28(sp)
20403438:	6125                	addi	sp,sp,96
2040343a:	30200073          	mret

2040343e <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
2040343e:	711d                	addi	sp,sp,-96
20403440:	ce86                	sw	ra,92(sp)
20403442:	cc96                	sw	t0,88(sp)
20403444:	ca9a                	sw	t1,84(sp)
20403446:	c89e                	sw	t2,80(sp)
20403448:	c6a2                	sw	s0,76(sp)
2040344a:	c4aa                	sw	a0,72(sp)
2040344c:	c2ae                	sw	a1,68(sp)
2040344e:	c0b2                	sw	a2,64(sp)
20403450:	de36                	sw	a3,60(sp)
20403452:	dc3a                	sw	a4,56(sp)
20403454:	da3e                	sw	a5,52(sp)
20403456:	d842                	sw	a6,48(sp)
20403458:	d646                	sw	a7,44(sp)
2040345a:	d472                	sw	t3,40(sp)
2040345c:	d276                	sw	t4,36(sp)
2040345e:	d07a                	sw	t5,32(sp)
20403460:	ce7e                	sw	t6,28(sp)
20403462:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20403464:	cf0ff0ef          	jal	ra,20402954 <__metal_myhart_id>
20403468:	872a                	mv	a4,a0
2040346a:	800007b7          	lui	a5,0x80000
2040346e:	070a                	slli	a4,a4,0x2
20403470:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403474:	97ba                	add	a5,a5,a4
20403476:	439c                	lw	a5,0(a5)
20403478:	faf42623          	sw	a5,-84(s0)
2040347c:	fac42783          	lw	a5,-84(s0)
20403480:	c78d                	beqz	a5,204034aa <metal_lc9_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20403482:	fac42503          	lw	a0,-84(s0)
20403486:	c50ff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
2040348a:	faa42423          	sw	a0,-88(s0)
2040348e:	fa842783          	lw	a5,-88(s0)
20403492:	2f07a783          	lw	a5,752(a5)
20403496:	faf42223          	sw	a5,-92(s0)
2040349a:	fa842783          	lw	a5,-88(s0)
2040349e:	2e87a783          	lw	a5,744(a5)
204034a2:	fa442583          	lw	a1,-92(s0)
204034a6:	4565                	li	a0,25
204034a8:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:261
}
204034aa:	0001                	nop
204034ac:	40f6                	lw	ra,92(sp)
204034ae:	42e6                	lw	t0,88(sp)
204034b0:	4356                	lw	t1,84(sp)
204034b2:	43c6                	lw	t2,80(sp)
204034b4:	4436                	lw	s0,76(sp)
204034b6:	4526                	lw	a0,72(sp)
204034b8:	4596                	lw	a1,68(sp)
204034ba:	4606                	lw	a2,64(sp)
204034bc:	56f2                	lw	a3,60(sp)
204034be:	5762                	lw	a4,56(sp)
204034c0:	57d2                	lw	a5,52(sp)
204034c2:	5842                	lw	a6,48(sp)
204034c4:	58b2                	lw	a7,44(sp)
204034c6:	5e22                	lw	t3,40(sp)
204034c8:	5e92                	lw	t4,36(sp)
204034ca:	5f02                	lw	t5,32(sp)
204034cc:	4ff2                	lw	t6,28(sp)
204034ce:	6125                	addi	sp,sp,96
204034d0:	30200073          	mret

204034d4 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
204034d4:	711d                	addi	sp,sp,-96
204034d6:	ce86                	sw	ra,92(sp)
204034d8:	cc96                	sw	t0,88(sp)
204034da:	ca9a                	sw	t1,84(sp)
204034dc:	c89e                	sw	t2,80(sp)
204034de:	c6a2                	sw	s0,76(sp)
204034e0:	c4aa                	sw	a0,72(sp)
204034e2:	c2ae                	sw	a1,68(sp)
204034e4:	c0b2                	sw	a2,64(sp)
204034e6:	de36                	sw	a3,60(sp)
204034e8:	dc3a                	sw	a4,56(sp)
204034ea:	da3e                	sw	a5,52(sp)
204034ec:	d842                	sw	a6,48(sp)
204034ee:	d646                	sw	a7,44(sp)
204034f0:	d472                	sw	t3,40(sp)
204034f2:	d276                	sw	t4,36(sp)
204034f4:	d07a                	sw	t5,32(sp)
204034f6:	ce7e                	sw	t6,28(sp)
204034f8:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
204034fa:	c5aff0ef          	jal	ra,20402954 <__metal_myhart_id>
204034fe:	872a                	mv	a4,a0
20403500:	800007b7          	lui	a5,0x80000
20403504:	070a                	slli	a4,a4,0x2
20403506:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
2040350a:	97ba                	add	a5,a5,a4
2040350c:	439c                	lw	a5,0(a5)
2040350e:	faf42623          	sw	a5,-84(s0)
20403512:	fac42783          	lw	a5,-84(s0)
20403516:	c78d                	beqz	a5,20403540 <metal_lc10_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20403518:	fac42503          	lw	a0,-84(s0)
2040351c:	bbaff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
20403520:	faa42423          	sw	a0,-88(s0)
20403524:	fa842783          	lw	a5,-88(s0)
20403528:	3087a783          	lw	a5,776(a5)
2040352c:	faf42223          	sw	a5,-92(s0)
20403530:	fa842783          	lw	a5,-88(s0)
20403534:	3007a783          	lw	a5,768(a5)
20403538:	fa442583          	lw	a1,-92(s0)
2040353c:	4569                	li	a0,26
2040353e:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:267
}
20403540:	0001                	nop
20403542:	40f6                	lw	ra,92(sp)
20403544:	42e6                	lw	t0,88(sp)
20403546:	4356                	lw	t1,84(sp)
20403548:	43c6                	lw	t2,80(sp)
2040354a:	4436                	lw	s0,76(sp)
2040354c:	4526                	lw	a0,72(sp)
2040354e:	4596                	lw	a1,68(sp)
20403550:	4606                	lw	a2,64(sp)
20403552:	56f2                	lw	a3,60(sp)
20403554:	5762                	lw	a4,56(sp)
20403556:	57d2                	lw	a5,52(sp)
20403558:	5842                	lw	a6,48(sp)
2040355a:	58b2                	lw	a7,44(sp)
2040355c:	5e22                	lw	t3,40(sp)
2040355e:	5e92                	lw	t4,36(sp)
20403560:	5f02                	lw	t5,32(sp)
20403562:	4ff2                	lw	t6,28(sp)
20403564:	6125                	addi	sp,sp,96
20403566:	30200073          	mret

2040356a <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
2040356a:	711d                	addi	sp,sp,-96
2040356c:	ce86                	sw	ra,92(sp)
2040356e:	cc96                	sw	t0,88(sp)
20403570:	ca9a                	sw	t1,84(sp)
20403572:	c89e                	sw	t2,80(sp)
20403574:	c6a2                	sw	s0,76(sp)
20403576:	c4aa                	sw	a0,72(sp)
20403578:	c2ae                	sw	a1,68(sp)
2040357a:	c0b2                	sw	a2,64(sp)
2040357c:	de36                	sw	a3,60(sp)
2040357e:	dc3a                	sw	a4,56(sp)
20403580:	da3e                	sw	a5,52(sp)
20403582:	d842                	sw	a6,48(sp)
20403584:	d646                	sw	a7,44(sp)
20403586:	d472                	sw	t3,40(sp)
20403588:	d276                	sw	t4,36(sp)
2040358a:	d07a                	sw	t5,32(sp)
2040358c:	ce7e                	sw	t6,28(sp)
2040358e:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20403590:	bc4ff0ef          	jal	ra,20402954 <__metal_myhart_id>
20403594:	872a                	mv	a4,a0
20403596:	800007b7          	lui	a5,0x80000
2040359a:	070a                	slli	a4,a4,0x2
2040359c:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204035a0:	97ba                	add	a5,a5,a4
204035a2:	439c                	lw	a5,0(a5)
204035a4:	faf42623          	sw	a5,-84(s0)
204035a8:	fac42783          	lw	a5,-84(s0)
204035ac:	c78d                	beqz	a5,204035d6 <metal_lc11_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
204035ae:	fac42503          	lw	a0,-84(s0)
204035b2:	b24ff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
204035b6:	faa42423          	sw	a0,-88(s0)
204035ba:	fa842783          	lw	a5,-88(s0)
204035be:	3207a783          	lw	a5,800(a5)
204035c2:	faf42223          	sw	a5,-92(s0)
204035c6:	fa842783          	lw	a5,-88(s0)
204035ca:	3187a783          	lw	a5,792(a5)
204035ce:	fa442583          	lw	a1,-92(s0)
204035d2:	456d                	li	a0,27
204035d4:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:273
}
204035d6:	0001                	nop
204035d8:	40f6                	lw	ra,92(sp)
204035da:	42e6                	lw	t0,88(sp)
204035dc:	4356                	lw	t1,84(sp)
204035de:	43c6                	lw	t2,80(sp)
204035e0:	4436                	lw	s0,76(sp)
204035e2:	4526                	lw	a0,72(sp)
204035e4:	4596                	lw	a1,68(sp)
204035e6:	4606                	lw	a2,64(sp)
204035e8:	56f2                	lw	a3,60(sp)
204035ea:	5762                	lw	a4,56(sp)
204035ec:	57d2                	lw	a5,52(sp)
204035ee:	5842                	lw	a6,48(sp)
204035f0:	58b2                	lw	a7,44(sp)
204035f2:	5e22                	lw	t3,40(sp)
204035f4:	5e92                	lw	t4,36(sp)
204035f6:	5f02                	lw	t5,32(sp)
204035f8:	4ff2                	lw	t6,28(sp)
204035fa:	6125                	addi	sp,sp,96
204035fc:	30200073          	mret

20403600 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20403600:	711d                	addi	sp,sp,-96
20403602:	ce86                	sw	ra,92(sp)
20403604:	cc96                	sw	t0,88(sp)
20403606:	ca9a                	sw	t1,84(sp)
20403608:	c89e                	sw	t2,80(sp)
2040360a:	c6a2                	sw	s0,76(sp)
2040360c:	c4aa                	sw	a0,72(sp)
2040360e:	c2ae                	sw	a1,68(sp)
20403610:	c0b2                	sw	a2,64(sp)
20403612:	de36                	sw	a3,60(sp)
20403614:	dc3a                	sw	a4,56(sp)
20403616:	da3e                	sw	a5,52(sp)
20403618:	d842                	sw	a6,48(sp)
2040361a:	d646                	sw	a7,44(sp)
2040361c:	d472                	sw	t3,40(sp)
2040361e:	d276                	sw	t4,36(sp)
20403620:	d07a                	sw	t5,32(sp)
20403622:	ce7e                	sw	t6,28(sp)
20403624:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20403626:	b2eff0ef          	jal	ra,20402954 <__metal_myhart_id>
2040362a:	872a                	mv	a4,a0
2040362c:	800007b7          	lui	a5,0x80000
20403630:	070a                	slli	a4,a4,0x2
20403632:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403636:	97ba                	add	a5,a5,a4
20403638:	439c                	lw	a5,0(a5)
2040363a:	faf42623          	sw	a5,-84(s0)
2040363e:	fac42783          	lw	a5,-84(s0)
20403642:	c78d                	beqz	a5,2040366c <metal_lc12_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20403644:	fac42503          	lw	a0,-84(s0)
20403648:	a8eff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
2040364c:	faa42423          	sw	a0,-88(s0)
20403650:	fa842783          	lw	a5,-88(s0)
20403654:	3387a783          	lw	a5,824(a5)
20403658:	faf42223          	sw	a5,-92(s0)
2040365c:	fa842783          	lw	a5,-88(s0)
20403660:	3307a783          	lw	a5,816(a5)
20403664:	fa442583          	lw	a1,-92(s0)
20403668:	4571                	li	a0,28
2040366a:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:279
}
2040366c:	0001                	nop
2040366e:	40f6                	lw	ra,92(sp)
20403670:	42e6                	lw	t0,88(sp)
20403672:	4356                	lw	t1,84(sp)
20403674:	43c6                	lw	t2,80(sp)
20403676:	4436                	lw	s0,76(sp)
20403678:	4526                	lw	a0,72(sp)
2040367a:	4596                	lw	a1,68(sp)
2040367c:	4606                	lw	a2,64(sp)
2040367e:	56f2                	lw	a3,60(sp)
20403680:	5762                	lw	a4,56(sp)
20403682:	57d2                	lw	a5,52(sp)
20403684:	5842                	lw	a6,48(sp)
20403686:	58b2                	lw	a7,44(sp)
20403688:	5e22                	lw	t3,40(sp)
2040368a:	5e92                	lw	t4,36(sp)
2040368c:	5f02                	lw	t5,32(sp)
2040368e:	4ff2                	lw	t6,28(sp)
20403690:	6125                	addi	sp,sp,96
20403692:	30200073          	mret

20403696 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20403696:	711d                	addi	sp,sp,-96
20403698:	ce86                	sw	ra,92(sp)
2040369a:	cc96                	sw	t0,88(sp)
2040369c:	ca9a                	sw	t1,84(sp)
2040369e:	c89e                	sw	t2,80(sp)
204036a0:	c6a2                	sw	s0,76(sp)
204036a2:	c4aa                	sw	a0,72(sp)
204036a4:	c2ae                	sw	a1,68(sp)
204036a6:	c0b2                	sw	a2,64(sp)
204036a8:	de36                	sw	a3,60(sp)
204036aa:	dc3a                	sw	a4,56(sp)
204036ac:	da3e                	sw	a5,52(sp)
204036ae:	d842                	sw	a6,48(sp)
204036b0:	d646                	sw	a7,44(sp)
204036b2:	d472                	sw	t3,40(sp)
204036b4:	d276                	sw	t4,36(sp)
204036b6:	d07a                	sw	t5,32(sp)
204036b8:	ce7e                	sw	t6,28(sp)
204036ba:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
204036bc:	a98ff0ef          	jal	ra,20402954 <__metal_myhart_id>
204036c0:	872a                	mv	a4,a0
204036c2:	800007b7          	lui	a5,0x80000
204036c6:	070a                	slli	a4,a4,0x2
204036c8:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204036cc:	97ba                	add	a5,a5,a4
204036ce:	439c                	lw	a5,0(a5)
204036d0:	faf42623          	sw	a5,-84(s0)
204036d4:	fac42783          	lw	a5,-84(s0)
204036d8:	c78d                	beqz	a5,20403702 <metal_lc13_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
204036da:	fac42503          	lw	a0,-84(s0)
204036de:	9f8ff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
204036e2:	faa42423          	sw	a0,-88(s0)
204036e6:	fa842783          	lw	a5,-88(s0)
204036ea:	3507a783          	lw	a5,848(a5)
204036ee:	faf42223          	sw	a5,-92(s0)
204036f2:	fa842783          	lw	a5,-88(s0)
204036f6:	3487a783          	lw	a5,840(a5)
204036fa:	fa442583          	lw	a1,-92(s0)
204036fe:	4575                	li	a0,29
20403700:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:285
}
20403702:	0001                	nop
20403704:	40f6                	lw	ra,92(sp)
20403706:	42e6                	lw	t0,88(sp)
20403708:	4356                	lw	t1,84(sp)
2040370a:	43c6                	lw	t2,80(sp)
2040370c:	4436                	lw	s0,76(sp)
2040370e:	4526                	lw	a0,72(sp)
20403710:	4596                	lw	a1,68(sp)
20403712:	4606                	lw	a2,64(sp)
20403714:	56f2                	lw	a3,60(sp)
20403716:	5762                	lw	a4,56(sp)
20403718:	57d2                	lw	a5,52(sp)
2040371a:	5842                	lw	a6,48(sp)
2040371c:	58b2                	lw	a7,44(sp)
2040371e:	5e22                	lw	t3,40(sp)
20403720:	5e92                	lw	t4,36(sp)
20403722:	5f02                	lw	t5,32(sp)
20403724:	4ff2                	lw	t6,28(sp)
20403726:	6125                	addi	sp,sp,96
20403728:	30200073          	mret

2040372c <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
2040372c:	711d                	addi	sp,sp,-96
2040372e:	ce86                	sw	ra,92(sp)
20403730:	cc96                	sw	t0,88(sp)
20403732:	ca9a                	sw	t1,84(sp)
20403734:	c89e                	sw	t2,80(sp)
20403736:	c6a2                	sw	s0,76(sp)
20403738:	c4aa                	sw	a0,72(sp)
2040373a:	c2ae                	sw	a1,68(sp)
2040373c:	c0b2                	sw	a2,64(sp)
2040373e:	de36                	sw	a3,60(sp)
20403740:	dc3a                	sw	a4,56(sp)
20403742:	da3e                	sw	a5,52(sp)
20403744:	d842                	sw	a6,48(sp)
20403746:	d646                	sw	a7,44(sp)
20403748:	d472                	sw	t3,40(sp)
2040374a:	d276                	sw	t4,36(sp)
2040374c:	d07a                	sw	t5,32(sp)
2040374e:	ce7e                	sw	t6,28(sp)
20403750:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20403752:	a02ff0ef          	jal	ra,20402954 <__metal_myhart_id>
20403756:	872a                	mv	a4,a0
20403758:	800007b7          	lui	a5,0x80000
2040375c:	070a                	slli	a4,a4,0x2
2040375e:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
20403762:	97ba                	add	a5,a5,a4
20403764:	439c                	lw	a5,0(a5)
20403766:	faf42623          	sw	a5,-84(s0)
2040376a:	fac42783          	lw	a5,-84(s0)
2040376e:	c78d                	beqz	a5,20403798 <metal_lc14_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20403770:	fac42503          	lw	a0,-84(s0)
20403774:	962ff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
20403778:	faa42423          	sw	a0,-88(s0)
2040377c:	fa842783          	lw	a5,-88(s0)
20403780:	3687a783          	lw	a5,872(a5)
20403784:	faf42223          	sw	a5,-92(s0)
20403788:	fa842783          	lw	a5,-88(s0)
2040378c:	3607a783          	lw	a5,864(a5)
20403790:	fa442583          	lw	a1,-92(s0)
20403794:	4579                	li	a0,30
20403796:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:291
}
20403798:	0001                	nop
2040379a:	40f6                	lw	ra,92(sp)
2040379c:	42e6                	lw	t0,88(sp)
2040379e:	4356                	lw	t1,84(sp)
204037a0:	43c6                	lw	t2,80(sp)
204037a2:	4436                	lw	s0,76(sp)
204037a4:	4526                	lw	a0,72(sp)
204037a6:	4596                	lw	a1,68(sp)
204037a8:	4606                	lw	a2,64(sp)
204037aa:	56f2                	lw	a3,60(sp)
204037ac:	5762                	lw	a4,56(sp)
204037ae:	57d2                	lw	a5,52(sp)
204037b0:	5842                	lw	a6,48(sp)
204037b2:	58b2                	lw	a7,44(sp)
204037b4:	5e22                	lw	t3,40(sp)
204037b6:	5e92                	lw	t4,36(sp)
204037b8:	5f02                	lw	t5,32(sp)
204037ba:	4ff2                	lw	t6,28(sp)
204037bc:	6125                	addi	sp,sp,96
204037be:	30200073          	mret

204037c2 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
204037c2:	711d                	addi	sp,sp,-96
204037c4:	ce86                	sw	ra,92(sp)
204037c6:	cc96                	sw	t0,88(sp)
204037c8:	ca9a                	sw	t1,84(sp)
204037ca:	c89e                	sw	t2,80(sp)
204037cc:	c6a2                	sw	s0,76(sp)
204037ce:	c4aa                	sw	a0,72(sp)
204037d0:	c2ae                	sw	a1,68(sp)
204037d2:	c0b2                	sw	a2,64(sp)
204037d4:	de36                	sw	a3,60(sp)
204037d6:	dc3a                	sw	a4,56(sp)
204037d8:	da3e                	sw	a5,52(sp)
204037da:	d842                	sw	a6,48(sp)
204037dc:	d646                	sw	a7,44(sp)
204037de:	d472                	sw	t3,40(sp)
204037e0:	d276                	sw	t4,36(sp)
204037e2:	d07a                	sw	t5,32(sp)
204037e4:	ce7e                	sw	t6,28(sp)
204037e6:	1080                	addi	s0,sp,96
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
204037e8:	96cff0ef          	jal	ra,20402954 <__metal_myhart_id>
204037ec:	872a                	mv	a4,a0
204037ee:	800007b7          	lui	a5,0x80000
204037f2:	070a                	slli	a4,a4,0x2
204037f4:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204037f8:	97ba                	add	a5,a5,a4
204037fa:	439c                	lw	a5,0(a5)
204037fc:	faf42623          	sw	a5,-84(s0)
20403800:	fac42783          	lw	a5,-84(s0)
20403804:	c78d                	beqz	a5,2040382e <metal_lc15_interrupt_vector_handler+0x6c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20403806:	fac42503          	lw	a0,-84(s0)
2040380a:	8ccff0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
2040380e:	faa42423          	sw	a0,-88(s0)
20403812:	fa842783          	lw	a5,-88(s0)
20403816:	3807a783          	lw	a5,896(a5)
2040381a:	faf42223          	sw	a5,-92(s0)
2040381e:	fa842783          	lw	a5,-88(s0)
20403822:	3787a783          	lw	a5,888(a5)
20403826:	fa442583          	lw	a1,-92(s0)
2040382a:	457d                	li	a0,31
2040382c:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:297
}
2040382e:	0001                	nop
20403830:	40f6                	lw	ra,92(sp)
20403832:	42e6                	lw	t0,88(sp)
20403834:	4356                	lw	t1,84(sp)
20403836:	43c6                	lw	t2,80(sp)
20403838:	4436                	lw	s0,76(sp)
2040383a:	4526                	lw	a0,72(sp)
2040383c:	4596                	lw	a1,68(sp)
2040383e:	4606                	lw	a2,64(sp)
20403840:	56f2                	lw	a3,60(sp)
20403842:	5762                	lw	a4,56(sp)
20403844:	57d2                	lw	a5,52(sp)
20403846:	5842                	lw	a6,48(sp)
20403848:	58b2                	lw	a7,44(sp)
2040384a:	5e22                	lw	t3,40(sp)
2040384c:	5e92                	lw	t4,36(sp)
2040384e:	5f02                	lw	t5,32(sp)
20403850:	4ff2                	lw	t6,28(sp)
20403852:	6125                	addi	sp,sp,96
20403854:	30200073          	mret

20403858 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
20403858:	1101                	addi	sp,sp,-32
2040385a:	ce22                	sw	s0,28(sp)
2040385c:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
2040385e:	305027f3          	csrr	a5,mtvec
20403862:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20403866:	fec42783          	lw	a5,-20(s0)
2040386a:	03f7f793          	andi	a5,a5,63
2040386e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20403872:	fec42703          	lw	a4,-20(s0)
20403876:	478d                	li	a5,3
20403878:	02f70363          	beq	a4,a5,2040389e <__metal_controller_interrupt_vector_mode+0x46>
2040387c:	fec42703          	lw	a4,-20(s0)
20403880:	478d                	li	a5,3
20403882:	02e7e263          	bltu	a5,a4,204038a6 <__metal_controller_interrupt_vector_mode+0x4e>
20403886:	fec42703          	lw	a4,-20(s0)
2040388a:	4785                	li	a5,1
2040388c:	00f70b63          	beq	a4,a5,204038a2 <__metal_controller_interrupt_vector_mode+0x4a>
20403890:	fec42703          	lw	a4,-20(s0)
20403894:	4789                	li	a5,2
20403896:	00f71863          	bne	a4,a5,204038a6 <__metal_controller_interrupt_vector_mode+0x4e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
2040389a:	478d                	li	a5,3
2040389c:	a031                	j	204038a8 <__metal_controller_interrupt_vector_mode+0x50>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
2040389e:	4791                	li	a5,4
204038a0:	a021                	j	204038a8 <__metal_controller_interrupt_vector_mode+0x50>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
204038a2:	4785                	li	a5,1
204038a4:	a011                	j	204038a8 <__metal_controller_interrupt_vector_mode+0x50>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
204038a6:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:314
}
204038a8:	853e                	mv	a0,a5
204038aa:	4472                	lw	s0,28(sp)
204038ac:	6105                	addi	sp,sp,32
204038ae:	8082                	ret

204038b0 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
204038b0:	7179                	addi	sp,sp,-48
204038b2:	d622                	sw	s0,44(sp)
204038b4:	1800                	addi	s0,sp,48
204038b6:	fca42e23          	sw	a0,-36(s0)
204038ba:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
204038be:	305027f3          	csrr	a5,mtvec
204038c2:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
204038c6:	fec42783          	lw	a5,-20(s0)
204038ca:	fc07f793          	andi	a5,a5,-64
204038ce:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
204038d2:	fd842783          	lw	a5,-40(s0)
204038d6:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
204038da:	fdc42703          	lw	a4,-36(s0)
204038de:	4791                	li	a5,4
204038e0:	04f70563          	beq	a4,a5,2040392a <__metal_controller_interrupt_vector+0x7a>
204038e4:	fdc42703          	lw	a4,-36(s0)
204038e8:	4791                	li	a5,4
204038ea:	06e7e863          	bltu	a5,a4,2040395a <__metal_controller_interrupt_vector+0xaa>
204038ee:	fdc42703          	lw	a4,-36(s0)
204038f2:	478d                	li	a5,3
204038f4:	06e7e363          	bltu	a5,a4,2040395a <__metal_controller_interrupt_vector+0xaa>
204038f8:	fdc42703          	lw	a4,-36(s0)
204038fc:	4789                	li	a5,2
204038fe:	00f77b63          	bgeu	a4,a5,20403914 <__metal_controller_interrupt_vector+0x64>
20403902:	fdc42783          	lw	a5,-36(s0)
20403906:	c7a1                	beqz	a5,2040394e <__metal_controller_interrupt_vector+0x9e>
20403908:	fdc42703          	lw	a4,-36(s0)
2040390c:	4785                	li	a5,1
2040390e:	02f70963          	beq	a4,a5,20403940 <__metal_controller_interrupt_vector+0x90>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20403912:	a0a1                	j	2040395a <__metal_controller_interrupt_vector+0xaa>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20403914:	fe842783          	lw	a5,-24(s0)
20403918:	30779073          	csrw	mtvt,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
2040391c:	fec42783          	lw	a5,-20(s0)
20403920:	0027e793          	ori	a5,a5,2
20403924:	30579073          	csrw	mtvec,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
20403928:	a80d                	j	2040395a <__metal_controller_interrupt_vector+0xaa>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
2040392a:	fe842783          	lw	a5,-24(s0)
2040392e:	30779073          	csrw	mtvt,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20403932:	fec42783          	lw	a5,-20(s0)
20403936:	0037e793          	ori	a5,a5,3
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
2040393a:	30579073          	csrw	mtvec,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
2040393e:	a831                	j	2040395a <__metal_controller_interrupt_vector+0xaa>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20403940:	fe842783          	lw	a5,-24(s0)
20403944:	0017e793          	ori	a5,a5,1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
20403948:	30579073          	csrw	mtvec,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
2040394c:	a039                	j	2040395a <__metal_controller_interrupt_vector+0xaa>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
2040394e:	fe842783          	lw	a5,-24(s0)
20403952:	9bf1                	andi	a5,a5,-4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20403954:	30579073          	csrw	mtvec,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
20403958:	0001                	nop
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:344
}
2040395a:	0001                	nop
2040395c:	5432                	lw	s0,44(sp)
2040395e:	6145                	addi	sp,sp,48
20403960:	8082                	ret

20403962 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20403962:	1101                	addi	sp,sp,-32
20403964:	ce22                	sw	s0,28(sp)
20403966:	1000                	addi	s0,sp,32
20403968:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
2040396c:	fec42703          	lw	a4,-20(s0)
20403970:	47fd                	li	a5,31
20403972:	02e7c663          	blt	a5,a4,2040399e <__metal_valid_interrupt_id+0x3c>
20403976:	fec42703          	lw	a4,-20(s0)
2040397a:	478d                	li	a5,3
2040397c:	02f74963          	blt	a4,a5,204039ae <__metal_valid_interrupt_id+0x4c>
20403980:	fec42783          	lw	a5,-20(s0)
20403984:	4705                	li	a4,1
20403986:	00f71733          	sll	a4,a4,a5
2040398a:	77c5                	lui	a5,0xffff1
2040398c:	88878793          	addi	a5,a5,-1912 # ffff0888 <metal_segment_heap_target_end+0x7ffef418>
20403990:	8ff9                	and	a5,a5,a4
20403992:	00f037b3          	snez	a5,a5
20403996:	0ff7f793          	zext.b	a5,a5
2040399a:	eb81                	bnez	a5,204039aa <__metal_valid_interrupt_id+0x48>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
2040399c:	a809                	j	204039ae <__metal_valid_interrupt_id+0x4c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
2040399e:	fec42703          	lw	a4,-20(s0)
204039a2:	08000793          	li	a5,128
204039a6:	00f71463          	bne	a4,a5,204039ae <__metal_valid_interrupt_id+0x4c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
204039aa:	4785                	li	a5,1
204039ac:	a019                	j	204039b2 <__metal_valid_interrupt_id+0x50>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
204039ae:	0001                	nop
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
204039b0:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:374
}
204039b2:	853e                	mv	a0,a5
204039b4:	4472                	lw	s0,28(sp)
204039b6:	6105                	addi	sp,sp,32
204039b8:	8082                	ret

204039ba <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
204039ba:	7179                	addi	sp,sp,-48
204039bc:	d606                	sw	ra,44(sp)
204039be:	d422                	sw	s0,40(sp)
204039c0:	1800                	addi	s0,sp,48
204039c2:	fca42e23          	sw	a0,-36(s0)
204039c6:	fcb42c23          	sw	a1,-40(s0)
204039ca:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
204039ce:	fe042623          	sw	zero,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
204039d2:	fdc42783          	lw	a5,-36(s0)
204039d6:	e399                	bnez	a5,204039dc <__metal_local_interrupt_enable+0x22>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
204039d8:	57fd                	li	a5,-1
204039da:	a849                	j	20403a6c <__metal_local_interrupt_enable+0xb2>
204039dc:	fd842703          	lw	a4,-40(s0)
204039e0:	47fd                	li	a5,31
204039e2:	08e7e063          	bltu	a5,a4,20403a62 <__metal_local_interrupt_enable+0xa8>
204039e6:	fd842783          	lw	a5,-40(s0)
204039ea:	00279713          	slli	a4,a5,0x2
204039ee:	204007b7          	lui	a5,0x20400
204039f2:	46078793          	addi	a5,a5,1120 # 20400460 <__metal_driver_vtable_riscv_clint0+0x64>
204039f6:	97ba                	add	a5,a5,a4
204039f8:	439c                	lw	a5,0(a5)
204039fa:	8782                	jr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:386
    }

    switch (id) {
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
204039fc:	fd442783          	lw	a5,-44(s0)
20403a00:	c781                	beqz	a5,20403a08 <__metal_local_interrupt_enable+0x4e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20403a02:	f6dfe0ef          	jal	ra,2040296e <__metal_interrupt_global_enable>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20403a06:	a08d                	j	20403a68 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20403a08:	f7ffe0ef          	jal	ra,20402986 <__metal_interrupt_global_disable>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20403a0c:	a8b1                	j	20403a68 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20403a0e:	fd442783          	lw	a5,-44(s0)
20403a12:	c781                	beqz	a5,20403a1a <__metal_local_interrupt_enable+0x60>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20403a14:	f8bfe0ef          	jal	ra,2040299e <__metal_interrupt_software_enable>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20403a18:	a881                	j	20403a68 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20403a1a:	f9dfe0ef          	jal	ra,204029b6 <__metal_interrupt_software_disable>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20403a1e:	a0a9                	j	20403a68 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20403a20:	fd442783          	lw	a5,-44(s0)
20403a24:	c781                	beqz	a5,20403a2c <__metal_local_interrupt_enable+0x72>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20403a26:	fa9fe0ef          	jal	ra,204029ce <__metal_interrupt_timer_enable>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
20403a2a:	a83d                	j	20403a68 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
20403a2c:	fbdfe0ef          	jal	ra,204029e8 <__metal_interrupt_timer_disable>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20403a30:	a825                	j	20403a68 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20403a32:	fd442783          	lw	a5,-44(s0)
20403a36:	c781                	beqz	a5,20403a3e <__metal_local_interrupt_enable+0x84>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20403a38:	fcbfe0ef          	jal	ra,20402a02 <__metal_interrupt_external_enable>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20403a3c:	a035                	j	20403a68 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20403a3e:	fe1fe0ef          	jal	ra,20402a1e <__metal_interrupt_external_disable>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20403a42:	a01d                	j	20403a68 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20403a44:	fd442783          	lw	a5,-44(s0)
20403a48:	c799                	beqz	a5,20403a56 <__metal_local_interrupt_enable+0x9c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
20403a4a:	fd842783          	lw	a5,-40(s0)
20403a4e:	853e                	mv	a0,a5
20403a50:	febfe0ef          	jal	ra,20402a3a <__metal_interrupt_local_enable>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20403a54:	a811                	j	20403a68 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20403a56:	fd842783          	lw	a5,-40(s0)
20403a5a:	853e                	mv	a0,a5
20403a5c:	80aff0ef          	jal	ra,20402a66 <__metal_interrupt_local_disable>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20403a60:	a021                	j	20403a68 <__metal_local_interrupt_enable+0xae>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20403a62:	57fd                	li	a5,-1
20403a64:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20403a68:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:439
}
20403a6c:	853e                	mv	a0,a5
20403a6e:	50b2                	lw	ra,44(sp)
20403a70:	5422                	lw	s0,40(sp)
20403a72:	6145                	addi	sp,sp,48
20403a74:	8082                	ret

20403a76 <__metal_exception_register>:
__metal_exception_register():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20403a76:	7179                	addi	sp,sp,-48
20403a78:	d622                	sw	s0,44(sp)
20403a7a:	1800                	addi	s0,sp,48
20403a7c:	fca42e23          	sw	a0,-36(s0)
20403a80:	fcb42c23          	sw	a1,-40(s0)
20403a84:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20403a88:	fdc42783          	lw	a5,-36(s0)
20403a8c:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20403a90:	fd842703          	lw	a4,-40(s0)
20403a94:	47ad                	li	a5,11
20403a96:	02e7c263          	blt	a5,a4,20403aba <__metal_exception_register+0x44>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20403a9a:	fd442783          	lw	a5,-44(s0)
20403a9e:	cf91                	beqz	a5,20403aba <__metal_exception_register+0x44>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20403aa0:	fec42703          	lw	a4,-20(s0)
20403aa4:	fd842783          	lw	a5,-40(s0)
20403aa8:	0e878793          	addi	a5,a5,232
20403aac:	078a                	slli	a5,a5,0x2
20403aae:	97ba                	add	a5,a5,a4
20403ab0:	fd442703          	lw	a4,-44(s0)
20403ab4:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20403ab6:	4781                	li	a5,0
20403ab8:	a011                	j	20403abc <__metal_exception_register+0x46>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20403aba:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:450
}
20403abc:	853e                	mv	a0,a5
20403abe:	5432                	lw	s0,44(sp)
20403ac0:	6145                	addi	sp,sp,48
20403ac2:	8082                	ret

20403ac4 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20403ac4:	7179                	addi	sp,sp,-48
20403ac6:	d606                	sw	ra,44(sp)
20403ac8:	d422                	sw	s0,40(sp)
20403aca:	1800                	addi	s0,sp,48
20403acc:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20403ad0:	fdc42783          	lw	a5,-36(s0)
20403ad4:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20403ad8:	fe442783          	lw	a5,-28(s0)
20403adc:	43dc                	lw	a5,4(a5)
20403ade:	efdd                	bnez	a5,20403b9c <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20403ae0:	fe042623          	sw	zero,-20(s0)
20403ae4:	a0b9                	j	20403b32 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20403ae6:	fe442683          	lw	a3,-28(s0)
20403aea:	fec42703          	lw	a4,-20(s0)
20403aee:	87ba                	mv	a5,a4
20403af0:	0786                	slli	a5,a5,0x1
20403af2:	97ba                	add	a5,a5,a4
20403af4:	078e                	slli	a5,a5,0x3
20403af6:	97b6                	add	a5,a5,a3
20403af8:	0807a823          	sw	zero,144(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20403afc:	fe442683          	lw	a3,-28(s0)
20403b00:	fec42703          	lw	a4,-20(s0)
20403b04:	87ba                	mv	a5,a4
20403b06:	0786                	slli	a5,a5,0x1
20403b08:	97ba                	add	a5,a5,a4
20403b0a:	078e                	slli	a5,a5,0x3
20403b0c:	97b6                	add	a5,a5,a3
20403b0e:	0807aa23          	sw	zero,148(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20403b12:	fe442683          	lw	a3,-28(s0)
20403b16:	fec42703          	lw	a4,-20(s0)
20403b1a:	87ba                	mv	a5,a4
20403b1c:	0786                	slli	a5,a5,0x1
20403b1e:	97ba                	add	a5,a5,a4
20403b20:	078e                	slli	a5,a5,0x3
20403b22:	97b6                	add	a5,a5,a3
20403b24:	0807ac23          	sw	zero,152(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20403b28:	fec42783          	lw	a5,-20(s0)
20403b2c:	0785                	addi	a5,a5,1
20403b2e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20403b32:	fec42703          	lw	a4,-20(s0)
20403b36:	47fd                	li	a5,31
20403b38:	fae7d7e3          	bge	a5,a4,20403ae6 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
20403b3c:	fe042423          	sw	zero,-24(s0)
20403b40:	a01d                	j	20403b66 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20403b42:	fe442703          	lw	a4,-28(s0)
20403b46:	fe842783          	lw	a5,-24(s0)
20403b4a:	0e878793          	addi	a5,a5,232
20403b4e:	078a                	slli	a5,a5,0x2
20403b50:	97ba                	add	a5,a5,a4
20403b52:	20403737          	lui	a4,0x20403
20403b56:	a9270713          	addi	a4,a4,-1390 # 20402a92 <__metal_default_exception_handler>
20403b5a:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
20403b5c:	fe842783          	lw	a5,-24(s0)
20403b60:	0785                	addi	a5,a5,1
20403b62:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20403b66:	fe842703          	lw	a4,-24(s0)
20403b6a:	47ad                	li	a5,11
20403b6c:	fce7dbe3          	bge	a5,a4,20403b42 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20403b70:	305027f3          	csrr	a5,mtvec
20403b74:	fef42023          	sw	a5,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20403b78:	204007b7          	lui	a5,0x20400
20403b7c:	13478793          	addi	a5,a5,308 # 20400134 <early_trap_vector>
20403b80:	fe042703          	lw	a4,-32(s0)
20403b84:	00f71863          	bne	a4,a5,20403b94 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20403b88:	204037b7          	lui	a5,0x20403
20403b8c:	d0078593          	addi	a1,a5,-768 # 20402d00 <__metal_exception_handler>
20403b90:	4501                	li	a0,0
20403b92:	3b39                	jal	204038b0 <__metal_controller_interrupt_vector>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20403b94:	fe442783          	lw	a5,-28(s0)
20403b98:	4705                	li	a4,1
20403b9a:	c3d8                	sw	a4,4(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20403b9c:	0001                	nop
20403b9e:	50b2                	lw	ra,44(sp)
20403ba0:	5422                	lw	s0,40(sp)
20403ba2:	6145                	addi	sp,sp,48
20403ba4:	8082                	ret

20403ba6 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20403ba6:	7179                	addi	sp,sp,-48
20403ba8:	d606                	sw	ra,44(sp)
20403baa:	d422                	sw	s0,40(sp)
20403bac:	1800                	addi	s0,sp,48
20403bae:	fca42e23          	sw	a0,-36(s0)
20403bb2:	fcb42c23          	sw	a1,-40(s0)
20403bb6:	fcc42a23          	sw	a2,-44(s0)
20403bba:	fcd42823          	sw	a3,-48(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20403bbe:	fe042623          	sw	zero,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20403bc2:	fdc42783          	lw	a5,-36(s0)
20403bc6:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20403bca:	fd842503          	lw	a0,-40(s0)
20403bce:	3b51                	jal	20403962 <__metal_valid_interrupt_id>
20403bd0:	87aa                	mv	a5,a0
20403bd2:	e399                	bnez	a5,20403bd8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20403bd4:	57d5                	li	a5,-11
20403bd6:	a25d                	j	20403d7c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20403bd8:	fd842703          	lw	a4,-40(s0)
20403bdc:	08000793          	li	a5,128
20403be0:	00f71763          	bne	a4,a5,20403bee <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20403be4:	3995                	jal	20403858 <__metal_controller_interrupt_vector_mode>
20403be6:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20403be8:	c399                	beqz	a5,20403bee <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20403bea:	57cd                	li	a5,-13
20403bec:	aa41                	j	20403d7c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20403bee:	fd442783          	lw	a5,-44(s0)
20403bf2:	cfb9                	beqz	a5,20403c50 <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
20403bf4:	fd842703          	lw	a4,-40(s0)
20403bf8:	08000793          	li	a5,128
20403bfc:	00f71f63          	bne	a4,a5,20403c1a <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20403c00:	fe842783          	lw	a5,-24(s0)
20403c04:	fd442703          	lw	a4,-44(s0)
20403c08:	38e7a823          	sw	a4,912(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20403c0c:	fe842783          	lw	a5,-24(s0)
20403c10:	fd042703          	lw	a4,-48(s0)
20403c14:	38e7ac23          	sw	a4,920(a5)
20403c18:	a285                	j	20403d78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20403c1a:	fe842683          	lw	a3,-24(s0)
20403c1e:	fd842703          	lw	a4,-40(s0)
20403c22:	87ba                	mv	a5,a4
20403c24:	0786                	slli	a5,a5,0x1
20403c26:	97ba                	add	a5,a5,a4
20403c28:	078e                	slli	a5,a5,0x3
20403c2a:	97b6                	add	a5,a5,a3
20403c2c:	fd442703          	lw	a4,-44(s0)
20403c30:	08e7a823          	sw	a4,144(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20403c34:	fe842683          	lw	a3,-24(s0)
20403c38:	fd842703          	lw	a4,-40(s0)
20403c3c:	87ba                	mv	a5,a4
20403c3e:	0786                	slli	a5,a5,0x1
20403c40:	97ba                	add	a5,a5,a4
20403c42:	078e                	slli	a5,a5,0x3
20403c44:	97b6                	add	a5,a5,a3
20403c46:	fd042703          	lw	a4,-48(s0)
20403c4a:	08e7ac23          	sw	a4,152(a5)
20403c4e:	a22d                	j	20403d78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20403c50:	fd842703          	lw	a4,-40(s0)
20403c54:	08000793          	li	a5,128
20403c58:	0cf70163          	beq	a4,a5,20403d1a <__metal_driver_riscv_cpu_controller_interrupt_register+0x174>
20403c5c:	fd842703          	lw	a4,-40(s0)
20403c60:	08000793          	li	a5,128
20403c64:	10e7c763          	blt	a5,a4,20403d72 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20403c68:	fd842703          	lw	a4,-40(s0)
20403c6c:	47fd                	li	a5,31
20403c6e:	10e7c263          	blt	a5,a4,20403d72 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20403c72:	fd842703          	lw	a4,-40(s0)
20403c76:	47c1                	li	a5,16
20403c78:	0cf75063          	bge	a4,a5,20403d38 <__metal_driver_riscv_cpu_controller_interrupt_register+0x192>
20403c7c:	fd842703          	lw	a4,-40(s0)
20403c80:	47ad                	li	a5,11
20403c82:	0af70b63          	beq	a4,a5,20403d38 <__metal_driver_riscv_cpu_controller_interrupt_register+0x192>
20403c86:	fd842703          	lw	a4,-40(s0)
20403c8a:	47ad                	li	a5,11
20403c8c:	0ee7c363          	blt	a5,a4,20403d72 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20403c90:	fd842703          	lw	a4,-40(s0)
20403c94:	478d                	li	a5,3
20403c96:	00f70863          	beq	a4,a5,20403ca6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x100>
20403c9a:	fd842703          	lw	a4,-40(s0)
20403c9e:	479d                	li	a5,7
20403ca0:	04f70063          	beq	a4,a5,20403ce0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
20403ca4:	a0f9                	j	20403d72 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20403ca6:	fe842683          	lw	a3,-24(s0)
20403caa:	fd842703          	lw	a4,-40(s0)
20403cae:	87ba                	mv	a5,a4
20403cb0:	0786                	slli	a5,a5,0x1
20403cb2:	97ba                	add	a5,a5,a4
20403cb4:	078e                	slli	a5,a5,0x3
20403cb6:	97b6                	add	a5,a5,a3
20403cb8:	20403737          	lui	a4,0x20403
20403cbc:	b8270713          	addi	a4,a4,-1150 # 20402b82 <__metal_default_sw_handler>
20403cc0:	08e7a823          	sw	a4,144(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20403cc4:	fe842683          	lw	a3,-24(s0)
20403cc8:	fd842703          	lw	a4,-40(s0)
20403ccc:	87ba                	mv	a5,a4
20403cce:	0786                	slli	a5,a5,0x1
20403cd0:	97ba                	add	a5,a5,a4
20403cd2:	078e                	slli	a5,a5,0x3
20403cd4:	97b6                	add	a5,a5,a3
20403cd6:	fd042703          	lw	a4,-48(s0)
20403cda:	08e7aa23          	sw	a4,148(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20403cde:	a869                	j	20403d78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20403ce0:	fe842683          	lw	a3,-24(s0)
20403ce4:	fd842703          	lw	a4,-40(s0)
20403ce8:	87ba                	mv	a5,a4
20403cea:	0786                	slli	a5,a5,0x1
20403cec:	97ba                	add	a5,a5,a4
20403cee:	078e                	slli	a5,a5,0x3
20403cf0:	97b6                	add	a5,a5,a3
20403cf2:	20403737          	lui	a4,0x20403
20403cf6:	c9270713          	addi	a4,a4,-878 # 20402c92 <__metal_default_timer_handler>
20403cfa:	08e7a823          	sw	a4,144(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20403cfe:	fe842683          	lw	a3,-24(s0)
20403d02:	fd842703          	lw	a4,-40(s0)
20403d06:	87ba                	mv	a5,a4
20403d08:	0786                	slli	a5,a5,0x1
20403d0a:	97ba                	add	a5,a5,a4
20403d0c:	078e                	slli	a5,a5,0x3
20403d0e:	97b6                	add	a5,a5,a3
20403d10:	fd042703          	lw	a4,-48(s0)
20403d14:	08e7aa23          	sw	a4,148(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20403d18:	a085                	j	20403d78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20403d1a:	fe842783          	lw	a5,-24(s0)
20403d1e:	20403737          	lui	a4,0x20403
20403d22:	c7c70713          	addi	a4,a4,-900 # 20402c7c <__metal_default_beu_handler>
20403d26:	38e7a823          	sw	a4,912(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20403d2a:	fe842783          	lw	a5,-24(s0)
20403d2e:	fd042703          	lw	a4,-48(s0)
20403d32:	38e7ac23          	sw	a4,920(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20403d36:	a089                	j	20403d78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20403d38:	fe842683          	lw	a3,-24(s0)
20403d3c:	fd842703          	lw	a4,-40(s0)
20403d40:	87ba                	mv	a5,a4
20403d42:	0786                	slli	a5,a5,0x1
20403d44:	97ba                	add	a5,a5,a4
20403d46:	078e                	slli	a5,a5,0x3
20403d48:	97b6                	add	a5,a5,a3
20403d4a:	20403737          	lui	a4,0x20403
20403d4e:	aaa70713          	addi	a4,a4,-1366 # 20402aaa <__metal_default_interrupt_handler>
20403d52:	08e7a823          	sw	a4,144(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20403d56:	fe842683          	lw	a3,-24(s0)
20403d5a:	fd842703          	lw	a4,-40(s0)
20403d5e:	87ba                	mv	a5,a4
20403d60:	0786                	slli	a5,a5,0x1
20403d62:	97ba                	add	a5,a5,a4
20403d64:	078e                	slli	a5,a5,0x3
20403d66:	97b6                	add	a5,a5,a3
20403d68:	fd042703          	lw	a4,-48(s0)
20403d6c:	08e7aa23          	sw	a4,148(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20403d70:	a021                	j	20403d78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20403d72:	57d1                	li	a5,-12
20403d74:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20403d78:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:549
}
20403d7c:	853e                	mv	a0,a5
20403d7e:	50b2                	lw	ra,44(sp)
20403d80:	5422                	lw	s0,40(sp)
20403d82:	6145                	addi	sp,sp,48
20403d84:	8082                	ret

20403d86 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20403d86:	1101                	addi	sp,sp,-32
20403d88:	ce06                	sw	ra,28(sp)
20403d8a:	cc22                	sw	s0,24(sp)
20403d8c:	1000                	addi	s0,sp,32
20403d8e:	fea42623          	sw	a0,-20(s0)
20403d92:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20403d96:	fe842783          	lw	a5,-24(s0)
20403d9a:	4605                	li	a2,1
20403d9c:	85be                	mv	a1,a5
20403d9e:	fec42503          	lw	a0,-20(s0)
20403da2:	c19ff0ef          	jal	ra,204039ba <__metal_local_interrupt_enable>
20403da6:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:554
}
20403da8:	853e                	mv	a0,a5
20403daa:	40f2                	lw	ra,28(sp)
20403dac:	4462                	lw	s0,24(sp)
20403dae:	6105                	addi	sp,sp,32
20403db0:	8082                	ret

20403db2 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20403db2:	1101                	addi	sp,sp,-32
20403db4:	ce06                	sw	ra,28(sp)
20403db6:	cc22                	sw	s0,24(sp)
20403db8:	1000                	addi	s0,sp,32
20403dba:	fea42623          	sw	a0,-20(s0)
20403dbe:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20403dc2:	fe842783          	lw	a5,-24(s0)
20403dc6:	4601                	li	a2,0
20403dc8:	85be                	mv	a1,a5
20403dca:	fec42503          	lw	a0,-20(s0)
20403dce:	bedff0ef          	jal	ra,204039ba <__metal_local_interrupt_enable>
20403dd2:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:559
}
20403dd4:	853e                	mv	a0,a5
20403dd6:	40f2                	lw	ra,28(sp)
20403dd8:	4462                	lw	s0,24(sp)
20403dda:	6105                	addi	sp,sp,32
20403ddc:	8082                	ret

20403dde <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20403dde:	1101                	addi	sp,sp,-32
20403de0:	ce06                	sw	ra,28(sp)
20403de2:	cc22                	sw	s0,24(sp)
20403de4:	1000                	addi	s0,sp,32
20403de6:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20403dea:	a6fff0ef          	jal	ra,20403858 <__metal_controller_interrupt_vector_mode>
20403dee:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:593
}
20403df0:	853e                	mv	a0,a5
20403df2:	40f2                	lw	ra,28(sp)
20403df4:	4462                	lw	s0,24(sp)
20403df6:	6105                	addi	sp,sp,32
20403df8:	8082                	ret

20403dfa <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20403dfa:	1101                	addi	sp,sp,-32
20403dfc:	ce06                	sw	ra,28(sp)
20403dfe:	cc22                	sw	s0,24(sp)
20403e00:	1000                	addi	s0,sp,32
20403e02:	fea42623          	sw	a0,-20(s0)
20403e06:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20403e0a:	fe842783          	lw	a5,-24(s0)
20403e0e:	eb99                	bnez	a5,20403e24 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20403e10:	204037b7          	lui	a5,0x20403
20403e14:	d0078593          	addi	a1,a5,-768 # 20402d00 <__metal_exception_handler>
20403e18:	fe842503          	lw	a0,-24(s0)
20403e1c:	a95ff0ef          	jal	ra,204038b0 <__metal_controller_interrupt_vector>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20403e20:	4781                	li	a5,0
20403e22:	a00d                	j	20403e44 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20403e24:	fe842703          	lw	a4,-24(s0)
20403e28:	4785                	li	a5,1
20403e2a:	00f71c63          	bne	a4,a5,20403e42 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20403e2e:	204067b7          	lui	a5,0x20406
20403e32:	68078593          	addi	a1,a5,1664 # 20406680 <__metal_vector_table>
20403e36:	fe842503          	lw	a0,-24(s0)
20403e3a:	a77ff0ef          	jal	ra,204038b0 <__metal_controller_interrupt_vector>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20403e3e:	4781                	li	a5,0
20403e40:	a011                	j	20403e44 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20403e42:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:609
}
20403e44:	853e                	mv	a0,a5
20403e46:	40f2                	lw	ra,28(sp)
20403e48:	4462                	lw	s0,24(sp)
20403e4a:	6105                	addi	sp,sp,32
20403e4c:	8082                	ret

20403e4e <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20403e4e:	1101                	addi	sp,sp,-32
20403e50:	ce22                	sw	s0,28(sp)
20403e52:	1000                	addi	s0,sp,32
20403e54:	fea42623          	sw	a0,-20(s0)
20403e58:	feb42423          	sw	a1,-24(s0)
20403e5c:	fec42223          	sw	a2,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20403e60:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:616
}
20403e62:	853e                	mv	a0,a5
20403e64:	4472                	lw	s0,28(sp)
20403e66:	6105                	addi	sp,sp,32
20403e68:	8082                	ret

20403e6a <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20403e6a:	7139                	addi	sp,sp,-64
20403e6c:	de22                	sw	s0,60(sp)
20403e6e:	0080                	addi	s0,sp,64
20403e70:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20403e74:	4501                	li	a0,0
20403e76:	4581                	li	a1,0
20403e78:	fea42423          	sw	a0,-24(s0)
20403e7c:	feb42623          	sw	a1,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20403e80:	b80025f3          	csrr	a1,mcycleh
20403e84:	feb42223          	sw	a1,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20403e88:	b00025f3          	csrr	a1,mcycle
20403e8c:	feb42023          	sw	a1,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20403e90:	b80025f3          	csrr	a1,mcycleh
20403e94:	fcb42e23          	sw	a1,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20403e98:	fe442503          	lw	a0,-28(s0)
20403e9c:	fdc42583          	lw	a1,-36(s0)
20403ea0:	feb510e3          	bne	a0,a1,20403e80 <__metal_driver_cpu_mcycle_get+0x16>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20403ea4:	fe442583          	lw	a1,-28(s0)
20403ea8:	882e                	mv	a6,a1
20403eaa:	4881                	li	a7,0
20403eac:	00081793          	slli	a5,a6,0x0
20403eb0:	4701                	li	a4,0
20403eb2:	fe042583          	lw	a1,-32(s0)
20403eb6:	862e                	mv	a2,a1
20403eb8:	4681                	li	a3,0
20403eba:	00c765b3          	or	a1,a4,a2
20403ebe:	feb42423          	sw	a1,-24(s0)
20403ec2:	8fd5                	or	a5,a5,a3
20403ec4:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20403ec8:	fe842703          	lw	a4,-24(s0)
20403ecc:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:640
}
20403ed0:	853a                	mv	a0,a4
20403ed2:	85be                	mv	a1,a5
20403ed4:	5472                	lw	s0,60(sp)
20403ed6:	6121                	addi	sp,sp,64
20403ed8:	8082                	ret

20403eda <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20403eda:	7179                	addi	sp,sp,-48
20403edc:	d606                	sw	ra,44(sp)
20403ede:	d422                	sw	s0,40(sp)
20403ee0:	d24a                	sw	s2,36(sp)
20403ee2:	d04e                	sw	s3,32(sp)
20403ee4:	1800                	addi	s0,sp,48
20403ee6:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20403eea:	fdc42783          	lw	a5,-36(s0)
20403eee:	e781                	bnez	a5,20403ef6 <__metal_driver_cpu_timebase_get+0x1c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20403ef0:	4901                	li	s2,0
20403ef2:	4981                	li	s3,0
20403ef4:	a821                	j	20403f0c <__metal_driver_cpu_timebase_get+0x32>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20403ef6:	fdc42503          	lw	a0,-36(s0)
20403efa:	9b3fe0ef          	jal	ra,204028ac <__metal_driver_cpu_timebase>
20403efe:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20403f02:	fec42783          	lw	a5,-20(s0)
20403f06:	893e                	mv	s2,a5
20403f08:	87fd                	srai	a5,a5,0x1f
20403f0a:	89be                	mv	s3,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:650
}
20403f0c:	874a                	mv	a4,s2
20403f0e:	87ce                	mv	a5,s3
20403f10:	853a                	mv	a0,a4
20403f12:	85be                	mv	a1,a5
20403f14:	50b2                	lw	ra,44(sp)
20403f16:	5422                	lw	s0,40(sp)
20403f18:	5912                	lw	s2,36(sp)
20403f1a:	5982                	lw	s3,32(sp)
20403f1c:	6145                	addi	sp,sp,48
20403f1e:	8082                	ret

20403f20 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20403f20:	7179                	addi	sp,sp,-48
20403f22:	d606                	sw	ra,44(sp)
20403f24:	d422                	sw	s0,40(sp)
20403f26:	1800                	addi	s0,sp,48
20403f28:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20403f2c:	4781                	li	a5,0
20403f2e:	4801                	li	a6,0
20403f30:	fef42023          	sw	a5,-32(s0)
20403f34:	ff042223          	sw	a6,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20403f38:	fdc42503          	lw	a0,-36(s0)
20403f3c:	99bfe0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
20403f40:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20403f44:	fec42783          	lw	a5,-20(s0)
20403f48:	c78d                	beqz	a5,20403f72 <__metal_driver_cpu_mtime_get+0x52>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20403f4a:	fec42783          	lw	a5,-20(s0)
20403f4e:	13c7a783          	lw	a5,316(a5)
20403f52:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20403f56:	fe842783          	lw	a5,-24(s0)
20403f5a:	cf81                	beqz	a5,20403f72 <__metal_driver_cpu_mtime_get+0x52>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20403f5c:	fe842783          	lw	a5,-24(s0)
20403f60:	439c                	lw	a5,0(a5)
20403f62:	47f8                	lw	a4,76(a5)
20403f64:	fe040793          	addi	a5,s0,-32
20403f68:	863e                	mv	a2,a5
20403f6a:	4585                	li	a1,1
20403f6c:	fe842503          	lw	a0,-24(s0)
20403f70:	9702                	jalr	a4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20403f72:	fe042703          	lw	a4,-32(s0)
20403f76:	fe442783          	lw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:667
}
20403f7a:	853a                	mv	a0,a4
20403f7c:	85be                	mv	a1,a5
20403f7e:	50b2                	lw	ra,44(sp)
20403f80:	5422                	lw	s0,40(sp)
20403f82:	6145                	addi	sp,sp,48
20403f84:	8082                	ret

20403f86 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20403f86:	7179                	addi	sp,sp,-48
20403f88:	d606                	sw	ra,44(sp)
20403f8a:	d422                	sw	s0,40(sp)
20403f8c:	d226                	sw	s1,36(sp)
20403f8e:	1800                	addi	s0,sp,48
20403f90:	fca42e23          	sw	a0,-36(s0)
20403f94:	fcb42823          	sw	a1,-48(s0)
20403f98:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20403f9c:	57fd                	li	a5,-1
20403f9e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20403fa2:	fdc42503          	lw	a0,-36(s0)
20403fa6:	931fe0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
20403faa:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20403fae:	fe842783          	lw	a5,-24(s0)
20403fb2:	cf8d                	beqz	a5,20403fec <__metal_driver_cpu_mtimecmp_set+0x66>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20403fb4:	fe842783          	lw	a5,-24(s0)
20403fb8:	13c7a783          	lw	a5,316(a5)
20403fbc:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20403fc0:	fe442783          	lw	a5,-28(s0)
20403fc4:	c785                	beqz	a5,20403fec <__metal_driver_cpu_mtimecmp_set+0x66>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
20403fc6:	fe442783          	lw	a5,-28(s0)
20403fca:	439c                	lw	a5,0(a5)
20403fcc:	4ba4                	lw	s1,80(a5)
20403fce:	fdc42503          	lw	a0,-36(s0)
20403fd2:	8b7fe0ef          	jal	ra,20402888 <__metal_driver_cpu_hartid>
20403fd6:	87aa                	mv	a5,a0
20403fd8:	fd042603          	lw	a2,-48(s0)
20403fdc:	fd442683          	lw	a3,-44(s0)
20403fe0:	85be                	mv	a1,a5
20403fe2:	fe442503          	lw	a0,-28(s0)
20403fe6:	9482                	jalr	s1
20403fe8:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20403fec:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:685
}
20403ff0:	853e                	mv	a0,a5
20403ff2:	50b2                	lw	ra,44(sp)
20403ff4:	5422                	lw	s0,40(sp)
20403ff6:	5492                	lw	s1,36(sp)
20403ff8:	6145                	addi	sp,sp,48
20403ffa:	8082                	ret

20403ffc <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20403ffc:	1101                	addi	sp,sp,-32
20403ffe:	ce22                	sw	s0,28(sp)
20404000:	1000                	addi	s0,sp,32
20404002:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20404006:	800007b7          	lui	a5,0x80000
2040400a:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
2040400e:	853e                	mv	a0,a5
20404010:	4472                	lw	s0,28(sp)
20404012:	6105                	addi	sp,sp,32
20404014:	8082                	ret

20404016 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20404016:	1101                	addi	sp,sp,-32
20404018:	ce22                	sw	s0,28(sp)
2040401a:	1000                	addi	s0,sp,32
2040401c:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20404020:	479d                	li	a5,7
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:703
}
20404022:	853e                	mv	a0,a5
20404024:	4472                	lw	s0,28(sp)
20404026:	6105                	addi	sp,sp,32
20404028:	8082                	ret

2040402a <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
2040402a:	1101                	addi	sp,sp,-32
2040402c:	ce22                	sw	s0,28(sp)
2040402e:	1000                	addi	s0,sp,32
20404030:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20404034:	800007b7          	lui	a5,0x80000
20404038:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
2040403c:	853e                	mv	a0,a5
2040403e:	4472                	lw	s0,28(sp)
20404040:	6105                	addi	sp,sp,32
20404042:	8082                	ret

20404044 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
20404044:	1101                	addi	sp,sp,-32
20404046:	ce22                	sw	s0,28(sp)
20404048:	1000                	addi	s0,sp,32
2040404a:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
2040404e:	478d                	li	a5,3
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:721
}
20404050:	853e                	mv	a0,a5
20404052:	4472                	lw	s0,28(sp)
20404054:	6105                	addi	sp,sp,32
20404056:	8082                	ret

20404058 <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
20404058:	7179                	addi	sp,sp,-48
2040405a:	d606                	sw	ra,44(sp)
2040405c:	d422                	sw	s0,40(sp)
2040405e:	1800                	addi	s0,sp,48
20404060:	fca42e23          	sw	a0,-36(s0)
20404064:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
20404068:	57fd                	li	a5,-1
2040406a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2040406e:	fdc42503          	lw	a0,-36(s0)
20404072:	865fe0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
20404076:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
2040407a:	fe842783          	lw	a5,-24(s0)
2040407e:	c79d                	beqz	a5,204040ac <__metal_driver_cpu_set_sw_ipi+0x54>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404080:	fe842783          	lw	a5,-24(s0)
20404084:	0dc7a783          	lw	a5,220(a5)
20404088:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
2040408c:	fe442783          	lw	a5,-28(s0)
20404090:	cf91                	beqz	a5,204040ac <__metal_driver_cpu_set_sw_ipi+0x54>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20404092:	fe442783          	lw	a5,-28(s0)
20404096:	439c                	lw	a5,0(a5)
20404098:	47f8                	lw	a4,76(a5)
2040409a:	fd840793          	addi	a5,s0,-40
2040409e:	863e                	mv	a2,a5
204040a0:	458d                	li	a1,3
204040a2:	fe442503          	lw	a0,-28(s0)
204040a6:	9702                	jalr	a4
204040a8:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
204040ac:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:738
}
204040b0:	853e                	mv	a0,a5
204040b2:	50b2                	lw	ra,44(sp)
204040b4:	5422                	lw	s0,40(sp)
204040b6:	6145                	addi	sp,sp,48
204040b8:	8082                	ret

204040ba <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
204040ba:	7179                	addi	sp,sp,-48
204040bc:	d606                	sw	ra,44(sp)
204040be:	d422                	sw	s0,40(sp)
204040c0:	1800                	addi	s0,sp,48
204040c2:	fca42e23          	sw	a0,-36(s0)
204040c6:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
204040ca:	57fd                	li	a5,-1
204040cc:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204040d0:	fdc42503          	lw	a0,-36(s0)
204040d4:	803fe0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
204040d8:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
204040dc:	fe842783          	lw	a5,-24(s0)
204040e0:	c79d                	beqz	a5,2040410e <__metal_driver_cpu_clear_sw_ipi+0x54>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
204040e2:	fe842783          	lw	a5,-24(s0)
204040e6:	0dc7a783          	lw	a5,220(a5)
204040ea:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
204040ee:	fe442783          	lw	a5,-28(s0)
204040f2:	cf91                	beqz	a5,2040410e <__metal_driver_cpu_clear_sw_ipi+0x54>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
204040f4:	fe442783          	lw	a5,-28(s0)
204040f8:	439c                	lw	a5,0(a5)
204040fa:	47f8                	lw	a4,76(a5)
204040fc:	fd840793          	addi	a5,s0,-40
20404100:	863e                	mv	a2,a5
20404102:	4589                	li	a1,2
20404104:	fe442503          	lw	a0,-28(s0)
20404108:	9702                	jalr	a4
2040410a:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
2040410e:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:755
}
20404112:	853e                	mv	a0,a5
20404114:	50b2                	lw	ra,44(sp)
20404116:	5422                	lw	s0,40(sp)
20404118:	6145                	addi	sp,sp,48
2040411a:	8082                	ret

2040411c <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
2040411c:	7179                	addi	sp,sp,-48
2040411e:	d606                	sw	ra,44(sp)
20404120:	d422                	sw	s0,40(sp)
20404122:	1800                	addi	s0,sp,48
20404124:	fca42e23          	sw	a0,-36(s0)
20404128:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
2040412c:	fe042623          	sw	zero,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404130:	fdc42503          	lw	a0,-36(s0)
20404134:	fa2fe0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
20404138:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
2040413c:	fe842783          	lw	a5,-24(s0)
20404140:	c79d                	beqz	a5,2040416e <__metal_driver_cpu_get_msip+0x52>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404142:	fe842783          	lw	a5,-24(s0)
20404146:	0dc7a783          	lw	a5,220(a5)
2040414a:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
2040414e:	fe442783          	lw	a5,-28(s0)
20404152:	cf91                	beqz	a5,2040416e <__metal_driver_cpu_get_msip+0x52>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
20404154:	fe442783          	lw	a5,-28(s0)
20404158:	439c                	lw	a5,0(a5)
2040415a:	47f8                	lw	a4,76(a5)
2040415c:	fd840793          	addi	a5,s0,-40
20404160:	863e                	mv	a2,a5
20404162:	4591                	li	a1,4
20404164:	fe442503          	lw	a0,-28(s0)
20404168:	9702                	jalr	a4
2040416a:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
2040416e:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:772
}
20404172:	853e                	mv	a0,a5
20404174:	50b2                	lw	ra,44(sp)
20404176:	5422                	lw	s0,40(sp)
20404178:	6145                	addi	sp,sp,48
2040417a:	8082                	ret

2040417c <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
2040417c:	1101                	addi	sp,sp,-32
2040417e:	ce06                	sw	ra,28(sp)
20404180:	cc22                	sw	s0,24(sp)
20404182:	1000                	addi	s0,sp,32
20404184:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
20404188:	fec42503          	lw	a0,-20(s0)
2040418c:	f4afe0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
20404190:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:777
}
20404192:	853e                	mv	a0,a5
20404194:	40f2                	lw	ra,28(sp)
20404196:	4462                	lw	s0,24(sp)
20404198:	6105                	addi	sp,sp,32
2040419a:	8082                	ret

2040419c <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
2040419c:	7179                	addi	sp,sp,-48
2040419e:	d606                	sw	ra,44(sp)
204041a0:	d422                	sw	s0,40(sp)
204041a2:	1800                	addi	s0,sp,48
204041a4:	fca42e23          	sw	a0,-36(s0)
204041a8:	fcb42c23          	sw	a1,-40(s0)
204041ac:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204041b0:	fdc42503          	lw	a0,-36(s0)
204041b4:	f22fe0ef          	jal	ra,204028d6 <__metal_driver_cpu_interrupt_controller>
204041b8:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
204041bc:	fec42783          	lw	a5,-20(s0)
204041c0:	cb99                	beqz	a5,204041d6 <__metal_driver_cpu_exception_register+0x3a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
204041c2:	fd442603          	lw	a2,-44(s0)
204041c6:	fd842583          	lw	a1,-40(s0)
204041ca:	fec42503          	lw	a0,-20(s0)
204041ce:	8a9ff0ef          	jal	ra,20403a76 <__metal_exception_register>
204041d2:	87aa                	mv	a5,a0
204041d4:	a011                	j	204041d8 <__metal_driver_cpu_exception_register+0x3c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
204041d6:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:808
}
204041d8:	853e                	mv	a0,a5
204041da:	50b2                	lw	ra,44(sp)
204041dc:	5422                	lw	s0,40(sp)
204041de:	6145                	addi	sp,sp,48
204041e0:	8082                	ret

204041e2 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
204041e2:	1101                	addi	sp,sp,-32
204041e4:	ce22                	sw	s0,28(sp)
204041e6:	1000                	addi	s0,sp,32
204041e8:	fea42623          	sw	a0,-20(s0)
204041ec:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
204041f0:	fe842783          	lw	a5,-24(s0)
204041f4:	0007d783          	lhu	a5,0(a5)
204041f8:	0037f713          	andi	a4,a5,3
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
204041fc:	478d                	li	a5,3
204041fe:	00f71463          	bne	a4,a5,20404206 <__metal_driver_cpu_get_instruction_length+0x24>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20404202:	4791                	li	a5,4
20404204:	a011                	j	20404208 <__metal_driver_cpu_get_instruction_length+0x26>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
20404206:	4789                	li	a5,2
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
20404208:	853e                	mv	a0,a5
2040420a:	4472                	lw	s0,28(sp)
2040420c:	6105                	addi	sp,sp,32
2040420e:	8082                	ret

20404210 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20404210:	7179                	addi	sp,sp,-48
20404212:	d622                	sw	s0,44(sp)
20404214:	1800                	addi	s0,sp,48
20404216:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
2040421a:	341027f3          	csrr	a5,mepc
2040421e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
20404222:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:827
}
20404226:	853e                	mv	a0,a5
20404228:	5432                	lw	s0,44(sp)
2040422a:	6145                	addi	sp,sp,48
2040422c:	8082                	ret

2040422e <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
2040422e:	1101                	addi	sp,sp,-32
20404230:	ce22                	sw	s0,28(sp)
20404232:	1000                	addi	s0,sp,32
20404234:	fea42623          	sw	a0,-20(s0)
20404238:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
2040423c:	fe842783          	lw	a5,-24(s0)
20404240:	34179073          	csrw	mepc,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
20404244:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:832
}
20404246:	853e                	mv	a0,a5
20404248:	4472                	lw	s0,28(sp)
2040424a:	6105                	addi	sp,sp,32
2040424c:	8082                	ret

2040424e <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
2040424e:	1101                	addi	sp,sp,-32
20404250:	ce06                	sw	ra,28(sp)
20404252:	cc22                	sw	s0,24(sp)
20404254:	1000                	addi	s0,sp,32
20404256:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
2040425a:	fec42503          	lw	a0,-20(s0)
2040425e:	ea2fe0ef          	jal	ra,20402900 <__metal_driver_cpu_buserror>
20404262:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_cpu.c:836
}
20404264:	853e                	mv	a0,a5
20404266:	40f2                	lw	ra,28(sp)
20404268:	4462                	lw	s0,24(sp)
2040426a:	6105                	addi	sp,sp,32
2040426c:	8082                	ret

2040426e <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:314



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
2040426e:	1101                	addi	sp,sp,-32
20404270:	ce22                	sw	s0,28(sp)
20404272:	1000                	addi	s0,sp,32
20404274:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:315
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20404278:	fec42703          	lw	a4,-20(s0)
2040427c:	800007b7          	lui	a5,0x80000
20404280:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffefe8>
20404284:	00f71563          	bne	a4,a5,2040428e <__metal_driver_sifive_plic0_control_base+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:316
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
20404288:	0c0007b7          	lui	a5,0xc000
2040428c:	a011                	j	20404290 <__metal_driver_sifive_plic0_control_base+0x22>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:319
	}
	else {
		return 0;
2040428e:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:321
	}
}
20404290:	853e                	mv	a0,a5
20404292:	4472                	lw	s0,28(sp)
20404294:	6105                	addi	sp,sp,32
20404296:	8082                	ret

20404298 <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:334
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
20404298:	1101                	addi	sp,sp,-32
2040429a:	ce22                	sw	s0,28(sp)
2040429c:	1000                	addi	s0,sp,32
2040429e:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:335
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204042a2:	fec42703          	lw	a4,-20(s0)
204042a6:	800007b7          	lui	a5,0x80000
204042aa:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffefe8>
204042ae:	00f71463          	bne	a4,a5,204042b6 <__metal_driver_sifive_plic0_num_interrupts+0x1e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:336
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
204042b2:	47ed                	li	a5,27
204042b4:	a011                	j	204042b8 <__metal_driver_sifive_plic0_num_interrupts+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:339
	}
	else {
		return 0;
204042b6:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:341
	}
}
204042b8:	853e                	mv	a0,a5
204042ba:	4472                	lw	s0,28(sp)
204042bc:	6105                	addi	sp,sp,32
204042be:	8082                	ret

204042c0 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:344

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
204042c0:	1101                	addi	sp,sp,-32
204042c2:	ce22                	sw	s0,28(sp)
204042c4:	1000                	addi	s0,sp,32
204042c6:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:345
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204042ca:	fec42703          	lw	a4,-20(s0)
204042ce:	800007b7          	lui	a5,0x80000
204042d2:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffefe8>
204042d6:	00f71463          	bne	a4,a5,204042de <__metal_driver_sifive_plic0_max_priority+0x1e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:346
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
204042da:	479d                	li	a5,7
204042dc:	a011                	j	204042e0 <__metal_driver_sifive_plic0_max_priority+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:349
	}
	else {
		return 0;
204042de:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:351
	}
}
204042e0:	853e                	mv	a0,a5
204042e2:	4472                	lw	s0,28(sp)
204042e4:	6105                	addi	sp,sp,32
204042e6:	8082                	ret

204042e8 <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:354

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
204042e8:	1101                	addi	sp,sp,-32
204042ea:	ce22                	sw	s0,28(sp)
204042ec:	1000                	addi	s0,sp,32
204042ee:	fea42623          	sw	a0,-20(s0)
204042f2:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:355
	if (idx == 0) {
204042f6:	fe842783          	lw	a5,-24(s0)
204042fa:	e791                	bnez	a5,20404306 <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:356
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
204042fc:	800007b7          	lui	a5,0x80000
20404300:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffec18>
20404304:	a011                	j	20404308 <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:359
	}
	else {
		return NULL;
20404306:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:361
	}
}
20404308:	853e                	mv	a0,a5
2040430a:	4472                	lw	s0,28(sp)
2040430c:	6105                	addi	sp,sp,32
2040430e:	8082                	ret

20404310 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:364

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20404310:	1101                	addi	sp,sp,-32
20404312:	ce22                	sw	s0,28(sp)
20404314:	1000                	addi	s0,sp,32
20404316:	fea42623          	sw	a0,-20(s0)
2040431a:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:365
	if (idx == 0) {
2040431e:	fe842783          	lw	a5,-24(s0)
20404322:	e399                	bnez	a5,20404328 <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:366
		return 11;
20404324:	47ad                	li	a5,11
20404326:	a011                	j	2040432a <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:369
	}
	else {
		return 0;
20404328:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:371
	}
}
2040432a:	853e                	mv	a0,a5
2040432c:	4472                	lw	s0,28(sp)
2040432e:	6105                	addi	sp,sp,32
20404330:	8082                	ret

20404332 <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:374

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
20404332:	1101                	addi	sp,sp,-32
20404334:	ce22                	sw	s0,28(sp)
20404336:	1000                	addi	s0,sp,32
20404338:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:375
	if (hartid == 0) {
2040433c:	fec42783          	lw	a5,-20(s0)
20404340:	e399                	bnez	a5,20404346 <__metal_driver_sifive_plic0_context_ids+0x14>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:376
		return 0;
20404342:	4781                	li	a5,0
20404344:	a011                	j	20404348 <__metal_driver_sifive_plic0_context_ids+0x16>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:379
	}
	else {
		return -1;
20404346:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:381
	}
}
20404348:	853e                	mv	a0,a5
2040434a:	4472                	lw	s0,28(sp)
2040434c:	6105                	addi	sp,sp,32
2040434e:	8082                	ret

20404350 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
20404350:	7179                	addi	sp,sp,-48
20404352:	d606                	sw	ra,44(sp)
20404354:	d422                	sw	s0,40(sp)
20404356:	1800                	addi	s0,sp,48
20404358:	fca42e23          	sw	a0,-36(s0)
2040435c:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20404360:	fdc42503          	lw	a0,-36(s0)
20404364:	3729                	jal	2040426e <__metal_driver_sifive_plic0_control_base>
20404366:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
2040436a:	fd842783          	lw	a5,-40(s0)
2040436e:	00c79713          	slli	a4,a5,0xc
20404372:	fec42783          	lw	a5,-20(s0)
20404376:	973e                	add	a4,a4,a5
20404378:	002007b7          	lui	a5,0x200
2040437c:	0791                	addi	a5,a5,4
2040437e:	97ba                	add	a5,a5,a4
20404380:	439c                	lw	a5,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
20404382:	853e                	mv	a0,a5
20404384:	50b2                	lw	ra,44(sp)
20404386:	5422                	lw	s0,40(sp)
20404388:	6145                	addi	sp,sp,48
2040438a:	8082                	ret

2040438c <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
2040438c:	7179                	addi	sp,sp,-48
2040438e:	d606                	sw	ra,44(sp)
20404390:	d422                	sw	s0,40(sp)
20404392:	1800                	addi	s0,sp,48
20404394:	fca42e23          	sw	a0,-36(s0)
20404398:	fcb42c23          	sw	a1,-40(s0)
2040439c:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
204043a0:	fdc42503          	lw	a0,-36(s0)
204043a4:	35e9                	jal	2040426e <__metal_driver_sifive_plic0_control_base>
204043a6:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
204043aa:	fd842783          	lw	a5,-40(s0)
204043ae:	00c79713          	slli	a4,a5,0xc
204043b2:	fec42783          	lw	a5,-20(s0)
204043b6:	973e                	add	a4,a4,a5
204043b8:	002007b7          	lui	a5,0x200
204043bc:	0791                	addi	a5,a5,4
204043be:	97ba                	add	a5,a5,a4
204043c0:	873e                	mv	a4,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
204043c2:	fd442783          	lw	a5,-44(s0)
204043c6:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:35
}
204043c8:	0001                	nop
204043ca:	50b2                	lw	ra,44(sp)
204043cc:	5422                	lw	s0,40(sp)
204043ce:	6145                	addi	sp,sp,48
204043d0:	8082                	ret

204043d2 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
204043d2:	7179                	addi	sp,sp,-48
204043d4:	d606                	sw	ra,44(sp)
204043d6:	d422                	sw	s0,40(sp)
204043d8:	1800                	addi	s0,sp,48
204043da:	fca42e23          	sw	a0,-36(s0)
204043de:	fcb42c23          	sw	a1,-40(s0)
204043e2:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204043e6:	fdc42503          	lw	a0,-36(s0)
204043ea:	3551                	jal	2040426e <__metal_driver_sifive_plic0_control_base>
204043ec:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
204043f0:	fd842783          	lw	a5,-40(s0)
204043f4:	00c79713          	slli	a4,a5,0xc
204043f8:	fec42783          	lw	a5,-20(s0)
204043fc:	973e                	add	a4,a4,a5
204043fe:	002007b7          	lui	a5,0x200
20404402:	97ba                	add	a5,a5,a4
20404404:	873e                	mv	a4,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
20404406:	fd442783          	lw	a5,-44(s0)
2040440a:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
2040440c:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:46
}
2040440e:	853e                	mv	a0,a5
20404410:	50b2                	lw	ra,44(sp)
20404412:	5422                	lw	s0,40(sp)
20404414:	6145                	addi	sp,sp,48
20404416:	8082                	ret

20404418 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
20404418:	7179                	addi	sp,sp,-48
2040441a:	d606                	sw	ra,44(sp)
2040441c:	d422                	sw	s0,40(sp)
2040441e:	1800                	addi	s0,sp,48
20404420:	fca42e23          	sw	a0,-36(s0)
20404424:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20404428:	fdc42503          	lw	a0,-36(s0)
2040442c:	3589                	jal	2040426e <__metal_driver_sifive_plic0_control_base>
2040442e:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
20404432:	fd842783          	lw	a5,-40(s0)
20404436:	00c79713          	slli	a4,a5,0xc
2040443a:	fec42783          	lw	a5,-20(s0)
2040443e:	973e                	add	a4,a4,a5
20404440:	002007b7          	lui	a5,0x200
20404444:	97ba                	add	a5,a5,a4
20404446:	439c                	lw	a5,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
20404448:	853e                	mv	a0,a5
2040444a:	50b2                	lw	ra,44(sp)
2040444c:	5422                	lw	s0,40(sp)
2040444e:	6145                	addi	sp,sp,48
20404450:	8082                	ret

20404452 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
20404452:	7179                	addi	sp,sp,-48
20404454:	d606                	sw	ra,44(sp)
20404456:	d422                	sw	s0,40(sp)
20404458:	1800                	addi	s0,sp,48
2040445a:	fca42e23          	sw	a0,-36(s0)
2040445e:	fcb42c23          	sw	a1,-40(s0)
20404462:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20404466:	fdc42503          	lw	a0,-36(s0)
2040446a:	3511                	jal	2040426e <__metal_driver_sifive_plic0_control_base>
2040446c:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
20404470:	fdc42503          	lw	a0,-36(s0)
20404474:	35b1                	jal	204042c0 <__metal_driver_sifive_plic0_max_priority>
20404476:	87aa                	mv	a5,a0
20404478:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
2040447c:	fe842783          	lw	a5,-24(s0)
20404480:	c785                	beqz	a5,204044a8 <__metal_driver_riscv_plic0_set_priority+0x56>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20404482:	fd442703          	lw	a4,-44(s0)
20404486:	fe842783          	lw	a5,-24(s0)
2040448a:	00f77f63          	bgeu	a4,a5,204044a8 <__metal_driver_riscv_plic0_set_priority+0x56>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
2040448e:	fd842783          	lw	a5,-40(s0)
20404492:	078a                	slli	a5,a5,0x2
20404494:	873e                	mv	a4,a5
20404496:	fec42783          	lw	a5,-20(s0)
2040449a:	97ba                	add	a5,a5,a4
2040449c:	873e                	mv	a4,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
2040449e:	fd442783          	lw	a5,-44(s0)
204044a2:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
204044a4:	4781                	li	a5,0
204044a6:	a011                	j	204044aa <__metal_driver_riscv_plic0_set_priority+0x58>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
204044a8:	57fd                	li	a5,-1
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:72
}
204044aa:	853e                	mv	a0,a5
204044ac:	50b2                	lw	ra,44(sp)
204044ae:	5422                	lw	s0,40(sp)
204044b0:	6145                	addi	sp,sp,48
204044b2:	8082                	ret

204044b4 <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
204044b4:	7179                	addi	sp,sp,-48
204044b6:	d606                	sw	ra,44(sp)
204044b8:	d422                	sw	s0,40(sp)
204044ba:	1800                	addi	s0,sp,48
204044bc:	fca42e23          	sw	a0,-36(s0)
204044c0:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204044c4:	fdc42503          	lw	a0,-36(s0)
204044c8:	335d                	jal	2040426e <__metal_driver_sifive_plic0_control_base>
204044ca:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
204044ce:	fd842783          	lw	a5,-40(s0)
204044d2:	078a                	slli	a5,a5,0x2
204044d4:	873e                	mv	a4,a5
204044d6:	fec42783          	lw	a5,-20(s0)
204044da:	97ba                	add	a5,a5,a4
204044dc:	439c                	lw	a5,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
204044de:	853e                	mv	a0,a5
204044e0:	50b2                	lw	ra,44(sp)
204044e2:	5422                	lw	s0,40(sp)
204044e4:	6145                	addi	sp,sp,48
204044e6:	8082                	ret

204044e8 <__metal_plic0_enable>:
__metal_plic0_enable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
204044e8:	7179                	addi	sp,sp,-48
204044ea:	d606                	sw	ra,44(sp)
204044ec:	d422                	sw	s0,40(sp)
204044ee:	1800                	addi	s0,sp,48
204044f0:	fca42e23          	sw	a0,-36(s0)
204044f4:	fcb42c23          	sw	a1,-40(s0)
204044f8:	fcc42a23          	sw	a2,-44(s0)
204044fc:	fcd42823          	sw	a3,-48(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20404500:	fdc42503          	lw	a0,-36(s0)
20404504:	33ad                	jal	2040426e <__metal_driver_sifive_plic0_control_base>
20404506:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
2040450a:	fd842783          	lw	a5,-40(s0)
2040450e:	00779713          	slli	a4,a5,0x7
20404512:	fec42783          	lw	a5,-20(s0)
20404516:	97ba                	add	a5,a5,a4
20404518:	fd442703          	lw	a4,-44(s0)
2040451c:	8715                	srai	a4,a4,0x5
2040451e:	070a                	slli	a4,a4,0x2
20404520:	973e                	add	a4,a4,a5
20404522:	6789                	lui	a5,0x2
20404524:	97ba                	add	a5,a5,a4
20404526:	439c                	lw	a5,0(a5)
20404528:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
2040452c:	fd042783          	lw	a5,-48(s0)
20404530:	cf81                	beqz	a5,20404548 <__metal_plic0_enable+0x60>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20404532:	fd442783          	lw	a5,-44(s0)
20404536:	8bfd                	andi	a5,a5,31
20404538:	4705                	li	a4,1
2040453a:	00f717b3          	sll	a5,a4,a5
2040453e:	873e                	mv	a4,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20404540:	fe842783          	lw	a5,-24(s0)
20404544:	8fd9                	or	a5,a5,a4
20404546:	a829                	j	20404560 <__metal_plic0_enable+0x78>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
20404548:	fd442783          	lw	a5,-44(s0)
2040454c:	8bfd                	andi	a5,a5,31
2040454e:	4705                	li	a4,1
20404550:	00f717b3          	sll	a5,a4,a5
20404554:	fff7c793          	not	a5,a5
20404558:	873e                	mv	a4,a5
2040455a:	fe842783          	lw	a5,-24(s0)
2040455e:	8ff9                	and	a5,a5,a4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
20404560:	fd842703          	lw	a4,-40(s0)
20404564:	00771693          	slli	a3,a4,0x7
20404568:	fec42703          	lw	a4,-20(s0)
2040456c:	9736                	add	a4,a4,a3
2040456e:	fd442683          	lw	a3,-44(s0)
20404572:	8695                	srai	a3,a3,0x5
20404574:	068a                	slli	a3,a3,0x2
20404576:	96ba                	add	a3,a3,a4
20404578:	6709                	lui	a4,0x2
2040457a:	9736                	add	a4,a4,a3
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
2040457c:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
2040457e:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:103
}
20404580:	853e                	mv	a0,a5
20404582:	50b2                	lw	ra,44(sp)
20404584:	5422                	lw	s0,40(sp)
20404586:	6145                	addi	sp,sp,48
20404588:	8082                	ret

2040458a <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
2040458a:	1101                	addi	sp,sp,-32
2040458c:	ce06                	sw	ra,28(sp)
2040458e:	cc22                	sw	s0,24(sp)
20404590:	1000                	addi	s0,sp,32
20404592:	fea42623          	sw	a0,-20(s0)
20404596:	feb42423          	sw	a1,-24(s0)
2040459a:	12c00513          	li	a0,300
2040459e:	098020ef          	jal	ra,20406636 <metal_shutdown>

204045a2 <__metal_plic0_handler>:
__metal_plic0_handler():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
204045a2:	7179                	addi	sp,sp,-48
204045a4:	d606                	sw	ra,44(sp)
204045a6:	d422                	sw	s0,40(sp)
204045a8:	1800                	addi	s0,sp,48
204045aa:	fca42e23          	sw	a0,-36(s0)
204045ae:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
204045b2:	fd842783          	lw	a5,-40(s0)
204045b6:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
204045ba:	b9afe0ef          	jal	ra,20402954 <__metal_myhart_id>
204045be:	87aa                	mv	a5,a0
204045c0:	853e                	mv	a0,a5
204045c2:	3b85                	jal	20404332 <__metal_driver_sifive_plic0_context_ids>
204045c4:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
204045c8:	fe842583          	lw	a1,-24(s0)
204045cc:	fec42503          	lw	a0,-20(s0)
204045d0:	3341                	jal	20404350 <__metal_plic0_claim_interrupt>
204045d2:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
204045d6:	fec42503          	lw	a0,-20(s0)
204045da:	397d                	jal	20404298 <__metal_driver_sifive_plic0_num_interrupts>
204045dc:	87aa                	mv	a5,a0
204045de:	fef42023          	sw	a5,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
204045e2:	fe442703          	lw	a4,-28(s0)
204045e6:	fe042783          	lw	a5,-32(s0)
204045ea:	04f77263          	bgeu	a4,a5,2040462e <__metal_plic0_handler+0x8c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
204045ee:	fec42703          	lw	a4,-20(s0)
204045f2:	fe442783          	lw	a5,-28(s0)
204045f6:	078a                	slli	a5,a5,0x2
204045f8:	97ba                	add	a5,a5,a4
204045fa:	479c                	lw	a5,8(a5)
204045fc:	cb8d                	beqz	a5,2040462e <__metal_plic0_handler+0x8c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
204045fe:	fec42703          	lw	a4,-20(s0)
20404602:	fe442783          	lw	a5,-28(s0)
20404606:	078a                	slli	a5,a5,0x2
20404608:	97ba                	add	a5,a5,a4
2040460a:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
2040460e:	fe442603          	lw	a2,-28(s0)
20404612:	fec42683          	lw	a3,-20(s0)
20404616:	fe442703          	lw	a4,-28(s0)
2040461a:	87ba                	mv	a5,a4
2040461c:	0786                	slli	a5,a5,0x1
2040461e:	97ba                	add	a5,a5,a4
20404620:	078e                	slli	a5,a5,0x3
20404622:	97b6                	add	a5,a5,a3
20404624:	0887a783          	lw	a5,136(a5)
20404628:	85be                	mv	a1,a5
2040462a:	8532                	mv	a0,a2
2040462c:	9802                	jalr	a6
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
2040462e:	fe442603          	lw	a2,-28(s0)
20404632:	fe842583          	lw	a1,-24(s0)
20404636:	fec42503          	lw	a0,-20(s0)
2040463a:	3b89                	jal	2040438c <__metal_plic0_complete_interrupt>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:121
}
2040463c:	0001                	nop
2040463e:	50b2                	lw	ra,44(sp)
20404640:	5422                	lw	s0,40(sp)
20404642:	6145                	addi	sp,sp,48
20404644:	8082                	ret

20404646 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
20404646:	7139                	addi	sp,sp,-64
20404648:	de06                	sw	ra,60(sp)
2040464a:	dc22                	sw	s0,56(sp)
2040464c:	0080                	addi	s0,sp,64
2040464e:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404652:	fcc42783          	lw	a5,-52(s0)
20404656:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
2040465a:	fe442783          	lw	a5,-28(s0)
2040465e:	43dc                	lw	a5,4(a5)
20404660:	12079a63          	bnez	a5,20404794 <__metal_driver_riscv_plic0_init+0x14e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20404664:	fe042623          	sw	zero,-20(s0)
20404668:	aa31                	j	20404784 <__metal_driver_riscv_plic0_init+0x13e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
2040466a:	fcc42503          	lw	a0,-52(s0)
2040466e:	c2bff0ef          	jal	ra,20404298 <__metal_driver_sifive_plic0_num_interrupts>
20404672:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20404676:	fec42583          	lw	a1,-20(s0)
2040467a:	fcc42503          	lw	a0,-52(s0)
2040467e:	c6bff0ef          	jal	ra,204042e8 <__metal_driver_sifive_plic0_interrupt_parents>
20404682:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20404686:	fec42583          	lw	a1,-20(s0)
2040468a:	fcc42503          	lw	a0,-52(s0)
2040468e:	c83ff0ef          	jal	ra,20404310 <__metal_driver_sifive_plic0_interrupt_lines>
20404692:	fca42c23          	sw	a0,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20404696:	fdc42783          	lw	a5,-36(s0)
2040469a:	439c                	lw	a5,0(a5)
2040469c:	439c                	lw	a5,0(a5)
2040469e:	fdc42503          	lw	a0,-36(s0)
204046a2:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
204046a4:	fe042423          	sw	zero,-24(s0)
204046a8:	a885                	j	20404718 <__metal_driver_riscv_plic0_init+0xd2>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
204046aa:	4681                	li	a3,0
204046ac:	fe842603          	lw	a2,-24(s0)
204046b0:	fec42583          	lw	a1,-20(s0)
204046b4:	fe442503          	lw	a0,-28(s0)
204046b8:	3d05                	jal	204044e8 <__metal_plic0_enable>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
204046ba:	fe842703          	lw	a4,-24(s0)
204046be:	fe042783          	lw	a5,-32(s0)
204046c2:	04f75663          	bge	a4,a5,2040470e <__metal_driver_riscv_plic0_init+0xc8>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
204046c6:	4601                	li	a2,0
204046c8:	fe842583          	lw	a1,-24(s0)
204046cc:	fcc42503          	lw	a0,-52(s0)
204046d0:	3349                	jal	20404452 <__metal_driver_riscv_plic0_set_priority>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
204046d2:	fe442703          	lw	a4,-28(s0)
204046d6:	fe842783          	lw	a5,-24(s0)
204046da:	078a                	slli	a5,a5,0x2
204046dc:	97ba                	add	a5,a5,a4
204046de:	0007a423          	sw	zero,8(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
204046e2:	fe442683          	lw	a3,-28(s0)
204046e6:	fe842703          	lw	a4,-24(s0)
204046ea:	87ba                	mv	a5,a4
204046ec:	0786                	slli	a5,a5,0x1
204046ee:	97ba                	add	a5,a5,a4
204046f0:	078e                	slli	a5,a5,0x3
204046f2:	97b6                	add	a5,a5,a3
204046f4:	0807a223          	sw	zero,132(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
204046f8:	fe442683          	lw	a3,-28(s0)
204046fc:	fe842703          	lw	a4,-24(s0)
20404700:	87ba                	mv	a5,a4
20404702:	0786                	slli	a5,a5,0x1
20404704:	97ba                	add	a5,a5,a4
20404706:	078e                	slli	a5,a5,0x3
20404708:	97b6                	add	a5,a5,a3
2040470a:	0807a423          	sw	zero,136(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
2040470e:	fe842783          	lw	a5,-24(s0)
20404712:	0785                	addi	a5,a5,1
20404714:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
20404718:	fe842703          	lw	a4,-24(s0)
2040471c:	3ff00793          	li	a5,1023
20404720:	f8e7d5e3          	bge	a5,a4,204046aa <__metal_driver_riscv_plic0_init+0x64>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20404724:	4601                	li	a2,0
20404726:	fec42583          	lw	a1,-20(s0)
2040472a:	fcc42503          	lw	a0,-52(s0)
2040472e:	ca5ff0ef          	jal	ra,204043d2 <__metal_plic0_set_threshold>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20404732:	fdc42783          	lw	a5,-36(s0)
20404736:	439c                	lw	a5,0(a5)
20404738:	4fdc                	lw	a5,28(a5)
2040473a:	fe442683          	lw	a3,-28(s0)
2040473e:	4601                	li	a2,0
20404740:	fd842583          	lw	a1,-40(s0)
20404744:	fdc42503          	lw	a0,-36(s0)
20404748:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
2040474a:	fdc42783          	lw	a5,-36(s0)
2040474e:	439c                	lw	a5,0(a5)
20404750:	4fd8                	lw	a4,28(a5)
20404752:	fe442683          	lw	a3,-28(s0)
20404756:	204047b7          	lui	a5,0x20404
2040475a:	5a278613          	addi	a2,a5,1442 # 204045a2 <__metal_plic0_handler>
2040475e:	fd842583          	lw	a1,-40(s0)
20404762:	fdc42503          	lw	a0,-36(s0)
20404766:	9702                	jalr	a4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
20404768:	fdc42783          	lw	a5,-36(s0)
2040476c:	439c                	lw	a5,0(a5)
2040476e:	53dc                	lw	a5,36(a5)
20404770:	fd842583          	lw	a1,-40(s0)
20404774:	fdc42503          	lw	a0,-36(s0)
20404778:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
2040477a:	fec42783          	lw	a5,-20(s0)
2040477e:	0785                	addi	a5,a5,1
20404780:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20404784:	fec42783          	lw	a5,-20(s0)
20404788:	eef051e3          	blez	a5,2040466a <__metal_driver_riscv_plic0_init+0x24>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
2040478c:	fe442783          	lw	a5,-28(s0)
20404790:	4705                	li	a4,1
20404792:	c3d8                	sw	a4,4(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20404794:	0001                	nop
20404796:	50f2                	lw	ra,60(sp)
20404798:	5462                	lw	s0,56(sp)
2040479a:	6121                	addi	sp,sp,64
2040479c:	8082                	ret

2040479e <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
2040479e:	7179                	addi	sp,sp,-48
204047a0:	d606                	sw	ra,44(sp)
204047a2:	d422                	sw	s0,40(sp)
204047a4:	1800                	addi	s0,sp,48
204047a6:	fca42e23          	sw	a0,-36(s0)
204047aa:	fcb42c23          	sw	a1,-40(s0)
204047ae:	fcc42a23          	sw	a2,-44(s0)
204047b2:	fcd42823          	sw	a3,-48(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204047b6:	fdc42783          	lw	a5,-36(s0)
204047ba:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204047be:	fdc42503          	lw	a0,-36(s0)
204047c2:	ad7ff0ef          	jal	ra,20404298 <__metal_driver_sifive_plic0_num_interrupts>
204047c6:	872a                	mv	a4,a0
204047c8:	fd842783          	lw	a5,-40(s0)
204047cc:	00e7c463          	blt	a5,a4,204047d4 <__metal_driver_riscv_plic0_register+0x36>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
204047d0:	57fd                	li	a5,-1
204047d2:	a051                	j	20404856 <__metal_driver_riscv_plic0_register+0xb8>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
204047d4:	fd442783          	lw	a5,-44(s0)
204047d8:	cf9d                	beqz	a5,20404816 <__metal_driver_riscv_plic0_register+0x78>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
204047da:	4609                	li	a2,2
204047dc:	fd842583          	lw	a1,-40(s0)
204047e0:	fdc42503          	lw	a0,-36(s0)
204047e4:	c6fff0ef          	jal	ra,20404452 <__metal_driver_riscv_plic0_set_priority>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
204047e8:	fec42703          	lw	a4,-20(s0)
204047ec:	fd842783          	lw	a5,-40(s0)
204047f0:	078a                	slli	a5,a5,0x2
204047f2:	97ba                	add	a5,a5,a4
204047f4:	fd442703          	lw	a4,-44(s0)
204047f8:	c798                	sw	a4,8(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
204047fa:	fec42683          	lw	a3,-20(s0)
204047fe:	fd842703          	lw	a4,-40(s0)
20404802:	87ba                	mv	a5,a4
20404804:	0786                	slli	a5,a5,0x1
20404806:	97ba                	add	a5,a5,a4
20404808:	078e                	slli	a5,a5,0x3
2040480a:	97b6                	add	a5,a5,a3
2040480c:	fd042703          	lw	a4,-48(s0)
20404810:	08e7a423          	sw	a4,136(a5)
20404814:	a081                	j	20404854 <__metal_driver_riscv_plic0_register+0xb6>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20404816:	4605                	li	a2,1
20404818:	fd842583          	lw	a1,-40(s0)
2040481c:	fdc42503          	lw	a0,-36(s0)
20404820:	c33ff0ef          	jal	ra,20404452 <__metal_driver_riscv_plic0_set_priority>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20404824:	fec42703          	lw	a4,-20(s0)
20404828:	fd842783          	lw	a5,-40(s0)
2040482c:	078a                	slli	a5,a5,0x2
2040482e:	97ba                	add	a5,a5,a4
20404830:	20404737          	lui	a4,0x20404
20404834:	58a70713          	addi	a4,a4,1418 # 2040458a <__metal_plic0_default_handler>
20404838:	c798                	sw	a4,8(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
2040483a:	fec42683          	lw	a3,-20(s0)
2040483e:	fd842703          	lw	a4,-40(s0)
20404842:	87ba                	mv	a5,a4
20404844:	0786                	slli	a5,a5,0x1
20404846:	97ba                	add	a5,a5,a4
20404848:	078e                	slli	a5,a5,0x3
2040484a:	97b6                	add	a5,a5,a3
2040484c:	fd042703          	lw	a4,-48(s0)
20404850:	08e7a223          	sw	a4,132(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20404854:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:185
}
20404856:	853e                	mv	a0,a5
20404858:	50b2                	lw	ra,44(sp)
2040485a:	5422                	lw	s0,40(sp)
2040485c:	6145                	addi	sp,sp,48
2040485e:	8082                	ret

20404860 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20404860:	7179                	addi	sp,sp,-48
20404862:	d606                	sw	ra,44(sp)
20404864:	d422                	sw	s0,40(sp)
20404866:	1800                	addi	s0,sp,48
20404868:	fca42e23          	sw	a0,-36(s0)
2040486c:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404870:	fdc42783          	lw	a5,-36(s0)
20404874:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20404878:	fdc42503          	lw	a0,-36(s0)
2040487c:	a1dff0ef          	jal	ra,20404298 <__metal_driver_sifive_plic0_num_interrupts>
20404880:	872a                	mv	a4,a0
20404882:	fd842783          	lw	a5,-40(s0)
20404886:	00e7c463          	blt	a5,a4,2040488e <__metal_driver_riscv_plic0_enable+0x2e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
2040488a:	57fd                	li	a5,-1
2040488c:	a829                	j	204048a6 <__metal_driver_riscv_plic0_enable+0x46>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
2040488e:	8c6fe0ef          	jal	ra,20402954 <__metal_myhart_id>
20404892:	87aa                	mv	a5,a0
20404894:	4685                	li	a3,1
20404896:	fd842603          	lw	a2,-40(s0)
2040489a:	85be                	mv	a1,a5
2040489c:	fec42503          	lw	a0,-20(s0)
204048a0:	c49ff0ef          	jal	ra,204044e8 <__metal_plic0_enable>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
204048a4:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:197
}
204048a6:	853e                	mv	a0,a5
204048a8:	50b2                	lw	ra,44(sp)
204048aa:	5422                	lw	s0,40(sp)
204048ac:	6145                	addi	sp,sp,48
204048ae:	8082                	ret

204048b0 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
204048b0:	7179                	addi	sp,sp,-48
204048b2:	d606                	sw	ra,44(sp)
204048b4:	d422                	sw	s0,40(sp)
204048b6:	1800                	addi	s0,sp,48
204048b8:	fca42e23          	sw	a0,-36(s0)
204048bc:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204048c0:	fdc42783          	lw	a5,-36(s0)
204048c4:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204048c8:	fdc42503          	lw	a0,-36(s0)
204048cc:	9cdff0ef          	jal	ra,20404298 <__metal_driver_sifive_plic0_num_interrupts>
204048d0:	872a                	mv	a4,a0
204048d2:	fd842783          	lw	a5,-40(s0)
204048d6:	00e7c463          	blt	a5,a4,204048de <__metal_driver_riscv_plic0_disable+0x2e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
204048da:	57fd                	li	a5,-1
204048dc:	a829                	j	204048f6 <__metal_driver_riscv_plic0_disable+0x46>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
204048de:	876fe0ef          	jal	ra,20402954 <__metal_myhart_id>
204048e2:	87aa                	mv	a5,a0
204048e4:	4681                	li	a3,0
204048e6:	fd842603          	lw	a2,-40(s0)
204048ea:	85be                	mv	a1,a5
204048ec:	fec42503          	lw	a0,-20(s0)
204048f0:	bf9ff0ef          	jal	ra,204044e8 <__metal_plic0_enable>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
204048f4:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:208
}
204048f6:	853e                	mv	a0,a5
204048f8:	50b2                	lw	ra,44(sp)
204048fa:	5422                	lw	s0,40(sp)
204048fc:	6145                	addi	sp,sp,48
204048fe:	8082                	ret

20404900 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20404900:	1101                	addi	sp,sp,-32
20404902:	ce06                	sw	ra,28(sp)
20404904:	cc22                	sw	s0,24(sp)
20404906:	1000                	addi	s0,sp,32
20404908:	fea42623          	sw	a0,-20(s0)
2040490c:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20404910:	844fe0ef          	jal	ra,20402954 <__metal_myhart_id>
20404914:	87aa                	mv	a5,a0
20404916:	fe842603          	lw	a2,-24(s0)
2040491a:	85be                	mv	a1,a5
2040491c:	fec42503          	lw	a0,-20(s0)
20404920:	ab3ff0ef          	jal	ra,204043d2 <__metal_plic0_set_threshold>
20404924:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20404926:	853e                	mv	a0,a5
20404928:	40f2                	lw	ra,28(sp)
2040492a:	4462                	lw	s0,24(sp)
2040492c:	6105                	addi	sp,sp,32
2040492e:	8082                	ret

20404930 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20404930:	1101                	addi	sp,sp,-32
20404932:	ce06                	sw	ra,28(sp)
20404934:	cc22                	sw	s0,24(sp)
20404936:	1000                	addi	s0,sp,32
20404938:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
2040493c:	818fe0ef          	jal	ra,20402954 <__metal_myhart_id>
20404940:	87aa                	mv	a5,a0
20404942:	85be                	mv	a1,a5
20404944:	fec42503          	lw	a0,-20(s0)
20404948:	ad1ff0ef          	jal	ra,20404418 <__metal_plic0_get_threshold>
2040494c:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:219
}
2040494e:	853e                	mv	a0,a5
20404950:	40f2                	lw	ra,28(sp)
20404952:	4462                	lw	s0,24(sp)
20404954:	6105                	addi	sp,sp,32
20404956:	8082                	ret

20404958 <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
20404958:	7179                	addi	sp,sp,-48
2040495a:	d606                	sw	ra,44(sp)
2040495c:	d422                	sw	s0,40(sp)
2040495e:	1800                	addi	s0,sp,48
20404960:	fca42e23          	sw	a0,-36(s0)
20404964:	fcb42c23          	sw	a1,-40(s0)
20404968:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
2040496c:	fe042223          	sw	zero,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404970:	fdc42783          	lw	a5,-36(s0)
20404974:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20404978:	fdc42503          	lw	a0,-36(s0)
2040497c:	91dff0ef          	jal	ra,20404298 <__metal_driver_sifive_plic0_num_interrupts>
20404980:	872a                	mv	a4,a0
20404982:	fd442783          	lw	a5,-44(s0)
20404986:	00e7c863          	blt	a5,a4,20404996 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
2040498a:	57fd                	li	a5,-1
2040498c:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20404990:	fe442783          	lw	a5,-28(s0)
20404994:	a899                	j	204049ea <__metal_driver_riscv_plic0_affinity_enable+0x92>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20404996:	fe042623          	sw	zero,-20(s0)
2040499a:	a099                	j	204049e0 <__metal_driver_riscv_plic0_affinity_enable+0x88>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
2040499c:	fec42783          	lw	a5,-20(s0)
204049a0:	c795                	beqz	a5,204049cc <__metal_driver_riscv_plic0_affinity_enable+0x74>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
204049a2:	4685                	li	a3,1
204049a4:	fd442603          	lw	a2,-44(s0)
204049a8:	fec42583          	lw	a1,-20(s0)
204049ac:	fe842503          	lw	a0,-24(s0)
204049b0:	b39ff0ef          	jal	ra,204044e8 <__metal_plic0_enable>
204049b4:	87aa                	mv	a5,a0
204049b6:	0017f713          	andi	a4,a5,1
204049ba:	fec42783          	lw	a5,-20(s0)
204049be:	00f71733          	sll	a4,a4,a5
204049c2:	fe442783          	lw	a5,-28(s0)
204049c6:	8fd9                	or	a5,a5,a4
204049c8:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
204049cc:	fec42783          	lw	a5,-20(s0)
204049d0:	0785                	addi	a5,a5,1
204049d2:	fef42623          	sw	a5,-20(s0)
204049d6:	fd842783          	lw	a5,-40(s0)
204049da:	8385                	srli	a5,a5,0x1
204049dc:	fcf42c23          	sw	a5,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
204049e0:	fd842783          	lw	a5,-40(s0)
204049e4:	ffc5                	bnez	a5,2040499c <__metal_driver_riscv_plic0_affinity_enable+0x44>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
204049e6:	fe442783          	lw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
204049ea:	853e                	mv	a0,a5
204049ec:	50b2                	lw	ra,44(sp)
204049ee:	5422                	lw	s0,40(sp)
204049f0:	6145                	addi	sp,sp,48
204049f2:	8082                	ret

204049f4 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
204049f4:	7179                	addi	sp,sp,-48
204049f6:	d606                	sw	ra,44(sp)
204049f8:	d422                	sw	s0,40(sp)
204049fa:	1800                	addi	s0,sp,48
204049fc:	fca42e23          	sw	a0,-36(s0)
20404a00:	fcb42c23          	sw	a1,-40(s0)
20404a04:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
20404a08:	fe042223          	sw	zero,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404a0c:	fdc42783          	lw	a5,-36(s0)
20404a10:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20404a14:	fdc42503          	lw	a0,-36(s0)
20404a18:	881ff0ef          	jal	ra,20404298 <__metal_driver_sifive_plic0_num_interrupts>
20404a1c:	872a                	mv	a4,a0
20404a1e:	fd442783          	lw	a5,-44(s0)
20404a22:	00e7c863          	blt	a5,a4,20404a32 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20404a26:	57fd                	li	a5,-1
20404a28:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
20404a2c:	fe442783          	lw	a5,-28(s0)
20404a30:	a899                	j	20404a86 <__metal_driver_riscv_plic0_affinity_disable+0x92>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20404a32:	fe042623          	sw	zero,-20(s0)
20404a36:	a099                	j	20404a7c <__metal_driver_riscv_plic0_affinity_disable+0x88>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
20404a38:	fec42783          	lw	a5,-20(s0)
20404a3c:	c795                	beqz	a5,20404a68 <__metal_driver_riscv_plic0_affinity_disable+0x74>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20404a3e:	4681                	li	a3,0
20404a40:	fd442603          	lw	a2,-44(s0)
20404a44:	fec42583          	lw	a1,-20(s0)
20404a48:	fe842503          	lw	a0,-24(s0)
20404a4c:	a9dff0ef          	jal	ra,204044e8 <__metal_plic0_enable>
20404a50:	87aa                	mv	a5,a0
20404a52:	0017f713          	andi	a4,a5,1
20404a56:	fec42783          	lw	a5,-20(s0)
20404a5a:	00f71733          	sll	a4,a4,a5
20404a5e:	fe442783          	lw	a5,-28(s0)
20404a62:	8fd9                	or	a5,a5,a4
20404a64:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20404a68:	fec42783          	lw	a5,-20(s0)
20404a6c:	0785                	addi	a5,a5,1
20404a6e:	fef42623          	sw	a5,-20(s0)
20404a72:	fd842783          	lw	a5,-40(s0)
20404a76:	8385                	srli	a5,a5,0x1
20404a78:	fcf42c23          	sw	a5,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
20404a7c:	fd842783          	lw	a5,-40(s0)
20404a80:	ffc5                	bnez	a5,20404a38 <__metal_driver_riscv_plic0_affinity_disable+0x44>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20404a82:	fe442783          	lw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20404a86:	853e                	mv	a0,a5
20404a88:	50b2                	lw	ra,44(sp)
20404a8a:	5422                	lw	s0,40(sp)
20404a8c:	6145                	addi	sp,sp,48
20404a8e:	8082                	ret

20404a90 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20404a90:	7179                	addi	sp,sp,-48
20404a92:	d606                	sw	ra,44(sp)
20404a94:	d422                	sw	s0,40(sp)
20404a96:	1800                	addi	s0,sp,48
20404a98:	fca42e23          	sw	a0,-36(s0)
20404a9c:	fcb42c23          	sw	a1,-40(s0)
20404aa0:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20404aa4:	fe042423          	sw	zero,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
20404aa8:	fe042623          	sw	zero,-20(s0)
20404aac:	a091                	j	20404af0 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
20404aae:	fec42783          	lw	a5,-20(s0)
20404ab2:	c78d                	beqz	a5,20404adc <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20404ab4:	fd442603          	lw	a2,-44(s0)
20404ab8:	fec42583          	lw	a1,-20(s0)
20404abc:	fdc42503          	lw	a0,-36(s0)
20404ac0:	913ff0ef          	jal	ra,204043d2 <__metal_plic0_set_threshold>
20404ac4:	87aa                	mv	a5,a0
20404ac6:	0017f713          	andi	a4,a5,1
20404aca:	fec42783          	lw	a5,-20(s0)
20404ace:	00f71733          	sll	a4,a4,a5
20404ad2:	fe842783          	lw	a5,-24(s0)
20404ad6:	8fd9                	or	a5,a5,a4
20404ad8:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20404adc:	fec42783          	lw	a5,-20(s0)
20404ae0:	0785                	addi	a5,a5,1
20404ae2:	fef42623          	sw	a5,-20(s0)
20404ae6:	fd842783          	lw	a5,-40(s0)
20404aea:	8385                	srli	a5,a5,0x1
20404aec:	fcf42c23          	sw	a5,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20404af0:	fd842783          	lw	a5,-40(s0)
20404af4:	ffcd                	bnez	a5,20404aae <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20404af6:	fe842783          	lw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:281
}
20404afa:	853e                	mv	a0,a5
20404afc:	50b2                	lw	ra,44(sp)
20404afe:	5422                	lw	s0,40(sp)
20404b00:	6145                	addi	sp,sp,48
20404b02:	8082                	ret

20404b04 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20404b04:	1101                	addi	sp,sp,-32
20404b06:	ce06                	sw	ra,28(sp)
20404b08:	cc22                	sw	s0,24(sp)
20404b0a:	1000                	addi	s0,sp,32
20404b0c:	fea42623          	sw	a0,-20(s0)
20404b10:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20404b14:	fe842583          	lw	a1,-24(s0)
20404b18:	fec42503          	lw	a0,-20(s0)
20404b1c:	8fdff0ef          	jal	ra,20404418 <__metal_plic0_get_threshold>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20404b20:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/riscv_plic0.c:287
}
20404b22:	853e                	mv	a0,a5
20404b24:	40f2                	lw	ra,28(sp)
20404b26:	4462                	lw	s0,24(sp)
20404b28:	6105                	addi	sp,sp,32
20404b2a:	8082                	ret

20404b2c <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1037



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20404b2c:	1101                	addi	sp,sp,-32
20404b2e:	ce22                	sw	s0,28(sp)
20404b30:	1000                	addi	s0,sp,32
20404b32:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1038
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20404b36:	800007b7          	lui	a5,0x80000
20404b3a:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffebfc>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1039
}
20404b3e:	853e                	mv	a0,a5
20404b40:	4472                	lw	s0,28(sp)
20404b42:	6105                	addi	sp,sp,32
20404b44:	8082                	ret

20404b46 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1042

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20404b46:	1101                	addi	sp,sp,-32
20404b48:	ce22                	sw	s0,28(sp)
20404b4a:	1000                	addi	s0,sp,32
20404b4c:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1043
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20404b50:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1044
}
20404b54:	853e                	mv	a0,a5
20404b56:	4472                	lw	s0,28(sp)
20404b58:	6105                	addi	sp,sp,32
20404b5a:	8082                	ret

20404b5c <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1052
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20404b5c:	1101                	addi	sp,sp,-32
20404b5e:	ce22                	sw	s0,28(sp)
20404b60:	1000                	addi	s0,sp,32
20404b62:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1053
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20404b66:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1054
}
20404b68:	853e                	mv	a0,a5
20404b6a:	4472                	lw	s0,28(sp)
20404b6c:	6105                	addi	sp,sp,32
20404b6e:	8082                	ret

20404b70 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1169
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20404b70:	1141                	addi	sp,sp,-16
20404b72:	c622                	sw	s0,12(sp)
20404b74:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20404b76:	204017b7          	lui	a5,0x20401
20404b7a:	f4c78793          	addi	a5,a5,-180 # 20400f4c <__metal_driver_vtable_sifive_fe310_g000_prci>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1171
}
20404b7e:	853e                	mv	a0,a5
20404b80:	4432                	lw	s0,12(sp)
20404b82:	0141                	addi	sp,sp,16
20404b84:	8082                	ret

20404b86 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20404b86:	7139                	addi	sp,sp,-64
20404b88:	de06                	sw	ra,60(sp)
20404b8a:	dc22                	sw	s0,56(sp)
20404b8c:	0080                	addi	s0,sp,64
20404b8e:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20404b92:	fcc42503          	lw	a0,-52(s0)
20404b96:	3f59                	jal	20404b2c <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20404b98:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20404b9c:	fcc42503          	lw	a0,-52(s0)
20404ba0:	3f75                	jal	20404b5c <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20404ba2:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20404ba6:	fcc42503          	lw	a0,-52(s0)
20404baa:	3f71                	jal	20404b46 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20404bac:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20404bb0:	37c1                	jal	20404b70 <__metal_driver_sifive_fe310_g000_prci_vtable>
20404bb2:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20404bb6:	fe042783          	lw	a5,-32(s0)
20404bba:	439c                	lw	a5,0(a5)
20404bbc:	fe842583          	lw	a1,-24(s0)
20404bc0:	fe442503          	lw	a0,-28(s0)
20404bc4:	9782                	jalr	a5
20404bc6:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20404bca:	fdc42703          	lw	a4,-36(s0)
20404bce:	400007b7          	lui	a5,0x40000
20404bd2:	8ff9                	and	a5,a5,a4
20404bd4:	e399                	bnez	a5,20404bda <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20404bd6:	57fd                	li	a5,-1
20404bd8:	a025                	j	20404c00 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20404bda:	fdc42783          	lw	a5,-36(s0)
20404bde:	0007c463          	bltz	a5,20404be6 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
20404be2:	57fd                	li	a5,-1
20404be4:	a831                	j	20404c00 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20404be6:	fec42503          	lw	a0,-20(s0)
20404bea:	0e9010ef          	jal	ra,204064d2 <metal_clock_get_rate_hz>
20404bee:	87aa                	mv	a5,a0
20404bf0:	873e                	mv	a4,a5
20404bf2:	fdc42783          	lw	a5,-36(s0)
20404bf6:	03f7f793          	andi	a5,a5,63
20404bfa:	0785                	addi	a5,a5,1
20404bfc:	02f757b3          	divu	a5,a4,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20404c00:	853e                	mv	a0,a5
20404c02:	50f2                	lw	ra,60(sp)
20404c04:	5462                	lw	s0,56(sp)
20404c06:	6121                	addi	sp,sp,64
20404c08:	8082                	ret

20404c0a <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20404c0a:	1101                	addi	sp,sp,-32
20404c0c:	ce06                	sw	ra,28(sp)
20404c0e:	cc22                	sw	s0,24(sp)
20404c10:	1000                	addi	s0,sp,32
20404c12:	fea42623          	sw	a0,-20(s0)
20404c16:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20404c1a:	fec42503          	lw	a0,-20(s0)
20404c1e:	37a5                	jal	20404b86 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20404c20:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20404c22:	853e                	mv	a0,a5
20404c24:	40f2                	lw	ra,28(sp)
20404c26:	4462                	lw	s0,24(sp)
20404c28:	6105                	addi	sp,sp,32
20404c2a:	8082                	ret

20404c2c <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1060
{
20404c2c:	1101                	addi	sp,sp,-32
20404c2e:	ce22                	sw	s0,28(sp)
20404c30:	1000                	addi	s0,sp,32
20404c32:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1061
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20404c36:	800007b7          	lui	a5,0x80000
20404c3a:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffebf0>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1062
}
20404c3e:	853e                	mv	a0,a5
20404c40:	4472                	lw	s0,28(sp)
20404c42:	6105                	addi	sp,sp,32
20404c44:	8082                	ret

20404c46 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1065
{
20404c46:	1101                	addi	sp,sp,-32
20404c48:	ce22                	sw	s0,28(sp)
20404c4a:	1000                	addi	s0,sp,32
20404c4c:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1066
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20404c50:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1067
}
20404c54:	853e                	mv	a0,a5
20404c56:	4472                	lw	s0,28(sp)
20404c58:	6105                	addi	sp,sp,32
20404c5a:	8082                	ret

20404c5c <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1070
{
20404c5c:	1101                	addi	sp,sp,-32
20404c5e:	ce22                	sw	s0,28(sp)
20404c60:	1000                	addi	s0,sp,32
20404c62:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1071
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20404c66:	4791                	li	a5,4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1072
}
20404c68:	853e                	mv	a0,a5
20404c6a:	4472                	lw	s0,28(sp)
20404c6c:	6105                	addi	sp,sp,32
20404c6e:	8082                	ret

20404c70 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1169
{
20404c70:	1141                	addi	sp,sp,-16
20404c72:	c622                	sw	s0,12(sp)
20404c74:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20404c76:	204017b7          	lui	a5,0x20401
20404c7a:	f4c78793          	addi	a5,a5,-180 # 20400f4c <__metal_driver_vtable_sifive_fe310_g000_prci>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1171
}
20404c7e:	853e                	mv	a0,a5
20404c80:	4432                	lw	s0,12(sp)
20404c82:	0141                	addi	sp,sp,16
20404c84:	8082                	ret

20404c86 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20404c86:	7139                	addi	sp,sp,-64
20404c88:	de06                	sw	ra,60(sp)
20404c8a:	dc22                	sw	s0,56(sp)
20404c8c:	0080                	addi	s0,sp,64
20404c8e:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20404c92:	fcc42503          	lw	a0,-52(s0)
20404c96:	3f59                	jal	20404c2c <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20404c98:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20404c9c:	fcc42503          	lw	a0,-52(s0)
20404ca0:	3f75                	jal	20404c5c <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20404ca2:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20404ca6:	fcc42503          	lw	a0,-52(s0)
20404caa:	3f71                	jal	20404c46 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20404cac:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20404cb0:	37c1                	jal	20404c70 <__metal_driver_sifive_fe310_g000_prci_vtable>
20404cb2:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20404cb6:	fe042783          	lw	a5,-32(s0)
20404cba:	439c                	lw	a5,0(a5)
20404cbc:	fe842583          	lw	a1,-24(s0)
20404cc0:	fe442503          	lw	a0,-28(s0)
20404cc4:	9782                	jalr	a5
20404cc6:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20404cca:	fdc42703          	lw	a4,-36(s0)
20404cce:	400007b7          	lui	a5,0x40000
20404cd2:	8ff9                	and	a5,a5,a4
20404cd4:	e399                	bnez	a5,20404cda <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20404cd6:	57fd                	li	a5,-1
20404cd8:	a821                	j	20404cf0 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20404cda:	fdc42783          	lw	a5,-36(s0)
20404cde:	0007c463          	bltz	a5,20404ce6 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
20404ce2:	57fd                	li	a5,-1
20404ce4:	a031                	j	20404cf0 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20404ce6:	fec42503          	lw	a0,-20(s0)
20404cea:	7e8010ef          	jal	ra,204064d2 <metal_clock_get_rate_hz>
20404cee:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
20404cf0:	853e                	mv	a0,a5
20404cf2:	50f2                	lw	ra,60(sp)
20404cf4:	5462                	lw	s0,56(sp)
20404cf6:	6121                	addi	sp,sp,64
20404cf8:	8082                	ret

20404cfa <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20404cfa:	1101                	addi	sp,sp,-32
20404cfc:	ce06                	sw	ra,28(sp)
20404cfe:	cc22                	sw	s0,24(sp)
20404d00:	1000                	addi	s0,sp,32
20404d02:	fea42623          	sw	a0,-20(s0)
20404d06:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20404d0a:	fec42503          	lw	a0,-20(s0)
20404d0e:	3fa5                	jal	20404c86 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20404d10:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20404d12:	853e                	mv	a0,a5
20404d14:	40f2                	lw	ra,28(sp)
20404d16:	4462                	lw	s0,24(sp)
20404d18:	6105                	addi	sp,sp,32
20404d1a:	8082                	ret

20404d1c <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1121
{
20404d1c:	1101                	addi	sp,sp,-32
20404d1e:	ce22                	sw	s0,28(sp)
20404d20:	1000                	addi	s0,sp,32
20404d22:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1122
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20404d26:	800007b7          	lui	a5,0x80000
20404d2a:	77878793          	addi	a5,a5,1912 # 80000778 <metal_segment_heap_target_end+0xfffff308>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1123
}
20404d2e:	853e                	mv	a0,a5
20404d30:	4472                	lw	s0,28(sp)
20404d32:	6105                	addi	sp,sp,32
20404d34:	8082                	ret

20404d36 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1126
{
20404d36:	1101                	addi	sp,sp,-32
20404d38:	ce22                	sw	s0,28(sp)
20404d3a:	1000                	addi	s0,sp,32
20404d3c:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1127
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20404d40:	800007b7          	lui	a5,0x80000
20404d44:	78478793          	addi	a5,a5,1924 # 80000784 <metal_segment_heap_target_end+0xfffff314>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1128
}
20404d48:	853e                	mv	a0,a5
20404d4a:	4472                	lw	s0,28(sp)
20404d4c:	6105                	addi	sp,sp,32
20404d4e:	8082                	ret

20404d50 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1131
{
20404d50:	1101                	addi	sp,sp,-32
20404d52:	ce22                	sw	s0,28(sp)
20404d54:	1000                	addi	s0,sp,32
20404d56:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1132
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20404d5a:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1133
}
20404d5e:	853e                	mv	a0,a5
20404d60:	4472                	lw	s0,28(sp)
20404d62:	6105                	addi	sp,sp,32
20404d64:	8082                	ret

20404d66 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1136
{
20404d66:	1101                	addi	sp,sp,-32
20404d68:	ce22                	sw	s0,28(sp)
20404d6a:	1000                	addi	s0,sp,32
20404d6c:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1137
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20404d70:	47b1                	li	a5,12
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1138
}
20404d72:	853e                	mv	a0,a5
20404d74:	4472                	lw	s0,28(sp)
20404d76:	6105                	addi	sp,sp,32
20404d78:	8082                	ret

20404d7a <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1141
{
20404d7a:	1141                	addi	sp,sp,-16
20404d7c:	c622                	sw	s0,12(sp)
20404d7e:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1142
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20404d80:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1143
}
20404d84:	853e                	mv	a0,a5
20404d86:	4432                	lw	s0,12(sp)
20404d88:	0141                	addi	sp,sp,16
20404d8a:	8082                	ret

20404d8c <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1146
{
20404d8c:	1141                	addi	sp,sp,-16
20404d8e:	c622                	sw	s0,12(sp)
20404d90:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1147
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20404d92:	47a1                	li	a5,8
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1148
}
20404d94:	853e                	mv	a0,a5
20404d96:	4432                	lw	s0,12(sp)
20404d98:	0141                	addi	sp,sp,16
20404d9a:	8082                	ret

20404d9c <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1151
{
20404d9c:	1141                	addi	sp,sp,-16
20404d9e:	c622                	sw	s0,12(sp)
20404da0:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1152
		return 16000000;
20404da2:	00f427b7          	lui	a5,0xf42
20404da6:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1153
}
20404daa:	853e                	mv	a0,a5
20404dac:	4432                	lw	s0,12(sp)
20404dae:	0141                	addi	sp,sp,16
20404db0:	8082                	ret

20404db2 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1159
{
20404db2:	1141                	addi	sp,sp,-16
20404db4:	c622                	sw	s0,12(sp)
20404db6:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20404db8:	100087b7          	lui	a5,0x10008
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1161
}
20404dbc:	853e                	mv	a0,a5
20404dbe:	4432                	lw	s0,12(sp)
20404dc0:	0141                	addi	sp,sp,16
20404dc2:	8082                	ret

20404dc4 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1169
{
20404dc4:	1141                	addi	sp,sp,-16
20404dc6:	c622                	sw	s0,12(sp)
20404dc8:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20404dca:	204017b7          	lui	a5,0x20401
20404dce:	f4c78793          	addi	a5,a5,-180 # 20400f4c <__metal_driver_vtable_sifive_fe310_g000_prci>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1171
}
20404dd2:	853e                	mv	a0,a5
20404dd4:	4432                	lw	s0,12(sp)
20404dd6:	0141                	addi	sp,sp,16
20404dd8:	8082                	ret

20404dda <get_pll_config_freq>:
get_pll_config_freq():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20404dda:	1101                	addi	sp,sp,-32
20404ddc:	ce22                	sw	s0,28(sp)
20404dde:	1000                	addi	s0,sp,32
20404de0:	fea42623          	sw	a0,-20(s0)
20404de4:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
20404de8:	fe842783          	lw	a5,-24(s0)
20404dec:	479c                	lw	a5,8(a5)
20404dee:	fec42703          	lw	a4,-20(s0)
20404df2:	00f76963          	bltu	a4,a5,20404e04 <get_pll_config_freq+0x2a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20404df6:	fe842783          	lw	a5,-24(s0)
20404dfa:	47dc                	lw	a5,12(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20404dfc:	fec42703          	lw	a4,-20(s0)
20404e00:	00e7f463          	bgeu	a5,a4,20404e08 <get_pll_config_freq+0x2e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20404e04:	57fd                	li	a5,-1
20404e06:	a829                	j	20404e20 <get_pll_config_freq+0x46>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20404e08:	fe842783          	lw	a5,-24(s0)
20404e0c:	4398                	lw	a4,0(a5)
20404e0e:	fec42783          	lw	a5,-20(s0)
20404e12:	02f70733          	mul	a4,a4,a5
20404e16:	fe842783          	lw	a5,-24(s0)
20404e1a:	43dc                	lw	a5,4(a5)
20404e1c:	02f757b3          	divu	a5,a4,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20404e20:	853e                	mv	a0,a5
20404e22:	4472                	lw	s0,28(sp)
20404e24:	6105                	addi	sp,sp,32
20404e26:	8082                	ret

20404e28 <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20404e28:	7139                	addi	sp,sp,-64
20404e2a:	de06                	sw	ra,60(sp)
20404e2c:	dc22                	sw	s0,56(sp)
20404e2e:	0080                	addi	s0,sp,64
20404e30:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20404e34:	fcc42783          	lw	a5,-52(s0)
20404e38:	853e                	mv	a0,a5
20404e3a:	3df5                	jal	20404d36 <__metal_driver_sifive_fe310_g000_pll_pllref>
20404e3c:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20404e40:	3fb1                	jal	20404d9c <__metal_driver_sifive_fe310_g000_pll_init_rate>
20404e42:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20404e46:	3799                	jal	20404d8c <__metal_driver_sifive_fe310_g000_pll_config_offset>
20404e48:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20404e4c:	379d                	jal	20404db2 <__metal_driver_sifive_fe310_g000_prci_base>
20404e4e:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20404e52:	fe042703          	lw	a4,-32(s0)
20404e56:	fe442783          	lw	a5,-28(s0)
20404e5a:	97ba                	add	a5,a5,a4
20404e5c:	fcf42e23          	sw	a5,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20404e60:	fcc42783          	lw	a5,-52(s0)
20404e64:	43dc                	lw	a5,4(a5)
20404e66:	853e                	mv	a0,a5
20404e68:	5d4010ef          	jal	ra,2040643c <_metal_clock_call_all_callbacks>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20404e6c:	fdc42783          	lw	a5,-36(s0)
20404e70:	4398                	lw	a4,0(a5)
20404e72:	67c1                	lui	a5,0x10
20404e74:	8ff9                	and	a5,a5,a4
20404e76:	cb91                	beqz	a5,20404e8a <__metal_driver_sifive_fe310_g000_pll_init+0x62>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20404e78:	fdc42783          	lw	a5,-36(s0)
20404e7c:	4398                	lw	a4,0(a5)
20404e7e:	77c1                	lui	a5,0xffff0
20404e80:	17fd                	addi	a5,a5,-1
20404e82:	8f7d                	and	a4,a4,a5
20404e84:	fdc42783          	lw	a5,-36(s0)
20404e88:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20404e8a:	fec42783          	lw	a5,-20(s0)
20404e8e:	cb91                	beqz	a5,20404ea2 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20404e90:	fdc42783          	lw	a5,-36(s0)
20404e94:	4398                	lw	a4,0(a5)
20404e96:	000207b7          	lui	a5,0x20
20404e9a:	8f5d                	or	a4,a4,a5
20404e9c:	fdc42783          	lw	a5,-36(s0)
20404ea0:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20404ea2:	fcc42783          	lw	a5,-52(s0)
20404ea6:	439c                	lw	a5,0(a5)
20404ea8:	43d8                	lw	a4,4(a5)
20404eaa:	fcc42783          	lw	a5,-52(s0)
20404eae:	fe842583          	lw	a1,-24(s0)
20404eb2:	853e                	mv	a0,a5
20404eb4:	9702                	jalr	a4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20404eb6:	fcc42783          	lw	a5,-52(s0)
20404eba:	479c                	lw	a5,8(a5)
20404ebc:	853e                	mv	a0,a5
20404ebe:	57e010ef          	jal	ra,2040643c <_metal_clock_call_all_callbacks>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20404ec2:	0001                	nop
20404ec4:	50f2                	lw	ra,60(sp)
20404ec6:	5462                	lw	s0,56(sp)
20404ec8:	6121                	addi	sp,sp,64
20404eca:	8082                	ret

20404ecc <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20404ecc:	711d                	addi	sp,sp,-96
20404ece:	ce86                	sw	ra,92(sp)
20404ed0:	cca2                	sw	s0,88(sp)
20404ed2:	1080                	addi	s0,sp,96
20404ed4:	faa42623          	sw	a0,-84(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20404ed8:	fac42503          	lw	a0,-84(s0)
20404edc:	3da9                	jal	20404d36 <__metal_driver_sifive_fe310_g000_pll_pllref>
20404ede:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20404ee2:	fac42503          	lw	a0,-84(s0)
20404ee6:	3d1d                	jal	20404d1c <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20404ee8:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20404eec:	fac42503          	lw	a0,-84(s0)
20404ef0:	3d71                	jal	20404d8c <__metal_driver_sifive_fe310_g000_pll_config_offset>
20404ef2:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20404ef6:	fac42503          	lw	a0,-84(s0)
20404efa:	3541                	jal	20404d7a <__metal_driver_sifive_fe310_g000_pll_config_base>
20404efc:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20404f00:	fac42503          	lw	a0,-84(s0)
20404f04:	358d                	jal	20404d66 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20404f06:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20404f0a:	fac42503          	lw	a0,-84(s0)
20404f0e:	3589                	jal	20404d50 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20404f10:	fca42c23          	sw	a0,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20404f14:	3d45                	jal	20404dc4 <__metal_driver_sifive_fe310_g000_prci_vtable>
20404f16:	fca42a23          	sw	a0,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
20404f1a:	fd442783          	lw	a5,-44(s0)
20404f1e:	439c                	lw	a5,0(a5)
20404f20:	fe442583          	lw	a1,-28(s0)
20404f24:	fe042503          	lw	a0,-32(s0)
20404f28:	9782                	jalr	a5
20404f2a:	fca42823          	sw	a0,-48(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20404f2e:	fd442783          	lw	a5,-44(s0)
20404f32:	439c                	lw	a5,0(a5)
20404f34:	fdc42583          	lw	a1,-36(s0)
20404f38:	fd842503          	lw	a0,-40(s0)
20404f3c:	9782                	jalr	a5
20404f3e:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20404f42:	fd042703          	lw	a4,-48(s0)
20404f46:	67c1                	lui	a5,0x10
20404f48:	8f7d                	and	a4,a4,a5
20404f4a:	67c1                	lui	a5,0x10
20404f4c:	00f77863          	bgeu	a4,a5,20404f5c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20404f50:	fe842503          	lw	a0,-24(s0)
20404f54:	57e010ef          	jal	ra,204064d2 <metal_clock_get_rate_hz>
20404f58:	87aa                	mv	a5,a0
20404f5a:	a8e1                	j	20405032 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20404f5c:	fd042703          	lw	a4,-48(s0)
20404f60:	000207b7          	lui	a5,0x20
20404f64:	8f7d                	and	a4,a4,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20404f66:	000207b7          	lui	a5,0x20
20404f6a:	00f76563          	bltu	a4,a5,20404f74 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20404f6e:	fec42783          	lw	a5,-20(s0)
20404f72:	a019                	j	20404f78 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20404f74:	fe842783          	lw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20404f78:	853e                	mv	a0,a5
20404f7a:	558010ef          	jal	ra,204064d2 <metal_clock_get_rate_hz>
20404f7e:	fca42423          	sw	a0,-56(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20404f82:	fd042703          	lw	a4,-48(s0)
20404f86:	000407b7          	lui	a5,0x40
20404f8a:	8f7d                	and	a4,a4,a5
20404f8c:	000407b7          	lui	a5,0x40
20404f90:	00f76563          	bltu	a4,a5,20404f9a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20404f94:	fc842783          	lw	a5,-56(s0)
20404f98:	a869                	j	20405032 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20404f9a:	fd042783          	lw	a5,-48(s0)
20404f9e:	8b9d                	andi	a5,a5,7
20404fa0:	0785                	addi	a5,a5,1
20404fa2:	fcf42223          	sw	a5,-60(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20404fa6:	fd042783          	lw	a5,-48(s0)
20404faa:	3f07f793          	andi	a5,a5,1008
20404fae:	8391                	srli	a5,a5,0x4
20404fb0:	0785                	addi	a5,a5,1
20404fb2:	0786                	slli	a5,a5,0x1
20404fb4:	fcf42023          	sw	a5,-64(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20404fb8:	fd042703          	lw	a4,-48(s0)
20404fbc:	6785                	lui	a5,0x1
20404fbe:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20404fc2:	8f7d                	and	a4,a4,a5
20404fc4:	3ff00793          	li	a5,1023
20404fc8:	00e7e463          	bltu	a5,a4,20404fd0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20404fcc:	57fd                	li	a5,-1
20404fce:	a095                	j	20405032 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20404fd0:	fd042703          	lw	a4,-48(s0)
20404fd4:	6785                	lui	a5,0x1
20404fd6:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20404fda:	8ff9                	and	a5,a5,a4
20404fdc:	83a9                	srli	a5,a5,0xa
20404fde:	4705                	li	a4,1
20404fe0:	00f717b3          	sll	a5,a4,a5
20404fe4:	faf42e23          	sw	a5,-68(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20404fe8:	fc842703          	lw	a4,-56(s0)
20404fec:	fc442783          	lw	a5,-60(s0)
20404ff0:	02f74733          	div	a4,a4,a5
20404ff4:	fc042783          	lw	a5,-64(s0)
20404ff8:	02f70733          	mul	a4,a4,a5
20404ffc:	fbc42783          	lw	a5,-68(s0)
20405000:	02f747b3          	div	a5,a4,a5
20405004:	faf42c23          	sw	a5,-72(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
20405008:	fcc42783          	lw	a5,-52(s0)
2040500c:	1007f713          	andi	a4,a5,256
20405010:	0ff00793          	li	a5,255
20405014:	00e7f563          	bgeu	a5,a4,2040501e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
20405018:	fb842783          	lw	a5,-72(s0)
2040501c:	a819                	j	20405032 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
2040501e:	fb842703          	lw	a4,-72(s0)
20405022:	fcc42783          	lw	a5,-52(s0)
20405026:	03f7f793          	andi	a5,a5,63
2040502a:	0785                	addi	a5,a5,1
2040502c:	0786                	slli	a5,a5,0x1
2040502e:	02f757b3          	divu	a5,a4,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20405032:	853e                	mv	a0,a5
20405034:	40f6                	lw	ra,92(sp)
20405036:	4466                	lw	s0,88(sp)
20405038:	6125                	addi	sp,sp,96
2040503a:	8082                	ret

2040503c <find_closest_config>:
find_closest_config():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
2040503c:	7139                	addi	sp,sp,-64
2040503e:	de06                	sw	ra,60(sp)
20405040:	dc22                	sw	s0,56(sp)
20405042:	0080                	addi	s0,sp,64
20405044:	fca42623          	sw	a0,-52(s0)
20405048:	fcb42423          	sw	a1,-56(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
2040504c:	57fd                	li	a5,-1
2040504e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20405052:	800007b7          	lui	a5,0x80000
20405056:	fff7c793          	not	a5,a5
2040505a:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
2040505e:	04300793          	li	a5,67
20405062:	fef42223          	sw	a5,-28(s0)
20405066:	a0b5                	j	204050d2 <find_closest_config+0x96>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20405068:	fcc42683          	lw	a3,-52(s0)
2040506c:	fe442783          	lw	a5,-28(s0)
20405070:	00579713          	slli	a4,a5,0x5
20405074:	204007b7          	lui	a5,0x20400
20405078:	5ec78793          	addi	a5,a5,1516 # 204005ec <pll_configs>
2040507c:	97ba                	add	a5,a5,a4
2040507e:	85be                	mv	a1,a5
20405080:	8536                	mv	a0,a3
20405082:	d59ff0ef          	jal	ra,20404dda <get_pll_config_freq>
20405086:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
2040508a:	fe042703          	lw	a4,-32(s0)
2040508e:	57fd                	li	a5,-1
20405090:	02f70c63          	beq	a4,a5,204050c8 <find_closest_config+0x8c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
20405094:	fe042703          	lw	a4,-32(s0)
20405098:	fc842783          	lw	a5,-56(s0)
2040509c:	8f1d                	sub	a4,a4,a5
2040509e:	41f75793          	srai	a5,a4,0x1f
204050a2:	8f3d                	xor	a4,a4,a5
204050a4:	40f707b3          	sub	a5,a4,a5
204050a8:	fcf42e23          	sw	a5,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
204050ac:	fdc42703          	lw	a4,-36(s0)
204050b0:	fe842783          	lw	a5,-24(s0)
204050b4:	00f75a63          	bge	a4,a5,204050c8 <find_closest_config+0x8c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
204050b8:	fe442783          	lw	a5,-28(s0)
204050bc:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
204050c0:	fdc42783          	lw	a5,-36(s0)
204050c4:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
204050c8:	fe442783          	lw	a5,-28(s0)
204050cc:	17fd                	addi	a5,a5,-1
204050ce:	fef42223          	sw	a5,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
204050d2:	fe442783          	lw	a5,-28(s0)
204050d6:	f807d9e3          	bgez	a5,20405068 <find_closest_config+0x2c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
204050da:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
204050de:	853e                	mv	a0,a5
204050e0:	50f2                	lw	ra,60(sp)
204050e2:	5462                	lw	s0,56(sp)
204050e4:	6121                	addi	sp,sp,64
204050e6:	8082                	ret

204050e8 <configure_pll>:
configure_pll():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
204050e8:	7179                	addi	sp,sp,-48
204050ea:	d606                	sw	ra,44(sp)
204050ec:	d422                	sw	s0,40(sp)
204050ee:	1800                	addi	s0,sp,48
204050f0:	fca42e23          	sw	a0,-36(s0)
204050f4:	fcb42c23          	sw	a1,-40(s0)
204050f8:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
204050fc:	fdc42783          	lw	a5,-36(s0)
20405100:	439c                	lw	a5,0(a5)
20405102:	ff87f713          	andi	a4,a5,-8
20405106:	fdc42783          	lw	a5,-36(s0)
2040510a:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
2040510c:	fdc42783          	lw	a5,-36(s0)
20405110:	4398                	lw	a4,0(a5)
20405112:	fd442783          	lw	a5,-44(s0)
20405116:	4b9c                	lw	a5,16(a5)
20405118:	8b9d                	andi	a5,a5,7
2040511a:	8f5d                	or	a4,a4,a5
2040511c:	fdc42783          	lw	a5,-36(s0)
20405120:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20405122:	fdc42783          	lw	a5,-36(s0)
20405126:	439c                	lw	a5,0(a5)
20405128:	c0f7f713          	andi	a4,a5,-1009
2040512c:	fdc42783          	lw	a5,-36(s0)
20405130:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20405132:	fdc42783          	lw	a5,-36(s0)
20405136:	4398                	lw	a4,0(a5)
20405138:	fd442783          	lw	a5,-44(s0)
2040513c:	4bdc                	lw	a5,20(a5)
2040513e:	0792                	slli	a5,a5,0x4
20405140:	3f07f793          	andi	a5,a5,1008
20405144:	8f5d                	or	a4,a4,a5
20405146:	fdc42783          	lw	a5,-36(s0)
2040514a:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
2040514c:	fdc42783          	lw	a5,-36(s0)
20405150:	4398                	lw	a4,0(a5)
20405152:	77fd                	lui	a5,0xfffff
20405154:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdf8f>
20405158:	8f7d                	and	a4,a4,a5
2040515a:	fdc42783          	lw	a5,-36(s0)
2040515e:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20405160:	fdc42783          	lw	a5,-36(s0)
20405164:	4398                	lw	a4,0(a5)
20405166:	fd442783          	lw	a5,-44(s0)
2040516a:	4f9c                	lw	a5,24(a5)
2040516c:	00a79693          	slli	a3,a5,0xa
20405170:	6785                	lui	a5,0x1
20405172:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405176:	8ff5                	and	a5,a5,a3
20405178:	8f5d                	or	a4,a4,a5
2040517a:	fdc42783          	lw	a5,-36(s0)
2040517e:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
20405180:	fd442783          	lw	a5,-44(s0)
20405184:	4fdc                	lw	a5,28(a5)
20405186:	0207db63          	bgez	a5,204051bc <configure_pll+0xd4>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
2040518a:	fd842783          	lw	a5,-40(s0)
2040518e:	439c                	lw	a5,0(a5)
20405190:	1007e713          	ori	a4,a5,256
20405194:	fd842783          	lw	a5,-40(s0)
20405198:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
2040519a:	fd842783          	lw	a5,-40(s0)
2040519e:	439c                	lw	a5,0(a5)
204051a0:	fc07f713          	andi	a4,a5,-64
204051a4:	fd842783          	lw	a5,-40(s0)
204051a8:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
204051aa:	fd842783          	lw	a5,-40(s0)
204051ae:	439c                	lw	a5,0(a5)
204051b0:	0017e713          	ori	a4,a5,1
204051b4:	fd842783          	lw	a5,-40(s0)
204051b8:	c398                	sw	a4,0(a5)
204051ba:	a82d                	j	204051f4 <configure_pll+0x10c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
204051bc:	fd842783          	lw	a5,-40(s0)
204051c0:	439c                	lw	a5,0(a5)
204051c2:	eff7f713          	andi	a4,a5,-257
204051c6:	fd842783          	lw	a5,-40(s0)
204051ca:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
204051cc:	fd842783          	lw	a5,-40(s0)
204051d0:	439c                	lw	a5,0(a5)
204051d2:	fc07f713          	andi	a4,a5,-64
204051d6:	fd842783          	lw	a5,-40(s0)
204051da:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
204051dc:	fd842783          	lw	a5,-40(s0)
204051e0:	4398                	lw	a4,0(a5)
204051e2:	fd442783          	lw	a5,-44(s0)
204051e6:	4fdc                	lw	a5,28(a5)
204051e8:	03f7f793          	andi	a5,a5,63
204051ec:	8f5d                	or	a4,a4,a5
204051ee:	fd842783          	lw	a5,-40(s0)
204051f2:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
204051f4:	fdc42783          	lw	a5,-36(s0)
204051f8:	4398                	lw	a4,0(a5)
204051fa:	fffc07b7          	lui	a5,0xfffc0
204051fe:	17fd                	addi	a5,a5,-1
20405200:	8f7d                	and	a4,a4,a5
20405202:	fdc42783          	lw	a5,-36(s0)
20405206:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
20405208:	fe040793          	addi	a5,s0,-32
2040520c:	863e                	mv	a2,a5
2040520e:	4585                	li	a1,1
20405210:	800007b7          	lui	a5,0x80000
20405214:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
20405218:	ccafd0ef          	jal	ra,204026e2 <__metal_driver_riscv_clint0_command_request>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
2040521c:	fe042603          	lw	a2,-32(s0)
20405220:	fe442683          	lw	a3,-28(s0)
20405224:	4511                	li	a0,4
20405226:	4581                	li	a1,0
20405228:	00a60733          	add	a4,a2,a0
2040522c:	883a                	mv	a6,a4
2040522e:	00c83833          	sltu	a6,a6,a2
20405232:	00b687b3          	add	a5,a3,a1
20405236:	00f806b3          	add	a3,a6,a5
2040523a:	87b6                	mv	a5,a3
2040523c:	fee42423          	sw	a4,-24(s0)
20405240:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20405244:	a819                	j	2040525a <configure_pll+0x172>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20405246:	fe040793          	addi	a5,s0,-32
2040524a:	863e                	mv	a2,a5
2040524c:	4585                	li	a1,1
2040524e:	800007b7          	lui	a5,0x80000
20405252:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xfffff33c>
20405256:	c8cfd0ef          	jal	ra,204026e2 <__metal_driver_riscv_clint0_command_request>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
2040525a:	fe042703          	lw	a4,-32(s0)
2040525e:	fe442783          	lw	a5,-28(s0)
20405262:	fec42683          	lw	a3,-20(s0)
20405266:	863e                	mv	a2,a5
20405268:	00c6ec63          	bltu	a3,a2,20405280 <configure_pll+0x198>
2040526c:	fec42683          	lw	a3,-20(s0)
20405270:	863e                	mv	a2,a5
20405272:	fcc69ae3          	bne	a3,a2,20405246 <configure_pll+0x15e>
20405276:	fe842683          	lw	a3,-24(s0)
2040527a:	87ba                	mv	a5,a4
2040527c:	fcf6f5e3          	bgeu	a3,a5,20405246 <configure_pll+0x15e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
20405280:	0001                	nop
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
20405282:	fdc42783          	lw	a5,-36(s0)
20405286:	439c                	lw	a5,0(a5)
20405288:	fe07dde3          	bgez	a5,20405282 <configure_pll+0x19a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
2040528c:	0001                	nop
2040528e:	0001                	nop
20405290:	50b2                	lw	ra,44(sp)
20405292:	5422                	lw	s0,40(sp)
20405294:	6145                	addi	sp,sp,48
20405296:	8082                	ret

20405298 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
20405298:	715d                	addi	sp,sp,-80
2040529a:	c686                	sw	ra,76(sp)
2040529c:	c4a2                	sw	s0,72(sp)
2040529e:	0880                	addi	s0,sp,80
204052a0:	faa42e23          	sw	a0,-68(s0)
204052a4:	fab42c23          	sw	a1,-72(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
204052a8:	fbc42503          	lw	a0,-68(s0)
204052ac:	a8bff0ef          	jal	ra,20404d36 <__metal_driver_sifive_fe310_g000_pll_pllref>
204052b0:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
204052b4:	fbc42503          	lw	a0,-68(s0)
204052b8:	a65ff0ef          	jal	ra,20404d1c <__metal_driver_sifive_fe310_g000_pll_pllsel0>
204052bc:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
204052c0:	fbc42503          	lw	a0,-68(s0)
204052c4:	ac9ff0ef          	jal	ra,20404d8c <__metal_driver_sifive_fe310_g000_pll_config_offset>
204052c8:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
204052cc:	fbc42503          	lw	a0,-68(s0)
204052d0:	a97ff0ef          	jal	ra,20404d66 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
204052d4:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
204052d8:	adbff0ef          	jal	ra,20404db2 <__metal_driver_sifive_fe310_g000_prci_base>
204052dc:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
204052e0:	fdc42703          	lw	a4,-36(s0)
204052e4:	fe442783          	lw	a5,-28(s0)
204052e8:	97ba                	add	a5,a5,a4
204052ea:	fcf42c23          	sw	a5,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
204052ee:	fdc42703          	lw	a4,-36(s0)
204052f2:	fe042783          	lw	a5,-32(s0)
204052f6:	97ba                	add	a5,a5,a4
204052f8:	fcf42a23          	sw	a5,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
204052fc:	fd842783          	lw	a5,-40(s0)
20405300:	4398                	lw	a4,0(a5)
20405302:	67c1                	lui	a5,0x10
20405304:	8ff9                	and	a5,a5,a4
20405306:	cb91                	beqz	a5,2040531a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20405308:	fd842783          	lw	a5,-40(s0)
2040530c:	4398                	lw	a4,0(a5)
2040530e:	77c1                	lui	a5,0xffff0
20405310:	17fd                	addi	a5,a5,-1
20405312:	8f7d                	and	a4,a4,a5
20405314:	fd842783          	lw	a5,-40(s0)
20405318:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
2040531a:	fd842783          	lw	a5,-40(s0)
2040531e:	4398                	lw	a4,0(a5)
20405320:	000207b7          	lui	a5,0x20
20405324:	8ff9                	and	a5,a5,a4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
20405326:	c781                	beqz	a5,2040532e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
20405328:	fec42783          	lw	a5,-20(s0)
2040532c:	a019                	j	20405332 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
2040532e:	fe842783          	lw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
20405332:	853e                	mv	a0,a5
20405334:	19e010ef          	jal	ra,204064d2 <metal_clock_get_rate_hz>
20405338:	fca42823          	sw	a0,-48(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
2040533c:	fd042703          	lw	a4,-48(s0)
20405340:	87ba                	mv	a5,a4
20405342:	0786                	slli	a5,a5,0x1
20405344:	97ba                	add	a5,a5,a4
20405346:	41f7d713          	srai	a4,a5,0x1f
2040534a:	8b0d                	andi	a4,a4,3
2040534c:	97ba                	add	a5,a5,a4
2040534e:	8789                	srai	a5,a5,0x2
20405350:	873e                	mv	a4,a5
20405352:	fb842783          	lw	a5,-72(s0)
20405356:	02e7cb63          	blt	a5,a4,2040538c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
2040535a:	fd042703          	lw	a4,-48(s0)
2040535e:	87ba                	mv	a5,a4
20405360:	078a                	slli	a5,a5,0x2
20405362:	97ba                	add	a5,a5,a4
20405364:	41f7d713          	srai	a4,a5,0x1f
20405368:	8b0d                	andi	a4,a4,3
2040536a:	97ba                	add	a5,a5,a4
2040536c:	8789                	srai	a5,a5,0x2
2040536e:	873e                	mv	a4,a5
20405370:	fb842783          	lw	a5,-72(s0)
20405374:	00f74c63          	blt	a4,a5,2040538c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20405378:	fd842783          	lw	a5,-40(s0)
2040537c:	4398                	lw	a4,0(a5)
2040537e:	000407b7          	lui	a5,0x40
20405382:	8f5d                	or	a4,a4,a5
20405384:	fd842783          	lw	a5,-40(s0)
20405388:	c398                	sw	a4,0(a5)
2040538a:	a881                	j	204053da <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
2040538c:	fb842583          	lw	a1,-72(s0)
20405390:	fd042503          	lw	a0,-48(s0)
20405394:	ca9ff0ef          	jal	ra,2040503c <find_closest_config>
20405398:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
2040539c:	fcc42703          	lw	a4,-52(s0)
204053a0:	57fd                	li	a5,-1
204053a2:	02f70363          	beq	a4,a5,204053c8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
204053a6:	fcc42783          	lw	a5,-52(s0)
204053aa:	00579713          	slli	a4,a5,0x5
204053ae:	204007b7          	lui	a5,0x20400
204053b2:	5ec78793          	addi	a5,a5,1516 # 204005ec <pll_configs>
204053b6:	97ba                	add	a5,a5,a4
204053b8:	863e                	mv	a2,a5
204053ba:	fd442583          	lw	a1,-44(s0)
204053be:	fd842503          	lw	a0,-40(s0)
204053c2:	d27ff0ef          	jal	ra,204050e8 <configure_pll>
204053c6:	a811                	j	204053da <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
204053c8:	fd842783          	lw	a5,-40(s0)
204053cc:	4398                	lw	a4,0(a5)
204053ce:	000407b7          	lui	a5,0x40
204053d2:	8f5d                	or	a4,a4,a5
204053d4:	fd842783          	lw	a5,-40(s0)
204053d8:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
204053da:	fd842783          	lw	a5,-40(s0)
204053de:	4398                	lw	a4,0(a5)
204053e0:	67c1                	lui	a5,0x10
204053e2:	8f5d                	or	a4,a4,a5
204053e4:	fd842783          	lw	a5,-40(s0)
204053e8:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
204053ea:	fbc42503          	lw	a0,-68(s0)
204053ee:	adfff0ef          	jal	ra,20404ecc <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
204053f2:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
204053f4:	853e                	mv	a0,a5
204053f6:	40b6                	lw	ra,76(sp)
204053f8:	4426                	lw	s0,72(sp)
204053fa:	6161                	addi	sp,sp,80
204053fc:	8082                	ret

204053fe <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1159
{
204053fe:	1141                	addi	sp,sp,-16
20405400:	c622                	sw	s0,12(sp)
20405402:	0800                	addi	s0,sp,16
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20405404:	100087b7          	lui	a5,0x10008
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:1161
}
20405408:	853e                	mv	a0,a5
2040540a:	4432                	lw	s0,12(sp)
2040540c:	0141                	addi	sp,sp,16
2040540e:	8082                	ret

20405410 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20405410:	7179                	addi	sp,sp,-48
20405412:	d606                	sw	ra,44(sp)
20405414:	d422                	sw	s0,40(sp)
20405416:	1800                	addi	s0,sp,48
20405418:	fca42e23          	sw	a0,-36(s0)
2040541c:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20405420:	3ff9                	jal	204053fe <__metal_driver_sifive_fe310_g000_prci_base>
20405422:	87aa                	mv	a5,a0
20405424:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20405428:	fd842703          	lw	a4,-40(s0)
2040542c:	fec42783          	lw	a5,-20(s0)
20405430:	97ba                	add	a5,a5,a4
20405432:	439c                	lw	a5,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
20405434:	853e                	mv	a0,a5
20405436:	50b2                	lw	ra,44(sp)
20405438:	5422                	lw	s0,40(sp)
2040543a:	6145                	addi	sp,sp,48
2040543c:	8082                	ret

2040543e <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
2040543e:	7179                	addi	sp,sp,-48
20405440:	d606                	sw	ra,44(sp)
20405442:	d422                	sw	s0,40(sp)
20405444:	1800                	addi	s0,sp,48
20405446:	fca42e23          	sw	a0,-36(s0)
2040544a:	fcb42c23          	sw	a1,-40(s0)
2040544e:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20405452:	3775                	jal	204053fe <__metal_driver_sifive_fe310_g000_prci_base>
20405454:	87aa                	mv	a5,a0
20405456:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
2040545a:	fd842703          	lw	a4,-40(s0)
2040545e:	fec42783          	lw	a5,-20(s0)
20405462:	97ba                	add	a5,a5,a4
20405464:	873e                	mv	a4,a5
20405466:	fd442783          	lw	a5,-44(s0)
2040546a:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
2040546c:	853e                	mv	a0,a5
2040546e:	50b2                	lw	ra,44(sp)
20405470:	5422                	lw	s0,40(sp)
20405472:	6145                	addi	sp,sp,48
20405474:	8082                	ret

20405476 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:474
{
20405476:	1101                	addi	sp,sp,-32
20405478:	ce22                	sw	s0,28(sp)
2040547a:	1000                	addi	s0,sp,32
2040547c:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:475
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20405480:	fec42703          	lw	a4,-20(s0)
20405484:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405488:	00f71563          	bne	a4,a5,20405492 <__metal_driver_sifive_gpio0_base+0x1c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:476
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
2040548c:	100127b7          	lui	a5,0x10012
20405490:	a011                	j	20405494 <__metal_driver_sifive_gpio0_base+0x1e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:479
		return 0;
20405492:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:481
}
20405494:	853e                	mv	a0,a5
20405496:	4472                	lw	s0,28(sp)
20405498:	6105                	addi	sp,sp,32
2040549a:	8082                	ret

2040549c <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:504
{
2040549c:	1101                	addi	sp,sp,-32
2040549e:	ce22                	sw	s0,28(sp)
204054a0:	1000                	addi	s0,sp,32
204054a2:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:505
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
204054a6:	fec42703          	lw	a4,-20(s0)
204054aa:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204054ae:	00f71763          	bne	a4,a5,204054bc <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:506
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
204054b2:	800007b7          	lui	a5,0x80000
204054b6:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffefe8>
204054ba:	a011                	j	204054be <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:509
		return 0;
204054bc:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:511
}
204054be:	853e                	mv	a0,a5
204054c0:	4472                	lw	s0,28(sp)
204054c2:	6105                	addi	sp,sp,32
204054c4:	8082                	ret

204054c6 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:514
{
204054c6:	1101                	addi	sp,sp,-32
204054c8:	ce22                	sw	s0,28(sp)
204054ca:	1000                	addi	s0,sp,32
204054cc:	fea42623          	sw	a0,-20(s0)
204054d0:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:515
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
204054d4:	fec42703          	lw	a4,-20(s0)
204054d8:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204054dc:	00f71763          	bne	a4,a5,204054ea <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:515 (discriminator 1)
204054e0:	fe842783          	lw	a5,-24(s0)
204054e4:	e399                	bnez	a5,204054ea <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:516
		return 7;
204054e6:	479d                	li	a5,7
204054e8:	a269                	j	20405672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:518
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
204054ea:	fec42703          	lw	a4,-20(s0)
204054ee:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204054f2:	00f71963          	bne	a4,a5,20405504 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:518 (discriminator 1)
204054f6:	fe842703          	lw	a4,-24(s0)
204054fa:	4785                	li	a5,1
204054fc:	00f71463          	bne	a4,a5,20405504 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:519
		return 8;
20405500:	47a1                	li	a5,8
20405502:	aa85                	j	20405672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:521
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20405504:	fec42703          	lw	a4,-20(s0)
20405508:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040550c:	00f71963          	bne	a4,a5,2040551e <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:521 (discriminator 1)
20405510:	fe842703          	lw	a4,-24(s0)
20405514:	4789                	li	a5,2
20405516:	00f71463          	bne	a4,a5,2040551e <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:522
		return 9;
2040551a:	47a5                	li	a5,9
2040551c:	aa99                	j	20405672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:524
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
2040551e:	fec42703          	lw	a4,-20(s0)
20405522:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405526:	00f71963          	bne	a4,a5,20405538 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:524 (discriminator 1)
2040552a:	fe842703          	lw	a4,-24(s0)
2040552e:	478d                	li	a5,3
20405530:	00f71463          	bne	a4,a5,20405538 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:525
		return 10;
20405534:	47a9                	li	a5,10
20405536:	aa35                	j	20405672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:527
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20405538:	fec42703          	lw	a4,-20(s0)
2040553c:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405540:	00f71963          	bne	a4,a5,20405552 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:527 (discriminator 1)
20405544:	fe842703          	lw	a4,-24(s0)
20405548:	4791                	li	a5,4
2040554a:	00f71463          	bne	a4,a5,20405552 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:528
		return 11;
2040554e:	47ad                	li	a5,11
20405550:	a20d                	j	20405672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:530
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20405552:	fec42703          	lw	a4,-20(s0)
20405556:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040555a:	00f71963          	bne	a4,a5,2040556c <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:530 (discriminator 1)
2040555e:	fe842703          	lw	a4,-24(s0)
20405562:	4795                	li	a5,5
20405564:	00f71463          	bne	a4,a5,2040556c <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:531
		return 12;
20405568:	47b1                	li	a5,12
2040556a:	a221                	j	20405672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:533
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
2040556c:	fec42703          	lw	a4,-20(s0)
20405570:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405574:	00f71963          	bne	a4,a5,20405586 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:533 (discriminator 1)
20405578:	fe842703          	lw	a4,-24(s0)
2040557c:	4799                	li	a5,6
2040557e:	00f71463          	bne	a4,a5,20405586 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:534
		return 13;
20405582:	47b5                	li	a5,13
20405584:	a0fd                	j	20405672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:536
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20405586:	fec42703          	lw	a4,-20(s0)
2040558a:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040558e:	00f71963          	bne	a4,a5,204055a0 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:536 (discriminator 1)
20405592:	fe842703          	lw	a4,-24(s0)
20405596:	479d                	li	a5,7
20405598:	00f71463          	bne	a4,a5,204055a0 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:537
		return 14;
2040559c:	47b9                	li	a5,14
2040559e:	a8d1                	j	20405672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:539
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
204055a0:	fec42703          	lw	a4,-20(s0)
204055a4:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204055a8:	00f71963          	bne	a4,a5,204055ba <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:539 (discriminator 1)
204055ac:	fe842703          	lw	a4,-24(s0)
204055b0:	47a1                	li	a5,8
204055b2:	00f71463          	bne	a4,a5,204055ba <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:540
		return 15;
204055b6:	47bd                	li	a5,15
204055b8:	a86d                	j	20405672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:542
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
204055ba:	fec42703          	lw	a4,-20(s0)
204055be:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204055c2:	00f71963          	bne	a4,a5,204055d4 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:542 (discriminator 1)
204055c6:	fe842703          	lw	a4,-24(s0)
204055ca:	47a5                	li	a5,9
204055cc:	00f71463          	bne	a4,a5,204055d4 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:543
		return 16;
204055d0:	47c1                	li	a5,16
204055d2:	a045                	j	20405672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:545
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
204055d4:	fec42703          	lw	a4,-20(s0)
204055d8:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204055dc:	00f71963          	bne	a4,a5,204055ee <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:545 (discriminator 1)
204055e0:	fe842703          	lw	a4,-24(s0)
204055e4:	47a9                	li	a5,10
204055e6:	00f71463          	bne	a4,a5,204055ee <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:546
		return 17;
204055ea:	47c5                	li	a5,17
204055ec:	a059                	j	20405672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:548
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
204055ee:	fec42703          	lw	a4,-20(s0)
204055f2:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204055f6:	00f71963          	bne	a4,a5,20405608 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:548 (discriminator 1)
204055fa:	fe842703          	lw	a4,-24(s0)
204055fe:	47ad                	li	a5,11
20405600:	00f71463          	bne	a4,a5,20405608 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:549
		return 18;
20405604:	47c9                	li	a5,18
20405606:	a0b5                	j	20405672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:551
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20405608:	fec42703          	lw	a4,-20(s0)
2040560c:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405610:	00f71963          	bne	a4,a5,20405622 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:551 (discriminator 1)
20405614:	fe842703          	lw	a4,-24(s0)
20405618:	47b1                	li	a5,12
2040561a:	00f71463          	bne	a4,a5,20405622 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:552
		return 19;
2040561e:	47cd                	li	a5,19
20405620:	a889                	j	20405672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:554
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20405622:	fec42703          	lw	a4,-20(s0)
20405626:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040562a:	00f71963          	bne	a4,a5,2040563c <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:554 (discriminator 1)
2040562e:	fe842703          	lw	a4,-24(s0)
20405632:	47b5                	li	a5,13
20405634:	00f71463          	bne	a4,a5,2040563c <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:555
		return 20;
20405638:	47d1                	li	a5,20
2040563a:	a825                	j	20405672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:557
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
2040563c:	fec42703          	lw	a4,-20(s0)
20405640:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405644:	00f71963          	bne	a4,a5,20405656 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:557 (discriminator 1)
20405648:	fe842703          	lw	a4,-24(s0)
2040564c:	47b9                	li	a5,14
2040564e:	00f71463          	bne	a4,a5,20405656 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:558
		return 21;
20405652:	47d5                	li	a5,21
20405654:	a839                	j	20405672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:560
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20405656:	fec42703          	lw	a4,-20(s0)
2040565a:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040565e:	00f71963          	bne	a4,a5,20405670 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:560 (discriminator 1)
20405662:	fe842703          	lw	a4,-24(s0)
20405666:	47bd                	li	a5,15
20405668:	00f71463          	bne	a4,a5,20405670 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:561
		return 22;
2040566c:	47d9                	li	a5,22
2040566e:	a011                	j	20405672 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:564
		return 0;
20405670:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:566
}
20405672:	853e                	mv	a0,a5
20405674:	4472                	lw	s0,28(sp)
20405676:	6105                	addi	sp,sp,32
20405678:	8082                	ret

2040567a <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
2040567a:	7179                	addi	sp,sp,-48
2040567c:	d606                	sw	ra,44(sp)
2040567e:	d422                	sw	s0,40(sp)
20405680:	1800                	addi	s0,sp,48
20405682:	fca42e23          	sw	a0,-36(s0)
20405686:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040568a:	fdc42503          	lw	a0,-36(s0)
2040568e:	de9ff0ef          	jal	ra,20405476 <__metal_driver_sifive_gpio0_base>
20405692:	87aa                	mv	a5,a0
20405694:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20405698:	fec42783          	lw	a5,-20(s0)
2040569c:	0791                	addi	a5,a5,4
2040569e:	4398                	lw	a4,0(a5)
204056a0:	fd842783          	lw	a5,-40(s0)
204056a4:	fec42683          	lw	a3,-20(s0)
204056a8:	0691                	addi	a3,a3,4
204056aa:	8fd9                	or	a5,a5,a4
204056ac:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
204056ae:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:20
}
204056b0:	853e                	mv	a0,a5
204056b2:	50b2                	lw	ra,44(sp)
204056b4:	5422                	lw	s0,40(sp)
204056b6:	6145                	addi	sp,sp,48
204056b8:	8082                	ret

204056ba <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
204056ba:	7179                	addi	sp,sp,-48
204056bc:	d606                	sw	ra,44(sp)
204056be:	d422                	sw	s0,40(sp)
204056c0:	1800                	addi	s0,sp,48
204056c2:	fca42e23          	sw	a0,-36(s0)
204056c6:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204056ca:	fdc42503          	lw	a0,-36(s0)
204056ce:	da9ff0ef          	jal	ra,20405476 <__metal_driver_sifive_gpio0_base>
204056d2:	87aa                	mv	a5,a0
204056d4:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
204056d8:	fec42783          	lw	a5,-20(s0)
204056dc:	0791                	addi	a5,a5,4
204056de:	439c                	lw	a5,0(a5)
204056e0:	fd842703          	lw	a4,-40(s0)
204056e4:	fff74713          	not	a4,a4
204056e8:	86ba                	mv	a3,a4
204056ea:	fec42703          	lw	a4,-20(s0)
204056ee:	0711                	addi	a4,a4,4
204056f0:	8ff5                	and	a5,a5,a3
204056f2:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
204056f4:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:30
}
204056f6:	853e                	mv	a0,a5
204056f8:	50b2                	lw	ra,44(sp)
204056fa:	5422                	lw	s0,40(sp)
204056fc:	6145                	addi	sp,sp,48
204056fe:	8082                	ret

20405700 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20405700:	7179                	addi	sp,sp,-48
20405702:	d606                	sw	ra,44(sp)
20405704:	d422                	sw	s0,40(sp)
20405706:	1800                	addi	s0,sp,48
20405708:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040570c:	fdc42503          	lw	a0,-36(s0)
20405710:	d67ff0ef          	jal	ra,20405476 <__metal_driver_sifive_gpio0_base>
20405714:	87aa                	mv	a5,a0
20405716:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
2040571a:	fec42783          	lw	a5,-20(s0)
2040571e:	439c                	lw	a5,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20405720:	853e                	mv	a0,a5
20405722:	50b2                	lw	ra,44(sp)
20405724:	5422                	lw	s0,40(sp)
20405726:	6145                	addi	sp,sp,48
20405728:	8082                	ret

2040572a <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
2040572a:	7179                	addi	sp,sp,-48
2040572c:	d606                	sw	ra,44(sp)
2040572e:	d422                	sw	s0,40(sp)
20405730:	1800                	addi	s0,sp,48
20405732:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405736:	fdc42503          	lw	a0,-36(s0)
2040573a:	d3dff0ef          	jal	ra,20405476 <__metal_driver_sifive_gpio0_base>
2040573e:	87aa                	mv	a5,a0
20405740:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20405744:	fec42783          	lw	a5,-20(s0)
20405748:	07b1                	addi	a5,a5,12
2040574a:	439c                	lw	a5,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
2040574c:	853e                	mv	a0,a5
2040574e:	50b2                	lw	ra,44(sp)
20405750:	5422                	lw	s0,40(sp)
20405752:	6145                	addi	sp,sp,48
20405754:	8082                	ret

20405756 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20405756:	7179                	addi	sp,sp,-48
20405758:	d606                	sw	ra,44(sp)
2040575a:	d422                	sw	s0,40(sp)
2040575c:	1800                	addi	s0,sp,48
2040575e:	fca42e23          	sw	a0,-36(s0)
20405762:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405766:	fdc42503          	lw	a0,-36(s0)
2040576a:	d0dff0ef          	jal	ra,20405476 <__metal_driver_sifive_gpio0_base>
2040576e:	87aa                	mv	a5,a0
20405770:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20405774:	fec42783          	lw	a5,-20(s0)
20405778:	07a1                	addi	a5,a5,8
2040577a:	439c                	lw	a5,0(a5)
2040577c:	fd842703          	lw	a4,-40(s0)
20405780:	fff74713          	not	a4,a4
20405784:	86ba                	mv	a3,a4
20405786:	fec42703          	lw	a4,-20(s0)
2040578a:	0721                	addi	a4,a4,8
2040578c:	8ff5                	and	a5,a5,a3
2040578e:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20405790:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20405792:	853e                	mv	a0,a5
20405794:	50b2                	lw	ra,44(sp)
20405796:	5422                	lw	s0,40(sp)
20405798:	6145                	addi	sp,sp,48
2040579a:	8082                	ret

2040579c <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
2040579c:	7179                	addi	sp,sp,-48
2040579e:	d606                	sw	ra,44(sp)
204057a0:	d422                	sw	s0,40(sp)
204057a2:	1800                	addi	s0,sp,48
204057a4:	fca42e23          	sw	a0,-36(s0)
204057a8:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204057ac:	fdc42503          	lw	a0,-36(s0)
204057b0:	cc7ff0ef          	jal	ra,20405476 <__metal_driver_sifive_gpio0_base>
204057b4:	87aa                	mv	a5,a0
204057b6:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
204057ba:	fec42783          	lw	a5,-20(s0)
204057be:	07a1                	addi	a5,a5,8
204057c0:	4398                	lw	a4,0(a5)
204057c2:	fd842783          	lw	a5,-40(s0)
204057c6:	fec42683          	lw	a3,-20(s0)
204057ca:	06a1                	addi	a3,a3,8
204057cc:	8fd9                	or	a5,a5,a4
204057ce:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
204057d0:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:64
}
204057d2:	853e                	mv	a0,a5
204057d4:	50b2                	lw	ra,44(sp)
204057d6:	5422                	lw	s0,40(sp)
204057d8:	6145                	addi	sp,sp,48
204057da:	8082                	ret

204057dc <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
204057dc:	7179                	addi	sp,sp,-48
204057de:	d606                	sw	ra,44(sp)
204057e0:	d422                	sw	s0,40(sp)
204057e2:	1800                	addi	s0,sp,48
204057e4:	fca42e23          	sw	a0,-36(s0)
204057e8:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204057ec:	fdc42503          	lw	a0,-36(s0)
204057f0:	c87ff0ef          	jal	ra,20405476 <__metal_driver_sifive_gpio0_base>
204057f4:	87aa                	mv	a5,a0
204057f6:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
204057fa:	fec42783          	lw	a5,-20(s0)
204057fe:	07b1                	addi	a5,a5,12
20405800:	4398                	lw	a4,0(a5)
20405802:	fd842783          	lw	a5,-40(s0)
20405806:	fec42683          	lw	a3,-20(s0)
2040580a:	06b1                	addi	a3,a3,12
2040580c:	8fd9                	or	a5,a5,a4
2040580e:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20405810:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20405812:	853e                	mv	a0,a5
20405814:	50b2                	lw	ra,44(sp)
20405816:	5422                	lw	s0,40(sp)
20405818:	6145                	addi	sp,sp,48
2040581a:	8082                	ret

2040581c <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
2040581c:	7179                	addi	sp,sp,-48
2040581e:	d606                	sw	ra,44(sp)
20405820:	d422                	sw	s0,40(sp)
20405822:	1800                	addi	s0,sp,48
20405824:	fca42e23          	sw	a0,-36(s0)
20405828:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040582c:	fdc42503          	lw	a0,-36(s0)
20405830:	c47ff0ef          	jal	ra,20405476 <__metal_driver_sifive_gpio0_base>
20405834:	87aa                	mv	a5,a0
20405836:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
2040583a:	fec42783          	lw	a5,-20(s0)
2040583e:	07b1                	addi	a5,a5,12
20405840:	439c                	lw	a5,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20405842:	fd842703          	lw	a4,-40(s0)
20405846:	fff74713          	not	a4,a4
2040584a:	86ba                	mv	a3,a4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
2040584c:	fec42703          	lw	a4,-20(s0)
20405850:	0731                	addi	a4,a4,12
20405852:	8ff5                	and	a5,a5,a3
20405854:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20405856:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20405858:	853e                	mv	a0,a5
2040585a:	50b2                	lw	ra,44(sp)
2040585c:	5422                	lw	s0,40(sp)
2040585e:	6145                	addi	sp,sp,48
20405860:	8082                	ret

20405862 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20405862:	7179                	addi	sp,sp,-48
20405864:	d606                	sw	ra,44(sp)
20405866:	d422                	sw	s0,40(sp)
20405868:	1800                	addi	s0,sp,48
2040586a:	fca42e23          	sw	a0,-36(s0)
2040586e:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405872:	fdc42503          	lw	a0,-36(s0)
20405876:	c01ff0ef          	jal	ra,20405476 <__metal_driver_sifive_gpio0_base>
2040587a:	87aa                	mv	a5,a0
2040587c:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20405880:	fec42783          	lw	a5,-20(s0)
20405884:	07b1                	addi	a5,a5,12
20405886:	4398                	lw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20405888:	fd842783          	lw	a5,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
2040588c:	fec42683          	lw	a3,-20(s0)
20405890:	06b1                	addi	a3,a3,12
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20405892:	8fb9                	xor	a5,a5,a4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20405894:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20405896:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:96
}
20405898:	853e                	mv	a0,a5
2040589a:	50b2                	lw	ra,44(sp)
2040589c:	5422                	lw	s0,40(sp)
2040589e:	6145                	addi	sp,sp,48
204058a0:	8082                	ret

204058a2 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
204058a2:	7179                	addi	sp,sp,-48
204058a4:	d606                	sw	ra,44(sp)
204058a6:	d422                	sw	s0,40(sp)
204058a8:	1800                	addi	s0,sp,48
204058aa:	fca42e23          	sw	a0,-36(s0)
204058ae:	fcb42c23          	sw	a1,-40(s0)
204058b2:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204058b6:	fdc42503          	lw	a0,-36(s0)
204058ba:	bbdff0ef          	jal	ra,20405476 <__metal_driver_sifive_gpio0_base>
204058be:	87aa                	mv	a5,a0
204058c0:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
204058c4:	fec42783          	lw	a5,-20(s0)
204058c8:	03c78793          	addi	a5,a5,60
204058cc:	4398                	lw	a4,0(a5)
204058ce:	fd842783          	lw	a5,-40(s0)
204058d2:	fec42683          	lw	a3,-20(s0)
204058d6:	03c68693          	addi	a3,a3,60
204058da:	8fd9                	or	a5,a5,a4
204058dc:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
204058de:	fec42783          	lw	a5,-20(s0)
204058e2:	03878793          	addi	a5,a5,56
204058e6:	4398                	lw	a4,0(a5)
204058e8:	fd442783          	lw	a5,-44(s0)
204058ec:	fec42683          	lw	a3,-20(s0)
204058f0:	03868693          	addi	a3,a3,56
204058f4:	8fd9                	or	a5,a5,a4
204058f6:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
204058f8:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:108
}
204058fa:	853e                	mv	a0,a5
204058fc:	50b2                	lw	ra,44(sp)
204058fe:	5422                	lw	s0,40(sp)
20405900:	6145                	addi	sp,sp,48
20405902:	8082                	ret

20405904 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
20405904:	7179                	addi	sp,sp,-48
20405906:	d606                	sw	ra,44(sp)
20405908:	d422                	sw	s0,40(sp)
2040590a:	1800                	addi	s0,sp,48
2040590c:	fca42e23          	sw	a0,-36(s0)
20405910:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405914:	fdc42503          	lw	a0,-36(s0)
20405918:	b5fff0ef          	jal	ra,20405476 <__metal_driver_sifive_gpio0_base>
2040591c:	87aa                	mv	a5,a0
2040591e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20405922:	fec42783          	lw	a5,-20(s0)
20405926:	03878793          	addi	a5,a5,56
2040592a:	439c                	lw	a5,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
2040592c:	fd842703          	lw	a4,-40(s0)
20405930:	fff74713          	not	a4,a4
20405934:	86ba                	mv	a3,a4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20405936:	fec42703          	lw	a4,-20(s0)
2040593a:	03870713          	addi	a4,a4,56
2040593e:	8ff5                	and	a5,a5,a3
20405940:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
20405942:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:118
}
20405944:	853e                	mv	a0,a5
20405946:	50b2                	lw	ra,44(sp)
20405948:	5422                	lw	s0,40(sp)
2040594a:	6145                	addi	sp,sp,48
2040594c:	8082                	ret

2040594e <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
2040594e:	7179                	addi	sp,sp,-48
20405950:	d606                	sw	ra,44(sp)
20405952:	d422                	sw	s0,40(sp)
20405954:	1800                	addi	s0,sp,48
20405956:	fca42e23          	sw	a0,-36(s0)
2040595a:	fcb42c23          	sw	a1,-40(s0)
2040595e:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405962:	fdc42503          	lw	a0,-36(s0)
20405966:	b11ff0ef          	jal	ra,20405476 <__metal_driver_sifive_gpio0_base>
2040596a:	87aa                	mv	a5,a0
2040596c:	fef42623          	sw	a5,-20(s0)
20405970:	fd442703          	lw	a4,-44(s0)
20405974:	479d                	li	a5,7
20405976:	1ce7e963          	bltu	a5,a4,20405b48 <__metal_driver_sifive_gpio0_config_int+0x1fa>
2040597a:	fd442783          	lw	a5,-44(s0)
2040597e:	00279713          	slli	a4,a5,0x2
20405982:	204017b7          	lui	a5,0x20401
20405986:	e7878793          	addi	a5,a5,-392 # 20400e78 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
2040598a:	97ba                	add	a5,a5,a4
2040598c:	439c                	lw	a5,0(a5)
2040598e:	8782                	jr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:127

    switch (intr_type) {
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20405990:	fec42783          	lw	a5,-20(s0)
20405994:	07e1                	addi	a5,a5,24
20405996:	439c                	lw	a5,0(a5)
20405998:	fd842703          	lw	a4,-40(s0)
2040599c:	fff74713          	not	a4,a4
204059a0:	86ba                	mv	a3,a4
204059a2:	fec42703          	lw	a4,-20(s0)
204059a6:	0761                	addi	a4,a4,24
204059a8:	8ff5                	and	a5,a5,a3
204059aa:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
204059ac:	fec42783          	lw	a5,-20(s0)
204059b0:	02078793          	addi	a5,a5,32
204059b4:	439c                	lw	a5,0(a5)
204059b6:	fd842703          	lw	a4,-40(s0)
204059ba:	fff74713          	not	a4,a4
204059be:	86ba                	mv	a3,a4
204059c0:	fec42703          	lw	a4,-20(s0)
204059c4:	02070713          	addi	a4,a4,32
204059c8:	8ff5                	and	a5,a5,a3
204059ca:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
204059cc:	fec42783          	lw	a5,-20(s0)
204059d0:	02878793          	addi	a5,a5,40
204059d4:	439c                	lw	a5,0(a5)
204059d6:	fd842703          	lw	a4,-40(s0)
204059da:	fff74713          	not	a4,a4
204059de:	86ba                	mv	a3,a4
204059e0:	fec42703          	lw	a4,-20(s0)
204059e4:	02870713          	addi	a4,a4,40
204059e8:	8ff5                	and	a5,a5,a3
204059ea:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
204059ec:	fec42783          	lw	a5,-20(s0)
204059f0:	03078793          	addi	a5,a5,48
204059f4:	439c                	lw	a5,0(a5)
204059f6:	fd842703          	lw	a4,-40(s0)
204059fa:	fff74713          	not	a4,a4
204059fe:	86ba                	mv	a3,a4
20405a00:	fec42703          	lw	a4,-20(s0)
20405a04:	03070713          	addi	a4,a4,48
20405a08:	8ff5                	and	a5,a5,a3
20405a0a:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20405a0c:	aa35                	j	20405b48 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20405a0e:	fec42783          	lw	a5,-20(s0)
20405a12:	07e1                	addi	a5,a5,24
20405a14:	4398                	lw	a4,0(a5)
20405a16:	fd842783          	lw	a5,-40(s0)
20405a1a:	fec42683          	lw	a3,-20(s0)
20405a1e:	06e1                	addi	a3,a3,24
20405a20:	8fd9                	or	a5,a5,a4
20405a22:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20405a24:	a215                	j	20405b48 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20405a26:	fec42783          	lw	a5,-20(s0)
20405a2a:	02078793          	addi	a5,a5,32
20405a2e:	4398                	lw	a4,0(a5)
20405a30:	fd842783          	lw	a5,-40(s0)
20405a34:	fec42683          	lw	a3,-20(s0)
20405a38:	02068693          	addi	a3,a3,32
20405a3c:	8fd9                	or	a5,a5,a4
20405a3e:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
20405a40:	a221                	j	20405b48 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20405a42:	fec42783          	lw	a5,-20(s0)
20405a46:	07e1                	addi	a5,a5,24
20405a48:	4398                	lw	a4,0(a5)
20405a4a:	fd842783          	lw	a5,-40(s0)
20405a4e:	fec42683          	lw	a3,-20(s0)
20405a52:	06e1                	addi	a3,a3,24
20405a54:	8fd9                	or	a5,a5,a4
20405a56:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20405a58:	fec42783          	lw	a5,-20(s0)
20405a5c:	02078793          	addi	a5,a5,32
20405a60:	4398                	lw	a4,0(a5)
20405a62:	fd842783          	lw	a5,-40(s0)
20405a66:	fec42683          	lw	a3,-20(s0)
20405a6a:	02068693          	addi	a3,a3,32
20405a6e:	8fd9                	or	a5,a5,a4
20405a70:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20405a72:	a8d9                	j	20405b48 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20405a74:	fec42783          	lw	a5,-20(s0)
20405a78:	02878793          	addi	a5,a5,40
20405a7c:	4398                	lw	a4,0(a5)
20405a7e:	fd842783          	lw	a5,-40(s0)
20405a82:	fec42683          	lw	a3,-20(s0)
20405a86:	02868693          	addi	a3,a3,40
20405a8a:	8fd9                	or	a5,a5,a4
20405a8c:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20405a8e:	a86d                	j	20405b48 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20405a90:	fec42783          	lw	a5,-20(s0)
20405a94:	03078793          	addi	a5,a5,48
20405a98:	4398                	lw	a4,0(a5)
20405a9a:	fd842783          	lw	a5,-40(s0)
20405a9e:	fec42683          	lw	a3,-20(s0)
20405aa2:	03068693          	addi	a3,a3,48
20405aa6:	8fd9                	or	a5,a5,a4
20405aa8:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
20405aaa:	a879                	j	20405b48 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20405aac:	fec42783          	lw	a5,-20(s0)
20405ab0:	02878793          	addi	a5,a5,40
20405ab4:	4398                	lw	a4,0(a5)
20405ab6:	fd842783          	lw	a5,-40(s0)
20405aba:	fec42683          	lw	a3,-20(s0)
20405abe:	02868693          	addi	a3,a3,40
20405ac2:	8fd9                	or	a5,a5,a4
20405ac4:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20405ac6:	fec42783          	lw	a5,-20(s0)
20405aca:	03078793          	addi	a5,a5,48
20405ace:	4398                	lw	a4,0(a5)
20405ad0:	fd842783          	lw	a5,-40(s0)
20405ad4:	fec42683          	lw	a3,-20(s0)
20405ad8:	03068693          	addi	a3,a3,48
20405adc:	8fd9                	or	a5,a5,a4
20405ade:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
20405ae0:	a0a5                	j	20405b48 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20405ae2:	fec42783          	lw	a5,-20(s0)
20405ae6:	07e1                	addi	a5,a5,24
20405ae8:	4398                	lw	a4,0(a5)
20405aea:	fd842783          	lw	a5,-40(s0)
20405aee:	fec42683          	lw	a3,-20(s0)
20405af2:	06e1                	addi	a3,a3,24
20405af4:	8fd9                	or	a5,a5,a4
20405af6:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20405af8:	fec42783          	lw	a5,-20(s0)
20405afc:	02078793          	addi	a5,a5,32
20405b00:	4398                	lw	a4,0(a5)
20405b02:	fd842783          	lw	a5,-40(s0)
20405b06:	fec42683          	lw	a3,-20(s0)
20405b0a:	02068693          	addi	a3,a3,32
20405b0e:	8fd9                	or	a5,a5,a4
20405b10:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20405b12:	fec42783          	lw	a5,-20(s0)
20405b16:	02878793          	addi	a5,a5,40
20405b1a:	4398                	lw	a4,0(a5)
20405b1c:	fd842783          	lw	a5,-40(s0)
20405b20:	fec42683          	lw	a3,-20(s0)
20405b24:	02868693          	addi	a3,a3,40
20405b28:	8fd9                	or	a5,a5,a4
20405b2a:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20405b2c:	fec42783          	lw	a5,-20(s0)
20405b30:	03078793          	addi	a5,a5,48
20405b34:	4398                	lw	a4,0(a5)
20405b36:	fd842783          	lw	a5,-40(s0)
20405b3a:	fec42683          	lw	a3,-20(s0)
20405b3e:	03068693          	addi	a3,a3,48
20405b42:	8fd9                	or	a5,a5,a4
20405b44:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
20405b46:	0001                	nop
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
20405b48:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:175
}
20405b4a:	853e                	mv	a0,a5
20405b4c:	50b2                	lw	ra,44(sp)
20405b4e:	5422                	lw	s0,40(sp)
20405b50:	6145                	addi	sp,sp,48
20405b52:	8082                	ret

20405b54 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
20405b54:	7179                	addi	sp,sp,-48
20405b56:	d606                	sw	ra,44(sp)
20405b58:	d422                	sw	s0,40(sp)
20405b5a:	1800                	addi	s0,sp,48
20405b5c:	fca42e23          	sw	a0,-36(s0)
20405b60:	fcb42c23          	sw	a1,-40(s0)
20405b64:	fcc42a23          	sw	a2,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405b68:	fdc42503          	lw	a0,-36(s0)
20405b6c:	90bff0ef          	jal	ra,20405476 <__metal_driver_sifive_gpio0_base>
20405b70:	87aa                	mv	a5,a0
20405b72:	fef42623          	sw	a5,-20(s0)
20405b76:	fd442703          	lw	a4,-44(s0)
20405b7a:	479d                	li	a5,7
20405b7c:	14e7ea63          	bltu	a5,a4,20405cd0 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20405b80:	fd442783          	lw	a5,-44(s0)
20405b84:	00279713          	slli	a4,a5,0x2
20405b88:	204017b7          	lui	a5,0x20401
20405b8c:	e9878793          	addi	a5,a5,-360 # 20400e98 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20405b90:	97ba                	add	a5,a5,a4
20405b92:	439c                	lw	a5,0(a5)
20405b94:	8782                	jr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:184

    switch (intr_type) {
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20405b96:	fec42783          	lw	a5,-20(s0)
20405b9a:	07f1                	addi	a5,a5,28
20405b9c:	4398                	lw	a4,0(a5)
20405b9e:	fd842783          	lw	a5,-40(s0)
20405ba2:	fec42683          	lw	a3,-20(s0)
20405ba6:	06f1                	addi	a3,a3,28
20405ba8:	8fd9                	or	a5,a5,a4
20405baa:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
20405bac:	a215                	j	20405cd0 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20405bae:	fec42783          	lw	a5,-20(s0)
20405bb2:	02478793          	addi	a5,a5,36
20405bb6:	4398                	lw	a4,0(a5)
20405bb8:	fd842783          	lw	a5,-40(s0)
20405bbc:	fec42683          	lw	a3,-20(s0)
20405bc0:	02468693          	addi	a3,a3,36
20405bc4:	8fd9                	or	a5,a5,a4
20405bc6:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
20405bc8:	a221                	j	20405cd0 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20405bca:	fec42783          	lw	a5,-20(s0)
20405bce:	07f1                	addi	a5,a5,28
20405bd0:	4398                	lw	a4,0(a5)
20405bd2:	fd842783          	lw	a5,-40(s0)
20405bd6:	fec42683          	lw	a3,-20(s0)
20405bda:	06f1                	addi	a3,a3,28
20405bdc:	8fd9                	or	a5,a5,a4
20405bde:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20405be0:	fec42783          	lw	a5,-20(s0)
20405be4:	02478793          	addi	a5,a5,36
20405be8:	4398                	lw	a4,0(a5)
20405bea:	fd842783          	lw	a5,-40(s0)
20405bee:	fec42683          	lw	a3,-20(s0)
20405bf2:	02468693          	addi	a3,a3,36
20405bf6:	8fd9                	or	a5,a5,a4
20405bf8:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
20405bfa:	a8d9                	j	20405cd0 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20405bfc:	fec42783          	lw	a5,-20(s0)
20405c00:	02c78793          	addi	a5,a5,44
20405c04:	4398                	lw	a4,0(a5)
20405c06:	fd842783          	lw	a5,-40(s0)
20405c0a:	fec42683          	lw	a3,-20(s0)
20405c0e:	02c68693          	addi	a3,a3,44
20405c12:	8fd9                	or	a5,a5,a4
20405c14:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
20405c16:	a86d                	j	20405cd0 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20405c18:	fec42783          	lw	a5,-20(s0)
20405c1c:	03478793          	addi	a5,a5,52
20405c20:	4398                	lw	a4,0(a5)
20405c22:	fd842783          	lw	a5,-40(s0)
20405c26:	fec42683          	lw	a3,-20(s0)
20405c2a:	03468693          	addi	a3,a3,52
20405c2e:	8fd9                	or	a5,a5,a4
20405c30:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20405c32:	a879                	j	20405cd0 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20405c34:	fec42783          	lw	a5,-20(s0)
20405c38:	02c78793          	addi	a5,a5,44
20405c3c:	4398                	lw	a4,0(a5)
20405c3e:	fd842783          	lw	a5,-40(s0)
20405c42:	fec42683          	lw	a3,-20(s0)
20405c46:	02c68693          	addi	a3,a3,44
20405c4a:	8fd9                	or	a5,a5,a4
20405c4c:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20405c4e:	fec42783          	lw	a5,-20(s0)
20405c52:	03478793          	addi	a5,a5,52
20405c56:	4398                	lw	a4,0(a5)
20405c58:	fd842783          	lw	a5,-40(s0)
20405c5c:	fec42683          	lw	a3,-20(s0)
20405c60:	03468693          	addi	a3,a3,52
20405c64:	8fd9                	or	a5,a5,a4
20405c66:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
20405c68:	a0a5                	j	20405cd0 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20405c6a:	fec42783          	lw	a5,-20(s0)
20405c6e:	07f1                	addi	a5,a5,28
20405c70:	4398                	lw	a4,0(a5)
20405c72:	fd842783          	lw	a5,-40(s0)
20405c76:	fec42683          	lw	a3,-20(s0)
20405c7a:	06f1                	addi	a3,a3,28
20405c7c:	8fd9                	or	a5,a5,a4
20405c7e:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20405c80:	fec42783          	lw	a5,-20(s0)
20405c84:	02478793          	addi	a5,a5,36
20405c88:	4398                	lw	a4,0(a5)
20405c8a:	fd842783          	lw	a5,-40(s0)
20405c8e:	fec42683          	lw	a3,-20(s0)
20405c92:	02468693          	addi	a3,a3,36
20405c96:	8fd9                	or	a5,a5,a4
20405c98:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20405c9a:	fec42783          	lw	a5,-20(s0)
20405c9e:	02c78793          	addi	a5,a5,44
20405ca2:	4398                	lw	a4,0(a5)
20405ca4:	fd842783          	lw	a5,-40(s0)
20405ca8:	fec42683          	lw	a3,-20(s0)
20405cac:	02c68693          	addi	a3,a3,44
20405cb0:	8fd9                	or	a5,a5,a4
20405cb2:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20405cb4:	fec42783          	lw	a5,-20(s0)
20405cb8:	03478793          	addi	a5,a5,52
20405cbc:	4398                	lw	a4,0(a5)
20405cbe:	fd842783          	lw	a5,-40(s0)
20405cc2:	fec42683          	lw	a3,-20(s0)
20405cc6:	03468693          	addi	a3,a3,52
20405cca:	8fd9                	or	a5,a5,a4
20405ccc:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
20405cce:	0001                	nop
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
20405cd0:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:222
}
20405cd2:	853e                	mv	a0,a5
20405cd4:	50b2                	lw	ra,44(sp)
20405cd6:	5422                	lw	s0,40(sp)
20405cd8:	6145                	addi	sp,sp,48
20405cda:	8082                	ret

20405cdc <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
20405cdc:	1101                	addi	sp,sp,-32
20405cde:	ce06                	sw	ra,28(sp)
20405ce0:	cc22                	sw	s0,24(sp)
20405ce2:	1000                	addi	s0,sp,32
20405ce4:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20405ce8:	fec42503          	lw	a0,-20(s0)
20405cec:	fb0ff0ef          	jal	ra,2040549c <__metal_driver_sifive_gpio0_interrupt_parent>
20405cf0:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:227
}
20405cf2:	853e                	mv	a0,a5
20405cf4:	40f2                	lw	ra,28(sp)
20405cf6:	4462                	lw	s0,24(sp)
20405cf8:	6105                	addi	sp,sp,32
20405cfa:	8082                	ret

20405cfc <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20405cfc:	7179                	addi	sp,sp,-48
20405cfe:	d606                	sw	ra,44(sp)
20405d00:	d422                	sw	s0,40(sp)
20405d02:	1800                	addi	s0,sp,48
20405d04:	fca42e23          	sw	a0,-36(s0)
20405d08:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20405d0c:	fd842583          	lw	a1,-40(s0)
20405d10:	fdc42503          	lw	a0,-36(s0)
20405d14:	fb2ff0ef          	jal	ra,204054c6 <__metal_driver_sifive_gpio0_interrupt_lines>
20405d18:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20405d1c:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20405d20:	853e                	mv	a0,a5
20405d22:	50b2                	lw	ra,44(sp)
20405d24:	5422                	lw	s0,40(sp)
20405d26:	6145                	addi	sp,sp,48
20405d28:	8082                	ret

20405d2a <__metal_driver_sifive_test0_base>:
__metal_driver_sifive_test0_base():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:863
{
20405d2a:	1101                	addi	sp,sp,-32
20405d2c:	ce22                	sw	s0,28(sp)
20405d2e:	1000                	addi	s0,sp,32
20405d30:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:864
	if ((uintptr_t)sd == (uintptr_t)&__metal_dt_test_100000) {
20405d34:	fec42703          	lw	a4,-20(s0)
20405d38:	82018793          	addi	a5,gp,-2016 # 800007c0 <__metal_dt_test_100000>
20405d3c:	00f71563          	bne	a4,a5,20405d46 <__metal_driver_sifive_test0_base+0x1c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:865
		return METAL_SIFIVE_TEST0_100000_BASE_ADDRESS;
20405d40:	001007b7          	lui	a5,0x100
20405d44:	a011                	j	20405d48 <__metal_driver_sifive_test0_base+0x1e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:868
		return 0;
20405d46:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:870
}
20405d48:	853e                	mv	a0,a5
20405d4a:	4472                	lw	s0,28(sp)
20405d4c:	6105                	addi	sp,sp,32
20405d4e:	8082                	ret

20405d50 <__metal_driver_sifive_test0_exit>:
__metal_driver_sifive_test0_exit():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_test0.c:18
#include <metal/io.h>

void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) {
20405d50:	7179                	addi	sp,sp,-48
20405d52:	d606                	sw	ra,44(sp)
20405d54:	d422                	sw	s0,40(sp)
20405d56:	1800                	addi	s0,sp,48
20405d58:	fca42e23          	sw	a0,-36(s0)
20405d5c:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_test0.c:19
    long base = __metal_driver_sifive_test0_base(sd);
20405d60:	fdc42503          	lw	a0,-36(s0)
20405d64:	37d9                	jal	20405d2a <__metal_driver_sifive_test0_base>
20405d66:	87aa                	mv	a5,a0
20405d68:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_test0.c:20
    uint32_t out = (code << 16) + (code == 0 ? 0x5555 : 0x3333);
20405d6c:	fd842783          	lw	a5,-40(s0)
20405d70:	01079713          	slli	a4,a5,0x10
20405d74:	fd842783          	lw	a5,-40(s0)
20405d78:	e789                	bnez	a5,20405d82 <__metal_driver_sifive_test0_exit+0x32>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 1)
20405d7a:	6795                	lui	a5,0x5
20405d7c:	55578793          	addi	a5,a5,1365 # 5555 <__heap_size+0x4d55>
20405d80:	a021                	j	20405d88 <__metal_driver_sifive_test0_exit+0x38>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 2)
20405d82:	678d                	lui	a5,0x3
20405d84:	33378793          	addi	a5,a5,819 # 3333 <__heap_size+0x2b33>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 4)
20405d88:	97ba                	add	a5,a5,a4
20405d8a:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_test0.c:22 (discriminator 1)
    while (1) {
        __METAL_ACCESS_ONCE((
20405d8e:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_test0.c:23 (discriminator 1)
            __metal_io_u32 *)(base + METAL_SIFIVE_TEST0_FINISHER_OFFSET)) = out;
20405d92:	fe842703          	lw	a4,-24(s0)
20405d96:	c398                	sw	a4,0(a5)
20405d98:	bfdd                	j	20405d8e <__metal_driver_sifive_test0_exit+0x3e>

20405d9a <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:888
{
20405d9a:	1101                	addi	sp,sp,-32
20405d9c:	ce22                	sw	s0,28(sp)
20405d9e:	1000                	addi	s0,sp,32
20405da0:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:889
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20405da4:	fec42703          	lw	a4,-20(s0)
20405da8:	800007b7          	lui	a5,0x80000
20405dac:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20405db0:	00f71563          	bne	a4,a5,20405dba <__metal_driver_sifive_uart0_control_base+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:890
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20405db4:	100137b7          	lui	a5,0x10013
20405db8:	a011                	j	20405dbc <__metal_driver_sifive_uart0_control_base+0x22>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:893
		return 0;
20405dba:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:895
}
20405dbc:	853e                	mv	a0,a5
20405dbe:	4472                	lw	s0,28(sp)
20405dc0:	6105                	addi	sp,sp,32
20405dc2:	8082                	ret

20405dc4 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:918
{
20405dc4:	1101                	addi	sp,sp,-32
20405dc6:	ce22                	sw	s0,28(sp)
20405dc8:	1000                	addi	s0,sp,32
20405dca:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:919
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20405dce:	fec42703          	lw	a4,-20(s0)
20405dd2:	800007b7          	lui	a5,0x80000
20405dd6:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20405dda:	00f71763          	bne	a4,a5,20405de8 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:920
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20405dde:	800007b7          	lui	a5,0x80000
20405de2:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffefe8>
20405de6:	a011                	j	20405dea <__metal_driver_sifive_uart0_interrupt_parent+0x26>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:923
		return 0;
20405de8:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:925
}
20405dea:	853e                	mv	a0,a5
20405dec:	4472                	lw	s0,28(sp)
20405dee:	6105                	addi	sp,sp,32
20405df0:	8082                	ret

20405df2 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:928
{
20405df2:	1101                	addi	sp,sp,-32
20405df4:	ce22                	sw	s0,28(sp)
20405df6:	1000                	addi	s0,sp,32
20405df8:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:929
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20405dfc:	fec42703          	lw	a4,-20(s0)
20405e00:	800007b7          	lui	a5,0x80000
20405e04:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20405e08:	00f71463          	bne	a4,a5,20405e10 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:930
		return 5;
20405e0c:	4795                	li	a5,5
20405e0e:	a011                	j	20405e12 <__metal_driver_sifive_uart0_interrupt_line+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:933
		return 0;
20405e10:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:935
}
20405e12:	853e                	mv	a0,a5
20405e14:	4472                	lw	s0,28(sp)
20405e16:	6105                	addi	sp,sp,32
20405e18:	8082                	ret

20405e1a <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:938
{
20405e1a:	1101                	addi	sp,sp,-32
20405e1c:	ce22                	sw	s0,28(sp)
20405e1e:	1000                	addi	s0,sp,32
20405e20:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:939
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20405e24:	fec42703          	lw	a4,-20(s0)
20405e28:	800007b7          	lui	a5,0x80000
20405e2c:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20405e30:	00f71763          	bne	a4,a5,20405e3e <__metal_driver_sifive_uart0_clock+0x24>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:940
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20405e34:	800007b7          	lui	a5,0x80000
20405e38:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xfffff320>
20405e3c:	a011                	j	20405e40 <__metal_driver_sifive_uart0_clock+0x26>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:943
		return 0;
20405e3e:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:945
}
20405e40:	853e                	mv	a0,a5
20405e42:	4472                	lw	s0,28(sp)
20405e44:	6105                	addi	sp,sp,32
20405e46:	8082                	ret

20405e48 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:948
{
20405e48:	1101                	addi	sp,sp,-32
20405e4a:	ce22                	sw	s0,28(sp)
20405e4c:	1000                	addi	s0,sp,32
20405e4e:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:949
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20405e52:	fec42703          	lw	a4,-20(s0)
20405e56:	800007b7          	lui	a5,0x80000
20405e5a:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20405e5e:	00f71563          	bne	a4,a5,20405e68 <__metal_driver_sifive_uart0_pinmux+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:950
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20405e62:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405e66:	a011                	j	20405e6a <__metal_driver_sifive_uart0_pinmux+0x22>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:953
		return 0;
20405e68:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:955
}
20405e6a:	853e                	mv	a0,a5
20405e6c:	4472                	lw	s0,28(sp)
20405e6e:	6105                	addi	sp,sp,32
20405e70:	8082                	ret

20405e72 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:958
{
20405e72:	1101                	addi	sp,sp,-32
20405e74:	ce22                	sw	s0,28(sp)
20405e76:	1000                	addi	s0,sp,32
20405e78:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:959
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20405e7c:	fec42703          	lw	a4,-20(s0)
20405e80:	800007b7          	lui	a5,0x80000
20405e84:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20405e88:	00f71463          	bne	a4,a5,20405e90 <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:960
		return 0;
20405e8c:	4781                	li	a5,0
20405e8e:	a011                	j	20405e92 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:963
		return 0;
20405e90:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:965
}
20405e92:	853e                	mv	a0,a5
20405e94:	4472                	lw	s0,28(sp)
20405e96:	6105                	addi	sp,sp,32
20405e98:	8082                	ret

20405e9a <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:968
{
20405e9a:	1101                	addi	sp,sp,-32
20405e9c:	ce22                	sw	s0,28(sp)
20405e9e:	1000                	addi	s0,sp,32
20405ea0:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:969
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20405ea4:	fec42703          	lw	a4,-20(s0)
20405ea8:	800007b7          	lui	a5,0x80000
20405eac:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xfffff2e8>
20405eb0:	00f71563          	bne	a4,a5,20405eba <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:970
		return 196608;
20405eb4:	000307b7          	lui	a5,0x30
20405eb8:	a011                	j	20405ebc <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:973
		return 0;
20405eba:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:975
}
20405ebc:	853e                	mv	a0,a5
20405ebe:	4472                	lw	s0,28(sp)
20405ec0:	6105                	addi	sp,sp,32
20405ec2:	8082                	ret

20405ec4 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20405ec4:	1101                	addi	sp,sp,-32
20405ec6:	ce06                	sw	ra,28(sp)
20405ec8:	cc22                	sw	s0,24(sp)
20405eca:	1000                	addi	s0,sp,32
20405ecc:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20405ed0:	fec42503          	lw	a0,-20(s0)
20405ed4:	3dc5                	jal	20405dc4 <__metal_driver_sifive_uart0_interrupt_parent>
20405ed6:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:39
}
20405ed8:	853e                	mv	a0,a5
20405eda:	40f2                	lw	ra,28(sp)
20405edc:	4462                	lw	s0,24(sp)
20405ede:	6105                	addi	sp,sp,32
20405ee0:	8082                	ret

20405ee2 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
20405ee2:	1101                	addi	sp,sp,-32
20405ee4:	ce06                	sw	ra,28(sp)
20405ee6:	cc22                	sw	s0,24(sp)
20405ee8:	1000                	addi	s0,sp,32
20405eea:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20405eee:	fec42503          	lw	a0,-20(s0)
20405ef2:	3701                	jal	20405df2 <__metal_driver_sifive_uart0_interrupt_line>
20405ef4:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:43
}
20405ef6:	853e                	mv	a0,a5
20405ef8:	40f2                	lw	ra,28(sp)
20405efa:	4462                	lw	s0,24(sp)
20405efc:	6105                	addi	sp,sp,32
20405efe:	8082                	ret

20405f00 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
20405f00:	7179                	addi	sp,sp,-48
20405f02:	d606                	sw	ra,44(sp)
20405f04:	d422                	sw	s0,40(sp)
20405f06:	1800                	addi	s0,sp,48
20405f08:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20405f0c:	fdc42503          	lw	a0,-36(s0)
20405f10:	e8bff0ef          	jal	ra,20405d9a <__metal_driver_sifive_uart0_control_base>
20405f14:	87aa                	mv	a5,a0
20405f16:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20405f1a:	fec42783          	lw	a5,-20(s0)
20405f1e:	07c1                	addi	a5,a5,16
20405f20:	439c                	lw	a5,0(a5)
20405f22:	fec42703          	lw	a4,-20(s0)
20405f26:	0741                	addi	a4,a4,16
20405f28:	0017e793          	ori	a5,a5,1
20405f2c:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
20405f2e:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:50
}
20405f30:	853e                	mv	a0,a5
20405f32:	50b2                	lw	ra,44(sp)
20405f34:	5422                	lw	s0,40(sp)
20405f36:	6145                	addi	sp,sp,48
20405f38:	8082                	ret

20405f3a <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20405f3a:	7179                	addi	sp,sp,-48
20405f3c:	d606                	sw	ra,44(sp)
20405f3e:	d422                	sw	s0,40(sp)
20405f40:	1800                	addi	s0,sp,48
20405f42:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20405f46:	fdc42503          	lw	a0,-36(s0)
20405f4a:	e51ff0ef          	jal	ra,20405d9a <__metal_driver_sifive_uart0_control_base>
20405f4e:	87aa                	mv	a5,a0
20405f50:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20405f54:	fec42783          	lw	a5,-20(s0)
20405f58:	07c1                	addi	a5,a5,16
20405f5a:	439c                	lw	a5,0(a5)
20405f5c:	fec42703          	lw	a4,-20(s0)
20405f60:	0741                	addi	a4,a4,16
20405f62:	9bf9                	andi	a5,a5,-2
20405f64:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20405f66:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:57
}
20405f68:	853e                	mv	a0,a5
20405f6a:	50b2                	lw	ra,44(sp)
20405f6c:	5422                	lw	s0,40(sp)
20405f6e:	6145                	addi	sp,sp,48
20405f70:	8082                	ret

20405f72 <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20405f72:	7179                	addi	sp,sp,-48
20405f74:	d606                	sw	ra,44(sp)
20405f76:	d422                	sw	s0,40(sp)
20405f78:	1800                	addi	s0,sp,48
20405f7a:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20405f7e:	fdc42503          	lw	a0,-36(s0)
20405f82:	e19ff0ef          	jal	ra,20405d9a <__metal_driver_sifive_uart0_control_base>
20405f86:	87aa                	mv	a5,a0
20405f88:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20405f8c:	fec42783          	lw	a5,-20(s0)
20405f90:	07c1                	addi	a5,a5,16
20405f92:	439c                	lw	a5,0(a5)
20405f94:	fec42703          	lw	a4,-20(s0)
20405f98:	0741                	addi	a4,a4,16
20405f9a:	0027e793          	ori	a5,a5,2
20405f9e:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
20405fa0:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:64
}
20405fa2:	853e                	mv	a0,a5
20405fa4:	50b2                	lw	ra,44(sp)
20405fa6:	5422                	lw	s0,40(sp)
20405fa8:	6145                	addi	sp,sp,48
20405faa:	8082                	ret

20405fac <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
20405fac:	7179                	addi	sp,sp,-48
20405fae:	d606                	sw	ra,44(sp)
20405fb0:	d422                	sw	s0,40(sp)
20405fb2:	1800                	addi	s0,sp,48
20405fb4:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20405fb8:	fdc42503          	lw	a0,-36(s0)
20405fbc:	ddfff0ef          	jal	ra,20405d9a <__metal_driver_sifive_uart0_control_base>
20405fc0:	87aa                	mv	a5,a0
20405fc2:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20405fc6:	fec42783          	lw	a5,-20(s0)
20405fca:	07c1                	addi	a5,a5,16
20405fcc:	439c                	lw	a5,0(a5)
20405fce:	fec42703          	lw	a4,-20(s0)
20405fd2:	0741                	addi	a4,a4,16
20405fd4:	9bf5                	andi	a5,a5,-3
20405fd6:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20405fd8:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:71
}
20405fda:	853e                	mv	a0,a5
20405fdc:	50b2                	lw	ra,44(sp)
20405fde:	5422                	lw	s0,40(sp)
20405fe0:	6145                	addi	sp,sp,48
20405fe2:	8082                	ret

20405fe4 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
20405fe4:	7179                	addi	sp,sp,-48
20405fe6:	d606                	sw	ra,44(sp)
20405fe8:	d422                	sw	s0,40(sp)
20405fea:	1800                	addi	s0,sp,48
20405fec:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20405ff0:	fdc42503          	lw	a0,-36(s0)
20405ff4:	da7ff0ef          	jal	ra,20405d9a <__metal_driver_sifive_uart0_control_base>
20405ff8:	87aa                	mv	a5,a0
20405ffa:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20405ffe:	fec42783          	lw	a5,-20(s0)
20406002:	439c                	lw	a5,0(a5)
20406004:	83fd                	srli	a5,a5,0x1f
20406006:	0ff7f793          	zext.b	a5,a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:77
}
2040600a:	853e                	mv	a0,a5
2040600c:	50b2                	lw	ra,44(sp)
2040600e:	5422                	lw	s0,40(sp)
20406010:	6145                	addi	sp,sp,48
20406012:	8082                	ret

20406014 <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20406014:	7179                	addi	sp,sp,-48
20406016:	d606                	sw	ra,44(sp)
20406018:	d422                	sw	s0,40(sp)
2040601a:	1800                	addi	s0,sp,48
2040601c:	fca42e23          	sw	a0,-36(s0)
20406020:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406024:	fdc42503          	lw	a0,-36(s0)
20406028:	d73ff0ef          	jal	ra,20405d9a <__metal_driver_sifive_uart0_control_base>
2040602c:	87aa                	mv	a5,a0
2040602e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
20406032:	fec42783          	lw	a5,-20(s0)
20406036:	07a1                	addi	a5,a5,8
20406038:	4398                	lw	a4,0(a5)
2040603a:	fd842783          	lw	a5,-40(s0)
2040603e:	01079693          	slli	a3,a5,0x10
20406042:	000707b7          	lui	a5,0x70
20406046:	8ff5                	and	a5,a5,a3
20406048:	fec42683          	lw	a3,-20(s0)
2040604c:	06a1                	addi	a3,a3,8
2040604e:	8fd9                	or	a5,a5,a4
20406050:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
20406052:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:85
}
20406054:	853e                	mv	a0,a5
20406056:	50b2                	lw	ra,44(sp)
20406058:	5422                	lw	s0,40(sp)
2040605a:	6145                	addi	sp,sp,48
2040605c:	8082                	ret

2040605e <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
2040605e:	7179                	addi	sp,sp,-48
20406060:	d606                	sw	ra,44(sp)
20406062:	d422                	sw	s0,40(sp)
20406064:	1800                	addi	s0,sp,48
20406066:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040606a:	fdc42503          	lw	a0,-36(s0)
2040606e:	d2dff0ef          	jal	ra,20405d9a <__metal_driver_sifive_uart0_control_base>
20406072:	87aa                	mv	a5,a0
20406074:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
20406078:	fec42783          	lw	a5,-20(s0)
2040607c:	07a1                	addi	a5,a5,8
2040607e:	439c                	lw	a5,0(a5)
20406080:	83c1                	srli	a5,a5,0x10
20406082:	8b9d                	andi	a5,a5,7
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:91
}
20406084:	853e                	mv	a0,a5
20406086:	50b2                	lw	ra,44(sp)
20406088:	5422                	lw	s0,40(sp)
2040608a:	6145                	addi	sp,sp,48
2040608c:	8082                	ret

2040608e <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
2040608e:	7179                	addi	sp,sp,-48
20406090:	d606                	sw	ra,44(sp)
20406092:	d422                	sw	s0,40(sp)
20406094:	1800                	addi	s0,sp,48
20406096:	fca42e23          	sw	a0,-36(s0)
2040609a:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040609e:	fdc42503          	lw	a0,-36(s0)
204060a2:	cf9ff0ef          	jal	ra,20405d9a <__metal_driver_sifive_uart0_control_base>
204060a6:	87aa                	mv	a5,a0
204060a8:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
204060ac:	fec42783          	lw	a5,-20(s0)
204060b0:	07b1                	addi	a5,a5,12
204060b2:	4398                	lw	a4,0(a5)
204060b4:	fd842783          	lw	a5,-40(s0)
204060b8:	01079693          	slli	a3,a5,0x10
204060bc:	000707b7          	lui	a5,0x70
204060c0:	8ff5                	and	a5,a5,a3
204060c2:	fec42683          	lw	a3,-20(s0)
204060c6:	06b1                	addi	a3,a3,12
204060c8:	8fd9                	or	a5,a5,a4
204060ca:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
204060cc:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:99
}
204060ce:	853e                	mv	a0,a5
204060d0:	50b2                	lw	ra,44(sp)
204060d2:	5422                	lw	s0,40(sp)
204060d4:	6145                	addi	sp,sp,48
204060d6:	8082                	ret

204060d8 <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
204060d8:	7179                	addi	sp,sp,-48
204060da:	d606                	sw	ra,44(sp)
204060dc:	d422                	sw	s0,40(sp)
204060de:	1800                	addi	s0,sp,48
204060e0:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204060e4:	fdc42503          	lw	a0,-36(s0)
204060e8:	cb3ff0ef          	jal	ra,20405d9a <__metal_driver_sifive_uart0_control_base>
204060ec:	87aa                	mv	a5,a0
204060ee:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
204060f2:	fec42783          	lw	a5,-20(s0)
204060f6:	07b1                	addi	a5,a5,12
204060f8:	439c                	lw	a5,0(a5)
204060fa:	83c1                	srli	a5,a5,0x10
204060fc:	8b9d                	andi	a5,a5,7
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:105
}
204060fe:	853e                	mv	a0,a5
20406100:	50b2                	lw	ra,44(sp)
20406102:	5422                	lw	s0,40(sp)
20406104:	6145                	addi	sp,sp,48
20406106:	8082                	ret

20406108 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
20406108:	7179                	addi	sp,sp,-48
2040610a:	d606                	sw	ra,44(sp)
2040610c:	d422                	sw	s0,40(sp)
2040610e:	1800                	addi	s0,sp,48
20406110:	fca42e23          	sw	a0,-36(s0)
20406114:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406118:	fdc42503          	lw	a0,-36(s0)
2040611c:	c7fff0ef          	jal	ra,20405d9a <__metal_driver_sifive_uart0_control_base>
20406120:	87aa                	mv	a5,a0
20406122:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
20406126:	0001                	nop
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
20406128:	fdc42503          	lw	a0,-36(s0)
2040612c:	eb9ff0ef          	jal	ra,20405fe4 <__metal_driver_sifive_uart0_txready>
20406130:	87aa                	mv	a5,a0
20406132:	fbfd                	bnez	a5,20406128 <__metal_driver_sifive_uart0_putc+0x20>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20406134:	fec42783          	lw	a5,-20(s0)
20406138:	fd842703          	lw	a4,-40(s0)
2040613c:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
2040613e:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:115
}
20406140:	853e                	mv	a0,a5
20406142:	50b2                	lw	ra,44(sp)
20406144:	5422                	lw	s0,40(sp)
20406146:	6145                	addi	sp,sp,48
20406148:	8082                	ret

2040614a <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
2040614a:	7179                	addi	sp,sp,-48
2040614c:	d606                	sw	ra,44(sp)
2040614e:	d422                	sw	s0,40(sp)
20406150:	1800                	addi	s0,sp,48
20406152:	fca42e23          	sw	a0,-36(s0)
20406156:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040615a:	fdc42503          	lw	a0,-36(s0)
2040615e:	c3dff0ef          	jal	ra,20405d9a <__metal_driver_sifive_uart0_control_base>
20406162:	87aa                	mv	a5,a0
20406164:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
20406168:	fec42783          	lw	a5,-20(s0)
2040616c:	0791                	addi	a5,a5,4
2040616e:	439c                	lw	a5,0(a5)
20406170:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
20406174:	fe842783          	lw	a5,-24(s0)
20406178:	0007d763          	bgez	a5,20406186 <__metal_driver_sifive_uart0_getc+0x3c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
2040617c:	fd842783          	lw	a5,-40(s0)
20406180:	577d                	li	a4,-1
20406182:	c398                	sw	a4,0(a5)
20406184:	a801                	j	20406194 <__metal_driver_sifive_uart0_getc+0x4a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
20406186:	fe842783          	lw	a5,-24(s0)
2040618a:	0ff7f713          	zext.b	a4,a5
2040618e:	fd842783          	lw	a5,-40(s0)
20406192:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
20406194:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:129
}
20406196:	853e                	mv	a0,a5
20406198:	50b2                	lw	ra,44(sp)
2040619a:	5422                	lw	s0,40(sp)
2040619c:	6145                	addi	sp,sp,48
2040619e:	8082                	ret

204061a0 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
204061a0:	7179                	addi	sp,sp,-48
204061a2:	d622                	sw	s0,44(sp)
204061a4:	1800                	addi	s0,sp,48
204061a6:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
204061aa:	fdc42783          	lw	a5,-36(s0)
204061ae:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
204061b2:	fec42783          	lw	a5,-20(s0)
204061b6:	43dc                	lw	a5,4(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:134
}
204061b8:	853e                	mv	a0,a5
204061ba:	5432                	lw	s0,44(sp)
204061bc:	6145                	addi	sp,sp,48
204061be:	8082                	ret

204061c0 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
204061c0:	7179                	addi	sp,sp,-48
204061c2:	d606                	sw	ra,44(sp)
204061c4:	d422                	sw	s0,40(sp)
204061c6:	1800                	addi	s0,sp,48
204061c8:	fca42e23          	sw	a0,-36(s0)
204061cc:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
204061d0:	fdc42783          	lw	a5,-36(s0)
204061d4:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
204061d8:	fdc42503          	lw	a0,-36(s0)
204061dc:	bbfff0ef          	jal	ra,20405d9a <__metal_driver_sifive_uart0_control_base>
204061e0:	87aa                	mv	a5,a0
204061e2:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
204061e6:	fdc42503          	lw	a0,-36(s0)
204061ea:	c31ff0ef          	jal	ra,20405e1a <__metal_driver_sifive_uart0_clock>
204061ee:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
204061f2:	fd842703          	lw	a4,-40(s0)
204061f6:	fec42783          	lw	a5,-20(s0)
204061fa:	c3d8                	sw	a4,4(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
204061fc:	fe442783          	lw	a5,-28(s0)
20406200:	cbb1                	beqz	a5,20406254 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
20406202:	fe442783          	lw	a5,-28(s0)
20406206:	439c                	lw	a5,0(a5)
20406208:	439c                	lw	a5,0(a5)
2040620a:	fe442503          	lw	a0,-28(s0)
2040620e:	9782                	jalr	a5
20406210:	fea42023          	sw	a0,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
20406214:	fe042703          	lw	a4,-32(s0)
20406218:	fd842783          	lw	a5,-40(s0)
2040621c:	02f747b3          	div	a5,a4,a5
20406220:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
20406224:	fe842783          	lw	a5,-24(s0)
20406228:	07e1                	addi	a5,a5,24
2040622a:	c398                	sw	a4,0(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
2040622c:	fe842783          	lw	a5,-24(s0)
20406230:	07a1                	addi	a5,a5,8
20406232:	439c                	lw	a5,0(a5)
20406234:	fe842703          	lw	a4,-24(s0)
20406238:	0721                	addi	a4,a4,8
2040623a:	0017e793          	ori	a5,a5,1
2040623e:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
20406240:	fe842783          	lw	a5,-24(s0)
20406244:	07b1                	addi	a5,a5,12
20406246:	439c                	lw	a5,0(a5)
20406248:	fe842703          	lw	a4,-24(s0)
2040624c:	0731                	addi	a4,a4,12
2040624e:	0017e793          	ori	a5,a5,1
20406252:	c31c                	sw	a5,0(a4)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
20406254:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:151
}
20406256:	853e                	mv	a0,a5
20406258:	50b2                	lw	ra,44(sp)
2040625a:	5422                	lw	s0,40(sp)
2040625c:	6145                	addi	sp,sp,48
2040625e:	8082                	ret

20406260 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
20406260:	7139                	addi	sp,sp,-64
20406262:	de06                	sw	ra,60(sp)
20406264:	dc22                	sw	s0,56(sp)
20406266:	0080                	addi	s0,sp,64
20406268:	fca42623          	sw	a0,-52(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
2040626c:	fcc42783          	lw	a5,-52(s0)
20406270:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20406274:	fcc42503          	lw	a0,-52(s0)
20406278:	b23ff0ef          	jal	ra,20405d9a <__metal_driver_sifive_uart0_control_base>
2040627c:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
2040627e:	fef42423          	sw	a5,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
20406282:	fcc42503          	lw	a0,-52(s0)
20406286:	b95ff0ef          	jal	ra,20405e1a <__metal_driver_sifive_uart0_clock>
2040628a:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
2040628e:	fe842783          	lw	a5,-24(s0)
20406292:	07a1                	addi	a5,a5,8
20406294:	4398                	lw	a4,0(a5)
20406296:	fe842783          	lw	a5,-24(s0)
2040629a:	07a1                	addi	a5,a5,8
2040629c:	86be                	mv	a3,a5
2040629e:	fff907b7          	lui	a5,0xfff90
204062a2:	17fd                	addi	a5,a5,-1
204062a4:	8ff9                	and	a5,a5,a4
204062a6:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
204062a8:	fe842783          	lw	a5,-24(s0)
204062ac:	07a1                	addi	a5,a5,8
204062ae:	4398                	lw	a4,0(a5)
204062b0:	fe842783          	lw	a5,-24(s0)
204062b4:	07a1                	addi	a5,a5,8
204062b6:	86be                	mv	a3,a5
204062b8:	67c1                	lui	a5,0x10
204062ba:	8fd9                	or	a5,a5,a4
204062bc:	c29c                	sw	a5,0(a3)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
204062be:	0001                	nop
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
204062c0:	fe842783          	lw	a5,-24(s0)
204062c4:	07d1                	addi	a5,a5,20
204062c6:	439c                	lw	a5,0(a5)
204062c8:	8b85                	andi	a5,a5,1
204062ca:	dbfd                	beqz	a5,204062c0 <pre_rate_change_callback_func+0x60>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
204062cc:	fe842783          	lw	a5,-24(s0)
204062d0:	07a1                	addi	a5,a5,8
204062d2:	439c                	lw	a5,0(a5)
204062d4:	8b89                	andi	a5,a5,2
204062d6:	c399                	beqz	a5,204062dc <pre_rate_change_callback_func+0x7c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
204062d8:	47a5                	li	a5,9
204062da:	a011                	j	204062de <pre_rate_change_callback_func+0x7e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
204062dc:	47a9                	li	a5,10
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
204062de:	fef42023          	sw	a5,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
204062e2:	fe442783          	lw	a5,-28(s0)
204062e6:	439c                	lw	a5,0(a5)
204062e8:	439c                	lw	a5,0(a5)
204062ea:	fe442503          	lw	a0,-28(s0)
204062ee:	9782                	jalr	a5
204062f0:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
204062f4:	fe042703          	lw	a4,-32(s0)
204062f8:	fdc42783          	lw	a5,-36(s0)
204062fc:	02f707b3          	mul	a5,a4,a5
20406300:	873e                	mv	a4,a5
20406302:	fec42783          	lw	a5,-20(s0)
20406306:	43dc                	lw	a5,4(a5)
20406308:	02f757b3          	divu	a5,a4,a5
2040630c:	fcf42c23          	sw	a5,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
20406310:	fc042a23          	sw	zero,-44(s0)
20406314:	a039                	j	20406322 <pre_rate_change_callback_func+0xc2>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
20406316:	0001                	nop
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
20406318:	fd442783          	lw	a5,-44(s0)
2040631c:	0785                	addi	a5,a5,1
2040631e:	fcf42a23          	sw	a5,-44(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
20406322:	fd442783          	lw	a5,-44(s0)
20406326:	fd842703          	lw	a4,-40(s0)
2040632a:	fee7c6e3          	blt	a5,a4,20406316 <pre_rate_change_callback_func+0xb6>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:180
}
2040632e:	0001                	nop
20406330:	0001                	nop
20406332:	50f2                	lw	ra,60(sp)
20406334:	5462                	lw	s0,56(sp)
20406336:	6121                	addi	sp,sp,64
20406338:	8082                	ret

2040633a <post_rate_change_callback_func>:
post_rate_change_callback_func():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
2040633a:	7179                	addi	sp,sp,-48
2040633c:	d606                	sw	ra,44(sp)
2040633e:	d422                	sw	s0,40(sp)
20406340:	1800                	addi	s0,sp,48
20406342:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
20406346:	fdc42783          	lw	a5,-36(s0)
2040634a:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
2040634e:	fec42703          	lw	a4,-20(s0)
20406352:	fec42783          	lw	a5,-20(s0)
20406356:	43dc                	lw	a5,4(a5)
20406358:	85be                	mv	a1,a5
2040635a:	853a                	mv	a0,a4
2040635c:	dd3fb0ef          	jal	ra,2040212e <metal_uart_set_baud_rate>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:185
}
20406360:	0001                	nop
20406362:	50b2                	lw	ra,44(sp)
20406364:	5422                	lw	s0,40(sp)
20406366:	6145                	addi	sp,sp,48
20406368:	8082                	ret

2040636a <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
2040636a:	7139                	addi	sp,sp,-64
2040636c:	de06                	sw	ra,60(sp)
2040636e:	dc22                	sw	s0,56(sp)
20406370:	0080                	addi	s0,sp,64
20406372:	fca42623          	sw	a0,-52(s0)
20406376:	fcb42423          	sw	a1,-56(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
2040637a:	fcc42783          	lw	a5,-52(s0)
2040637e:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20406382:	fcc42503          	lw	a0,-52(s0)
20406386:	a95ff0ef          	jal	ra,20405e1a <__metal_driver_sifive_uart0_clock>
2040638a:	fea42423          	sw	a0,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
2040638e:	fcc42503          	lw	a0,-52(s0)
20406392:	ab7ff0ef          	jal	ra,20405e48 <__metal_driver_sifive_uart0_pinmux>
20406396:	fea42223          	sw	a0,-28(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
2040639a:	fe842783          	lw	a5,-24(s0)
2040639e:	c7b9                	beqz	a5,204063ec <__metal_driver_sifive_uart0_init+0x82>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
204063a0:	fec42783          	lw	a5,-20(s0)
204063a4:	20406737          	lui	a4,0x20406
204063a8:	26070713          	addi	a4,a4,608 # 20406260 <pre_rate_change_callback_func>
204063ac:	c798                	sw	a4,8(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
204063ae:	fec42783          	lw	a5,-20(s0)
204063b2:	fcc42703          	lw	a4,-52(s0)
204063b6:	c7d8                	sw	a4,12(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
204063b8:	fec42783          	lw	a5,-20(s0)
204063bc:	07a1                	addi	a5,a5,8
204063be:	85be                	mv	a1,a5
204063c0:	fe842503          	lw	a0,-24(s0)
204063c4:	2abd                	jal	20406542 <metal_clock_register_pre_rate_change_callback>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
204063c6:	fec42783          	lw	a5,-20(s0)
204063ca:	20406737          	lui	a4,0x20406
204063ce:	33a70713          	addi	a4,a4,826 # 2040633a <post_rate_change_callback_func>
204063d2:	cbd8                	sw	a4,20(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
204063d4:	fec42783          	lw	a5,-20(s0)
204063d8:	fcc42703          	lw	a4,-52(s0)
204063dc:	cf98                	sw	a4,24(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
204063de:	fec42783          	lw	a5,-20(s0)
204063e2:	07d1                	addi	a5,a5,20
204063e4:	85be                	mv	a1,a5
204063e6:	fe842503          	lw	a0,-24(s0)
204063ea:	2269                	jal	20406574 <metal_clock_register_post_rate_change_callback>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
204063ec:	fec42783          	lw	a5,-20(s0)
204063f0:	fc842583          	lw	a1,-56(s0)
204063f4:	853e                	mv	a0,a5
204063f6:	d39fb0ef          	jal	ra,2040212e <metal_uart_set_baud_rate>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
204063fa:	fe442783          	lw	a5,-28(s0)
204063fe:	cb95                	beqz	a5,20406432 <__metal_driver_sifive_uart0_init+0xc8>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20406400:	fcc42503          	lw	a0,-52(s0)
20406404:	a6fff0ef          	jal	ra,20405e72 <__metal_driver_sifive_uart0_pinmux_output_selector>
20406408:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
2040640a:	fef42023          	sw	a5,-32(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
2040640e:	fcc42503          	lw	a0,-52(s0)
20406412:	a89ff0ef          	jal	ra,20405e9a <__metal_driver_sifive_uart0_pinmux_source_selector>
20406416:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
20406418:	fcf42e23          	sw	a5,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
2040641c:	fe442783          	lw	a5,-28(s0)
20406420:	439c                	lw	a5,0(a5)
20406422:	53dc                	lw	a5,36(a5)
20406424:	fdc42603          	lw	a2,-36(s0)
20406428:	fe042583          	lw	a1,-32(s0)
2040642c:	fe442503          	lw	a0,-28(s0)
20406430:	9782                	jalr	a5
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
20406432:	0001                	nop
20406434:	50f2                	lw	ra,60(sp)
20406436:	5462                	lw	s0,56(sp)
20406438:	6121                	addi	sp,sp,64
2040643a:	8082                	ret

2040643c <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
2040643c:	7179                	addi	sp,sp,-48
2040643e:	d606                	sw	ra,44(sp)
20406440:	d422                	sw	s0,40(sp)
20406442:	1800                	addi	s0,sp,48
20406444:	fca42e23          	sw	a0,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
20406448:	fdc42783          	lw	a5,-36(s0)
2040644c:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:52
    while (current) {
20406450:	a831                	j	2040646c <_metal_clock_call_all_callbacks+0x30>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20406452:	fec42783          	lw	a5,-20(s0)
20406456:	4398                	lw	a4,0(a5)
20406458:	fec42783          	lw	a5,-20(s0)
2040645c:	43dc                	lw	a5,4(a5)
2040645e:	853e                	mv	a0,a5
20406460:	9702                	jalr	a4
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:54
        current = current->_next;
20406462:	fec42783          	lw	a5,-20(s0)
20406466:	479c                	lw	a5,8(a5)
20406468:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:52
    while (current) {
2040646c:	fec42783          	lw	a5,-20(s0)
20406470:	f3ed                	bnez	a5,20406452 <_metal_clock_call_all_callbacks+0x16>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:56
    }
}
20406472:	0001                	nop
20406474:	0001                	nop
20406476:	50b2                	lw	ra,44(sp)
20406478:	5422                	lw	s0,40(sp)
2040647a:	6145                	addi	sp,sp,48
2040647c:	8082                	ret

2040647e <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
2040647e:	7179                	addi	sp,sp,-48
20406480:	d622                	sw	s0,44(sp)
20406482:	1800                	addi	s0,sp,48
20406484:	fca42e23          	sw	a0,-36(s0)
20406488:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
2040648c:	fd842783          	lw	a5,-40(s0)
20406490:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:66

    if (!list) {
20406494:	fdc42783          	lw	a5,-36(s0)
20406498:	e781                	bnez	a5,204064a0 <_metal_clock_append_to_callbacks+0x22>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:67
        return cb;
2040649a:	fd842783          	lw	a5,-40(s0)
2040649e:	a035                	j	204064ca <_metal_clock_append_to_callbacks+0x4c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
204064a0:	fdc42783          	lw	a5,-36(s0)
204064a4:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
204064a8:	a031                	j	204064b4 <_metal_clock_append_to_callbacks+0x36>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:73
        current = current->_next;
204064aa:	fec42783          	lw	a5,-20(s0)
204064ae:	479c                	lw	a5,8(a5)
204064b0:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
204064b4:	fec42783          	lw	a5,-20(s0)
204064b8:	479c                	lw	a5,8(a5)
204064ba:	fbe5                	bnez	a5,204064aa <_metal_clock_append_to_callbacks+0x2c>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
204064bc:	fec42783          	lw	a5,-20(s0)
204064c0:	fd842703          	lw	a4,-40(s0)
204064c4:	c798                	sw	a4,8(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:78

    return list;
204064c6:	fdc42783          	lw	a5,-36(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:79
}
204064ca:	853e                	mv	a0,a5
204064cc:	5432                	lw	s0,44(sp)
204064ce:	6145                	addi	sp,sp,48
204064d0:	8082                	ret

204064d2 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
204064d2:	1101                	addi	sp,sp,-32
204064d4:	ce06                	sw	ra,28(sp)
204064d6:	cc22                	sw	s0,24(sp)
204064d8:	1000                	addi	s0,sp,32
204064da:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
204064de:	fec42783          	lw	a5,-20(s0)
204064e2:	439c                	lw	a5,0(a5)
204064e4:	439c                	lw	a5,0(a5)
204064e6:	fec42503          	lw	a0,-20(s0)
204064ea:	9782                	jalr	a5
204064ec:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:112
}
204064ee:	853e                	mv	a0,a5
204064f0:	40f2                	lw	ra,28(sp)
204064f2:	4462                	lw	s0,24(sp)
204064f4:	6105                	addi	sp,sp,32
204064f6:	8082                	ret

204064f8 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
204064f8:	7179                	addi	sp,sp,-48
204064fa:	d606                	sw	ra,44(sp)
204064fc:	d422                	sw	s0,40(sp)
204064fe:	1800                	addi	s0,sp,48
20406500:	fca42e23          	sw	a0,-36(s0)
20406504:	fcb42c23          	sw	a1,-40(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20406508:	fdc42783          	lw	a5,-36(s0)
2040650c:	43dc                	lw	a5,4(a5)
2040650e:	853e                	mv	a0,a5
20406510:	3735                	jal	2040643c <_metal_clock_call_all_callbacks>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20406512:	fdc42783          	lw	a5,-36(s0)
20406516:	439c                	lw	a5,0(a5)
20406518:	43dc                	lw	a5,4(a5)
2040651a:	fd842583          	lw	a1,-40(s0)
2040651e:	fdc42503          	lw	a0,-36(s0)
20406522:	9782                	jalr	a5
20406524:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20406528:	fdc42783          	lw	a5,-36(s0)
2040652c:	479c                	lw	a5,8(a5)
2040652e:	853e                	mv	a0,a5
20406530:	f0dff0ef          	jal	ra,2040643c <_metal_clock_call_all_callbacks>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:135

    return out;
20406534:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:136
}
20406538:	853e                	mv	a0,a5
2040653a:	50b2                	lw	ra,44(sp)
2040653c:	5422                	lw	s0,40(sp)
2040653e:	6145                	addi	sp,sp,48
20406540:	8082                	ret

20406542 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20406542:	1101                	addi	sp,sp,-32
20406544:	ce06                	sw	ra,28(sp)
20406546:	cc22                	sw	s0,24(sp)
20406548:	1000                	addi	s0,sp,32
2040654a:	fea42623          	sw	a0,-20(s0)
2040654e:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20406552:	fec42783          	lw	a5,-20(s0)
20406556:	43dc                	lw	a5,4(a5)
20406558:	fe842583          	lw	a1,-24(s0)
2040655c:	853e                	mv	a0,a5
2040655e:	f21ff0ef          	jal	ra,2040647e <_metal_clock_append_to_callbacks>
20406562:	872a                	mv	a4,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20406564:	fec42783          	lw	a5,-20(s0)
20406568:	c3d8                	sw	a4,4(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:149
}
2040656a:	0001                	nop
2040656c:	40f2                	lw	ra,28(sp)
2040656e:	4462                	lw	s0,24(sp)
20406570:	6105                	addi	sp,sp,32
20406572:	8082                	ret

20406574 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20406574:	1101                	addi	sp,sp,-32
20406576:	ce06                	sw	ra,28(sp)
20406578:	cc22                	sw	s0,24(sp)
2040657a:	1000                	addi	s0,sp,32
2040657c:	fea42623          	sw	a0,-20(s0)
20406580:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20406584:	fec42783          	lw	a5,-20(s0)
20406588:	479c                	lw	a5,8(a5)
2040658a:	fe842583          	lw	a1,-24(s0)
2040658e:	853e                	mv	a0,a5
20406590:	eefff0ef          	jal	ra,2040647e <_metal_clock_append_to_callbacks>
20406594:	872a                	mv	a4,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
20406596:	fec42783          	lw	a5,-20(s0)
2040659a:	c798                	sw	a4,8(a5)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/clock.h:162
}
2040659c:	0001                	nop
2040659e:	40f2                	lw	ra,28(sp)
204065a0:	4462                	lw	s0,24(sp)
204065a2:	6105                	addi	sp,sp,32
204065a4:	8082                	ret

204065a6 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
204065a6:	1101                	addi	sp,sp,-32
204065a8:	ce06                	sw	ra,28(sp)
204065aa:	cc22                	sw	s0,24(sp)
204065ac:	1000                	addi	s0,sp,32
204065ae:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
204065b2:	fec42783          	lw	a5,-20(s0)
204065b6:	439c                	lw	a5,0(a5)
204065b8:	57dc                	lw	a5,44(a5)
204065ba:	fec42503          	lw	a0,-20(s0)
204065be:	9782                	jalr	a5
204065c0:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/cpu.h:226
}
204065c2:	853e                	mv	a0,a5
204065c4:	40f2                	lw	ra,28(sp)
204065c6:	4462                	lw	s0,24(sp)
204065c8:	6105                	addi	sp,sp,32
204065ca:	8082                	ret

204065cc <metal_cpu_get>:
metal_cpu_get():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
204065cc:	1101                	addi	sp,sp,-32
204065ce:	ce22                	sw	s0,28(sp)
204065d0:	1000                	addi	s0,sp,32
204065d2:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
204065d6:	fec42783          	lw	a5,-20(s0)
204065da:	eb99                	bnez	a5,204065f0 <metal_cpu_get+0x24>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
204065dc:	800007b7          	lui	a5,0x80000
204065e0:	fec42703          	lw	a4,-20(s0)
204065e4:	070a                	slli	a4,a4,0x2
204065e6:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xfffff338>
204065ea:	97ba                	add	a5,a5,a4
204065ec:	439c                	lw	a5,0(a5)
204065ee:	a011                	j	204065f2 <metal_cpu_get+0x26>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/cpu.c:11
    }
    return NULL;
204065f0:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/cpu.c:12
}
204065f2:	853e                	mv	a0,a5
204065f4:	4472                	lw	s0,28(sp)
204065f6:	6105                	addi	sp,sp,32
204065f8:	8082                	ret

204065fa <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
204065fa:	1101                	addi	sp,sp,-32
204065fc:	ce22                	sw	s0,28(sp)
204065fe:	1000                	addi	s0,sp,32
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20406600:	f14027f3          	csrr	a5,mhartid
20406604:	fef42623          	sw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/cpu.c:18
    return mhartid;
20406608:	fec42783          	lw	a5,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/cpu.c:20
#endif
}
2040660c:	853e                	mv	a0,a5
2040660e:	4472                	lw	s0,28(sp)
20406610:	6105                	addi	sp,sp,32
20406612:	8082                	ret

20406614 <__metal_shutdown_exit>:
__metal_shutdown_exit():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/shutdown.h:26
};

__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) {
20406614:	1101                	addi	sp,sp,-32
20406616:	ce06                	sw	ra,28(sp)
20406618:	cc22                	sw	s0,24(sp)
2040661a:	1000                	addi	s0,sp,32
2040661c:	fea42623          	sw	a0,-20(s0)
20406620:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/metal/shutdown.h:27
    sd->vtable->exit(sd, code);
20406624:	fec42783          	lw	a5,-20(s0)
20406628:	439c                	lw	a5,0(a5)
2040662a:	439c                	lw	a5,0(a5)
2040662c:	fe842583          	lw	a1,-24(s0)
20406630:	fec42503          	lw	a0,-20(s0)
20406634:	9782                	jalr	a5

20406636 <metal_shutdown>:
metal_shutdown():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/shutdown.c:11

extern __inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                             int code);

#if defined(__METAL_DT_SHUTDOWN_HANDLE)
void metal_shutdown(int code) {
20406636:	1101                	addi	sp,sp,-32
20406638:	ce06                	sw	ra,28(sp)
2040663a:	cc22                	sw	s0,24(sp)
2040663c:	1000                	addi	s0,sp,32
2040663e:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/shutdown.c:12
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
20406642:	fec42583          	lw	a1,-20(s0)
20406646:	82018513          	addi	a0,gp,-2016 # 800007c0 <__metal_dt_test_100000>
2040664a:	37e9                	jal	20406614 <__metal_shutdown_exit>
	...

20406680 <__metal_vector_table>:
IRQ_0():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20406680:	c42fc06f          	j	20402ac2 <metal_interrupt_vector_handler>

20406684 <IRQ_1>:
IRQ_1():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20406684:	c3efc06f          	j	20402ac2 <metal_interrupt_vector_handler>

20406688 <IRQ_2>:
IRQ_2():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20406688:	c3afc06f          	j	20402ac2 <metal_interrupt_vector_handler>

2040668c <IRQ_3>:
IRQ_3():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2040668c:	c64fc06f          	j	20402af0 <metal_software_interrupt_vector_handler>

20406690 <IRQ_4>:
IRQ_4():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20406690:	c32fc06f          	j	20402ac2 <metal_interrupt_vector_handler>

20406694 <IRQ_5>:
IRQ_5():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20406694:	c2efc06f          	j	20402ac2 <metal_interrupt_vector_handler>

20406698 <IRQ_6>:
IRQ_6():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20406698:	c2afc06f          	j	20402ac2 <metal_interrupt_vector_handler>

2040669c <IRQ_7>:
IRQ_7():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2040669c:	d4efc06f          	j	20402bea <metal_timer_interrupt_vector_handler>

204066a0 <IRQ_8>:
IRQ_8():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
204066a0:	c22fc06f          	j	20402ac2 <metal_interrupt_vector_handler>

204066a4 <IRQ_9>:
IRQ_9():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
204066a4:	c1efc06f          	j	20402ac2 <metal_interrupt_vector_handler>

204066a8 <IRQ_10>:
IRQ_10():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
204066a8:	c1afc06f          	j	20402ac2 <metal_interrupt_vector_handler>

204066ac <IRQ_11>:
IRQ_11():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
204066ac:	c16fc06f          	j	20402ac2 <metal_interrupt_vector_handler>

204066b0 <IRQ_12>:
IRQ_12():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
204066b0:	c12fc06f          	j	20402ac2 <metal_interrupt_vector_handler>

204066b4 <IRQ_13>:
IRQ_13():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
204066b4:	c0efc06f          	j	20402ac2 <metal_interrupt_vector_handler>

204066b8 <IRQ_14>:
IRQ_14():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
204066b8:	c0afc06f          	j	20402ac2 <metal_interrupt_vector_handler>

204066bc <IRQ_15>:
IRQ_15():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
204066bc:	c06fc06f          	j	20402ac2 <metal_interrupt_vector_handler>

204066c0 <IRQ_LC0>:
IRQ_LC0():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
204066c0:	839fc06f          	j	20402ef8 <metal_lc0_interrupt_vector_handler>

204066c4 <IRQ_LC1>:
IRQ_LC1():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
204066c4:	8cbfc06f          	j	20402f8e <metal_lc1_interrupt_vector_handler>

204066c8 <IRQ_LC2>:
IRQ_LC2():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
204066c8:	95dfc06f          	j	20403024 <metal_lc2_interrupt_vector_handler>

204066cc <IRQ_LC3>:
IRQ_LC3():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
204066cc:	9effc06f          	j	204030ba <metal_lc3_interrupt_vector_handler>

204066d0 <IRQ_LC4>:
IRQ_LC4():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
204066d0:	a81fc06f          	j	20403150 <metal_lc4_interrupt_vector_handler>

204066d4 <IRQ_LC5>:
IRQ_LC5():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
204066d4:	b13fc06f          	j	204031e6 <metal_lc5_interrupt_vector_handler>

204066d8 <IRQ_LC6>:
IRQ_LC6():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
204066d8:	ba5fc06f          	j	2040327c <metal_lc6_interrupt_vector_handler>

204066dc <IRQ_LC7>:
IRQ_LC7():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
204066dc:	c37fc06f          	j	20403312 <metal_lc7_interrupt_vector_handler>

204066e0 <IRQ_LC8>:
IRQ_LC8():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
204066e0:	cc9fc06f          	j	204033a8 <metal_lc8_interrupt_vector_handler>

204066e4 <IRQ_LC9>:
IRQ_LC9():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
204066e4:	d5bfc06f          	j	2040343e <metal_lc9_interrupt_vector_handler>

204066e8 <IRQ_LC10>:
IRQ_LC10():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
204066e8:	dedfc06f          	j	204034d4 <metal_lc10_interrupt_vector_handler>

204066ec <IRQ_LC11>:
IRQ_LC11():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
204066ec:	e7ffc06f          	j	2040356a <metal_lc11_interrupt_vector_handler>

204066f0 <IRQ_LC12>:
IRQ_LC12():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
204066f0:	f11fc06f          	j	20403600 <metal_lc12_interrupt_vector_handler>

204066f4 <IRQ_LC13>:
IRQ_LC13():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
204066f4:	fa3fc06f          	j	20403696 <metal_lc13_interrupt_vector_handler>

204066f8 <IRQ_LC14>:
IRQ_LC14():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
204066f8:	834fd06f          	j	2040372c <metal_lc14_interrupt_vector_handler>

204066fc <IRQ_LC15>:
IRQ_LC15():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
204066fc:	8c6fd06f          	j	204037c2 <metal_lc15_interrupt_vector_handler>

20406700 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:180
{
20406700:	1101                	addi	sp,sp,-32
20406702:	ce22                	sw	s0,28(sp)
20406704:	1000                	addi	s0,sp,32
20406706:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:181
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2040670a:	fec42703          	lw	a4,-20(s0)
2040670e:	800007b7          	lui	a5,0x80000
20406712:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffebf0>
20406716:	00f71763          	bne	a4,a5,20406724 <__metal_driver_fixed_clock_rate+0x24>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:182
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2040671a:	00f427b7          	lui	a5,0xf42
2040671e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20406722:	a825                	j	2040675a <__metal_driver_fixed_clock_rate+0x5a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:184
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20406724:	fec42703          	lw	a4,-20(s0)
20406728:	800007b7          	lui	a5,0x80000
2040672c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffebfc>
20406730:	00f71763          	bne	a4,a5,2040673e <__metal_driver_fixed_clock_rate+0x3e>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:185
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20406734:	044aa7b7          	lui	a5,0x44aa
20406738:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
2040673c:	a839                	j	2040675a <__metal_driver_fixed_clock_rate+0x5a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:187
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
2040673e:	fec42703          	lw	a4,-20(s0)
20406742:	800007b7          	lui	a5,0x80000
20406746:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffec08>
2040674a:	00f71763          	bne	a4,a5,20406758 <__metal_driver_fixed_clock_rate+0x58>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:188
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
2040674e:	01e857b7          	lui	a5,0x1e85
20406752:	80078793          	addi	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84000>
20406756:	a011                	j	2040675a <__metal_driver_fixed_clock_rate+0x5a>
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:191
		return 0;
20406758:	4781                	li	a5,0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/bsp/build/debug/./metal/machine.h:193
}
2040675a:	853e                	mv	a0,a5
2040675c:	4472                	lw	s0,28(sp)
2040675e:	6105                	addi	sp,sp,32
20406760:	8082                	ret

20406762 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20406762:	1101                	addi	sp,sp,-32
20406764:	ce06                	sw	ra,28(sp)
20406766:	cc22                	sw	s0,24(sp)
20406768:	1000                	addi	s0,sp,32
2040676a:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
2040676e:	fec42503          	lw	a0,-20(s0)
20406772:	3779                	jal	20406700 <__metal_driver_fixed_clock_rate>
20406774:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/fixed-clock.c:14
}
20406776:	853e                	mv	a0,a5
20406778:	40f2                	lw	ra,28(sp)
2040677a:	4462                	lw	s0,24(sp)
2040677c:	6105                	addi	sp,sp,32
2040677e:	8082                	ret

20406780 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20406780:	1101                	addi	sp,sp,-32
20406782:	ce06                	sw	ra,28(sp)
20406784:	cc22                	sw	s0,24(sp)
20406786:	1000                	addi	s0,sp,32
20406788:	fea42623          	sw	a0,-20(s0)
2040678c:	feb42423          	sw	a1,-24(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20406790:	fec42503          	lw	a0,-20(s0)
20406794:	37f9                	jal	20406762 <__metal_driver_fixed_clock_get_rate_hz>
20406796:	87aa                	mv	a5,a0
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/src/drivers/fixed-clock.c:19
}
20406798:	853e                	mv	a0,a5
2040679a:	40f2                	lw	ra,28(sp)
2040679c:	4462                	lw	s0,24(sp)
2040679e:	6105                	addi	sp,sp,32
204067a0:	8082                	ret

204067a2 <_exit>:
_exit():
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
204067a2:	1101                	addi	sp,sp,-32
204067a4:	ce06                	sw	ra,28(sp)
204067a6:	cc22                	sw	s0,24(sp)
204067a8:	1000                	addi	s0,sp,32
204067aa:	fea42623          	sw	a0,-20(s0)
/Users/sushmita/Work/Code/Crypto/A2-RECTANGLE/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
204067ae:	fec42503          	lw	a0,-20(s0)
204067b2:	e85ff0ef          	jal	ra,20406636 <metal_shutdown>
